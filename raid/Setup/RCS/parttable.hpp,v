head	1.2;
access;
symbols
	VSETUPv0_84:1.2
	VSETUP_82:1.2;
locks; strict;
comment	@// @;


1.2
date	2000.03.09.23.12.07;	author vitus;	state Exp;
branches;
next	1.1;

1.1
date	2000.02.13.23.56.32;	author vitus;	state Exp;
branches;
next	;


desc
@Class PartTable to read/modify partition tables
@


1.2
log
@- another constructor to tell object where extended partitions start.  This
  is important for new Type 5 partitions as their position ist calculated
  for the very first on.
- method clear() to force object to create a new partition table/sector.  Otherwise
  any previous contents of the read sector (even an old partition table!) would
  be preserved.
@
text
@/*
 * $Source: r:/source/driver/raid/setup/RCS/parttable.hpp,v $
 * $Revision: 1.1 $
 * $Date: 2000/02/13 23:56:32 $
 * $Locker: vitus $
 *
 *	Class PartTable to read/modify partition tables.
 *
 * $Log: parttable.hpp,v $
 * Revision 1.1  2000/02/13 23:56:32  vitus
 * Initial revision
 * ----------------------------------------
 * This code is Copyright Vitus Jensen 2000
 */


class PartTable {
    VOS2Disk *  disk;
    ULONG	secno;
    ULONG	extstart;

    MBR		bootrecord;
    BOOL	modified, valid;
    APIRET	rderr;				/* if !0 -> never write */

    void	readRecord(void);

public:
    PPARTITIONENTRY	entry;

    PartTable(VOS2Disk * d,ULONG n,Boolean rd=false);
    PartTable(VOS2Disk * d,ULONG n,ULONG first_extended_start);
    ~PartTable();

    void	clear(void);
    BOOL	isValid() { return valid; }
    ULONG	queryPos() { return secno; }

    BOOL	delPE(PPARTITIONENTRY partentry);

    BOOL	addPE(PARTITIONENTRY const &partentry);
    BOOL	addForeign(UCHAR type,UCHAR bootable,ULONG start,ULONG size);
    BOOL	addOwn(UCHAR type,UCHAR bootable,ULONG start,ULONG size);
    APIRET	flush();
};
@


1.1
log
@Initial revision
@
text
@d2 4
a5 4
 * $Source$
 * $Revision$
 * $Date$
 * $Locker$
d9 3
a11 1
 * $Log$
d20 1
d22 1
a22 1
    PMBR	pt;
d26 2
d31 2
a32 1
    PartTable(VOS2Disk * d,ULONG n);
d35 1
d41 1
a41 1
    BOOL	addPE(PPARTITIONENTRY partentry);
@
