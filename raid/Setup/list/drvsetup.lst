

    File: drvsetup.asm  Pass: 2   ALP: Assembly Language Processor  Ver 4.00.004   Page:    1

    xxxx-ii-yyyy-cc-f--oooo--gggggggggggggggggggg-zzz-mm-ddd--ssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssss


       1       1  0 +  0000                                           title   drvsetup.cpp
       2       2  0 +            @Cpu=00000D0F                            .386
       3       3  0 +            @Cpu=00000D0F                            .387
       4       4  0 +                                                     includelib CPPOM30.LIB
       5       5  0 +                                                     includelib OS2386.LIB
       6       6  0 +                                             CODE32  segment dword use32 public 'CODE'
       7       7  0 +  00000000                                   CODE32  ends
       8       8  0 +                                             DATA32  segment dword use32 public 'DATA'
       9       9  0 +  00000000                                   DATA32  ends
      10      10  0 +                                             CONST32_RO      segment dword use32 public 'CONST'
      11      11  0 +  00000000                                   CONST32_RO      ends
      12      12  0 +                                             BSS32   segment dword use32 public 'BSS'
      13      13  0 +  00000000                                   BSS32   ends
      14      14  0 +                                             EH_CODE segment dword use32 public 'CODE'
      15      15  0 +  00000000                                   EH_CODE ends
      16      16  0 +                                             CTOR_DTOR1      segment dword use32 public 'DATA'
      17      17  0 +  00000000                                   CTOR_DTOR1      ends
      18      18  0 +                                             CTOR_DTOR2      segment dword use32 public 'DATA'
      19      19  0 +  00000000                                   CTOR_DTOR2      ends
      20      20  0 +                                             CTOR_DTOR3      segment dword use32 public 'DATA'
      21      21  0 +  00000000                                   CTOR_DTOR3      ends
      22      22  0 +                                             EH_DATA segment para use32 public 'DATA'
      23      23  0 +  00000000                                   EH_DATA ends
      24      24  0 +                                             _VFT    segment para use32 public 'DATA'
      25      25  0 +  00000000                                   _VFT    ends
      26      26  0 +                                             DGROUP  group BSS32, DATA32
      27      27  0 +                                                     assume  cs:FLAT, ds:FLAT, ss:FLAT, es:FLAT
      28      28  0 +                                                     extrn   WinQuerySysColor:proc
      29      29  0 +                                                     extrn   ProfileRead:proc
      30      30  0 +                                                     extrn   WinQueryWindowPos:proc
      31      31  0 +                                                     extrn   Verbose:proc
      32      32  0 +                                                     extrn   WinCreateWindow:proc
      33      33  0 +                                                     extrn   MyMessageBox__FCiCUlPce:proc
      34      34  0 +                                                     extrn   WinGetLastError:proc
      35      35  0 +                                                     extrn   memset:proc
      36      36  0 +                                                     extrn   WinSendMsg:proc
      37      37  0 +                                                     extrn   WinLoadMenu:proc
      38      38  0 +                                                     extrn   WinQueryPointerPos:proc
      39      39  0 +                                                     extrn   WinMapWindowPoints:proc
      40      40  0 +                                                     extrn   SearchCnr__FUlPFUlPvT2PUl_UlPvN23:proc
      41      41  0 +                                                     extrn   EmphInuse2Source__FUlP9_MYRECORDPUlT3:proc
      42      42  0 +                                                     extrn   WinPopupMenu:proc
      43      43  0 +                                                     extrn   DrgAllocDraginfo:proc
      44      44  0 +                                                     extrn   DrgAddStrHandle:proc
      45      45  0 +                                                     extrn   DrgSetDragitem:proc
      46      46  0 +                                                     extrn   DrgDrag:proc
      47      47  0 +                                                     extrn   DrgFreeDraginfo:proc
      48      48  0 +                                                     extrn   _sprintfieee:proc
      49      49  0 +                                                     extrn   WinMessageBox:proc
      50      50  0 +                                                     extrn   LookupDisk__FUlP9_MYRECORDP5VRDevPP9_MYRECORD:proc
      51      51  0 +                                                     extrn   WinPostMsg:proc
      52      52  0 +                                                     extrn   WinQueryWindowPtr:proc
      53      53  0 +                                                     extrn   __nw__FUi:proc
      54      54  0 +                                                     extrn   _beginthread:proc
      55      55  0 +                                                     extrn   DrvscanThread:proc


    File: drvsetup.asm  Pass: 2   ALP: Assembly Language Processor  Ver 4.00.004   Page:    2
    drvsetup.cpp

    xxxx-ii-yyyy-cc-f--oooooooo--gggggggggggggggggggg-zzz-mm-ddd--ssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssss


      56      56  0 +                                                     extrn   _errno:proc
      57      57  0 +                                                     extrn   EmphSource__FUlP9_MYRECORDPUlT3:proc
      58      58  0 +                                                     extrn   QueryInuse__FUlP9_MYRECORDPUlPP9_MYRECORD:proc
      59      59  0 +                                                     extrn   WinDlgBox:proc
      60      60  0 +                                                     extrn   DrvtypeDlgProc:proc
      61      61  0 +                                                     extrn   memcpy:proc
      62      62  0 +                                                     extrn   time:proc
      63      63  0 +                                                     extrn   __dl__FPv:proc
      64      64  0 +                                                     extrn   __ct__7VSingleFPUc:proc
      65      65  0 +                                                     extrn   __ct__6VChainFPUci:proc
      66      66  0 +                                                     extrn   __ct__7VStripeFPUci:proc
      67      67  0 +                                                     extrn   __ct__7VMirrorFPUci:proc
      68      68  0 +                                                     extrn   EmphInuse__FUlP9_MYRECORDPUlT3:proc
      69      69  0 +                                                     extrn   QueryAny__FUlP9_MYRECORDPUlPP9_MYRECORD:proc
      70      70  0 +                                                     extrn   WinDestroyWindow:proc
      71      71  0 +                                                     extrn   WinQueryWindow:proc
      72      72  0 +                                                     extrn   ProfileWrite:proc
      73      73  0 +                                                     extrn   WinSetWindowPos:proc
      74      74  0 +                                                     extrn   WinQueryPresParam:proc
      75      75  0 +                                                     extrn   WinInvalidateRect:proc
      76      76  0 +                                                     extrn   strlen:proc
      77      77  0 +                                                     extrn   WinDefWindowProc:proc
      78      78  0 +                                                     extrn   _Exception_CPP:proc
      79      79  0 +                                                     extrn   WinInitialize:proc
      80      80  0 +                                                     extrn   WinCreateMsgQueue:proc
      81      81  0 +                                                     extrn   WinCancelShutdown:proc
      82      82  0 +                                                     extrn   WinRegisterClass:proc
      83      83  0 +                                                     extrn   WinCreateStdWindow:proc
      84      84  0 +                                                     extrn   WinSetWindowPtr:proc
      85      85  0 +                                                     extrn   WinQueryTaskSizePos:proc
      86      86  0 +                                                     extrn   WinGetMsg:proc
      87      87  0 +                                                     extrn   WinDispatchMsg:proc
      88      88  0 +                                                     extrn   WinDestroyMsgQueue:proc
      89      89  0 +                                                     extrn   WinTerminate:proc
      90      90  0 +                                                     extrn   usHostId:word
      91      91  0 +                                                     extrn   _fltused:dword
      92      92  0 +                                             CONST32_RO      segment
      93      93  0 +  00000000  42 61 63 6B 67 72 6F             @CBE1   db "Background",0h
                                 75 6E 64 00
      94      94  0 +  0000000B  00                                       align 04h
      95      95  0 +  0000000C  46 6F 72 65 67 72 6F             @CBE2   db "Foreground",0h
                                 75 6E 64 00
      96      96  0 +  00000017  00                                       align 04h
      97      97  0 +  00000018  44 72 76 53 65 74 75             @CBE3   db "DrvSetup",0h
                                 70 00
      98      98  0 +  00000021  00 00 00                                 align 04h
      99      99  0 +  00000024  63 6C 69 65 6E 74 20             @CBE4   db "client window %u,%u %u,%"
                                 77 69 6E 64 6F 77 20
                                 25 75 2C 25 75 20 25
                                 75 2C 25
     100     100  0 +  0000003C  75 00                            db "u",0h
     101     101  0 +  0000003E  00 00                                    align 04h
     102     102  0 +  00000040  57 69 6E 43 72 65 61             @CBE5   db "WinCreateWindow(...,WC_C"
                                 74 65 57 69 6E 64 6F


    File: drvsetup.asm  Pass: 2   ALP: Assembly Language Processor  Ver 4.00.004   Page:    3
    drvsetup.cpp

    xxxx-ii-yyyy-cc-f--oooooooo--gggggggggggggggggggg-zzz-mm-ddd--ssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssss


                                 77 28 2E 2E 2E 2C 57
                                 43 5F 43
     103     103  0 +  00000058  4F 4E 54 41 49 4E 45             db "ONTAINER,...) - error %#"
                                 52 2C 2E 2E 2E 29 20
                                 2D 20 65 72 72 6F 72
                                 20 25 23
     104     104  0 +  00000070  78 00                            db "x",0h
     105     105  0 +  00000072  00 00                                    align 04h
     106     106  0 +  00000074  57 69 6E 4C 6F 61 64             @CBE6   db "WinLoadMenu failed (last"
                                 4D 65 6E 75 20 66 61
                                 69 6C 65 64 20 28 6C
                                 61 73 74
     107     107  0 +  0000008C  20 65 72 72 6F 72 20             db " error %#x)",0h
                                 25 23 78 29 00
     108     108  0 +  00000098  70 6F 70 75 70 20 6D             @CBE7   db "popup menues %#x,%#x,%#x"
                                 65 6E 75 65 73 20 25
                                 23 78 2C 25 23 78 2C
                                 25 23 78
     109     109  0 +  000000B0  00                               db 0h
     110     110  0 +  000000B1  00 00 00                                 align 04h
     111     111  0 +  000000B4  44 6F 50 6F 70 75 70             @CBE8   db "DoPopup: %lu records in "
                                 3A 20 25 6C 75 20 72
                                 65 63 6F 72 64 73 20
                                 69 6E 20
     112     112  0 +  000000CC  75 73 65 00                      db "use",0h
     113     113  0 +  000000D0  43 4D 5F 41 4C 4C 4F             @CBE9   db "CM_ALLOCRECORD: %#x",0h
                                 43 52 45 43 4F 52 44
                                 3A 20 25 23 78 00
     114     114  0 +  000000E4  57 69 6E 53 65 6E 64             @CBE10  db "WinSendMsg(CM_INSERTRECO"
                                 4D 73 67 28 43 4D 5F
                                 49 4E 53 45 52 54 52
                                 45 43 4F
     115     115  0 +  000000FC  52 44 29 20 66 61 69             db "RD) failed - last error "
                                 6C 65 64 20 2D 20 6C
                                 61 73 74 20 65 72 72
                                 6F 72 20
     116     116  0 +  00000114  25 23 78 00                      db "%#x",0h
     117     117  0 +  00000118  44 72 61 67 49 6E 69             @CBE11  db "DragInit: record %#x",0h
                                 74 3A 20 72 65 63 6F
                                 72 64 20 25 23 78 00
     118     118  0 +  0000012D  00 00 00                                 align 04h
     119     119  0 +  00000130  44 72 61 67 49 6E 69             @CBE12  db "DragInit: record passed "
                                 74 3A 20 72 65 63 6F
                                 72 64 20 70 61 73 73
                                 65 64 20
     120     120  0 +  00000148  63 68 65 63 6B 73 00             db "checks",0h
     121     121  0 +  0000014F  00                                       align 04h
     122     122  0 +  00000150  44 52 54 5F 43 55 53             @CBE13  db "DRT_CUSTOMER",0h
                                 54 4F 4D 45 52 00
     123     123  0 +  0000015D  00 00 00                                 align 04h
     124     124  0 +  00000160  44 52 4D 5F 53 48 41             @CBE14  db "DRM_SHAREMEM,DRM_UNKNOWN"
                                 52 45 4D 45 4D 2C 44
                                 52 4D 5F 55 4E 4B 4E
                                 4F 57 4E


    File: drvsetup.asm  Pass: 2   ALP: Assembly Language Processor  Ver 4.00.004   Page:    4
    drvsetup.cpp

    xxxx-ii-yyyy-cc-f--oooooooo--gggggggggggggggggggg-zzz-mm-ddd--ssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssss


     125     125  0 +  00000178  00                               db 0h
     126     126  0 +  00000179  00 00 00                                 align 04h
     127     127  0 +  0000017C  44 72 61 67 4C 65 61             @CBE15  db "DragLeave, record %#x",0h
                                 76 65 2C 20 72 65 63
                                 6F 72 64 20 25 23 78
                                 00
     128     128  0 +  00000192  00 00                                    align 04h
     129     129  0 +  00000194  44 72 61 67 4F 76 65             @CBE16  db "DragOver, record %#x",0h
                                 72 2C 20 72 65 63 6F
                                 72 64 20 25 23 78 00
     130     130  0 +  000001A9  00 00 00                                 align 04h
     131     131  0 +  000001AC  44 72 61 67 4F 76 65             @CBE17  db "DragOver, no target",0h
                                 72 2C 20 6E 6F 20 74
                                 61 72 67 65 74 00
     132     132  0 +  000001C0  44 72 61 67 4F 76 65             @CBE18  db "DragOver, no destination"
                                 72 2C 20 6E 6F 20 64
                                 65 73 74 69 6E 61 74
                                 69 6F 6E
     133     133  0 +  000001D8  00                               db 0h
     134     134  0 +  000001D9  00 00 00                                 align 04h
     135     135  0 +  000001DC  44 72 61 67 4F 76 65             @CBE19  db "DragOver, pRecord != pmr"
                                 72 2C 20 70 52 65 63
                                 6F 72 64 20 21 3D 20
                                 70 6D 72
     136     136  0 +  000001F4  44 72 61 67 44 65 73             db "DragDestination!",0h
                                 74 69 6E 61 74 69 6F
                                 6E 21 00
     137     137  0 +  00000205  00 00 00                                 align 04h
     138     138  0 +  00000208  44 72 61 67 4F 76 65             @CBE20  db "DragOver, destination %#"
                                 72 2C 20 64 65 73 74
                                 69 6E 61 74 69 6F 6E
                                 20 25 23
     139     139  0 +  00000220  78 00                            db "x",0h
     140     140  0 +  00000222  00 00                                    align 04h
     141     141  0 +  00000224  44 72 61 67 4F 76 65             @CBE21  db "DragOver, source == dest"
                                 72 2C 20 73 6F 75 72
                                 63 65 20 3D 3D 20 64
                                 65 73 74
     142     142  0 +  0000023C  69 6E 61 74 69 6F 6E             db "ination!",0h
                                 21 00
     143     143  0 +  00000245  00 00 00                                 align 04h
     144     144  0 +  00000248  44 72 61 67 4F 76 65             @CBE22  db "DragOver, source too sma"
                                 72 2C 20 73 6F 75 72
                                 63 65 20 74 6F 6F 20
                                 73 6D 61
     145     145  0 +  00000260  6C 6C 00                         db "ll",0h
     146     146  0 +  00000263  00                                       align 04h
     147     147  0 +  00000264  44 72 61 67 4F 76 65             @CBE23  db "DragOver, bad destinatio"
                                 72 2C 20 62 61 64 20
                                 64 65 73 74 69 6E 61
                                 74 69 6F
     148     148  0 +  0000027C  6E 00                            db "n",0h
     149     149  0 +  0000027E  00 00                                    align 04h
     150     150  0 +  00000280  44 72 61 67 4F 76 65             @CBE24  db "DragOver, bad destinatio"


    File: drvsetup.asm  Pass: 2   ALP: Assembly Language Processor  Ver 4.00.004   Page:    5
    drvsetup.cpp

    xxxx-ii-yyyy-cc-f--oooooooo--gggggggggggggggggggg-zzz-mm-ddd--ssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssss


                                 72 2C 20 62 61 64 20
                                 64 65 73 74 69 6E 61
                                 74 69 6F
     151     151  0 +  00000298  6E 20 74 79 70 65 00             db "n type",0h
     152     152  0 +  0000029F  00                                       align 04h
     153     153  0 +  000002A0  44 72 61 67 4F 76 65             @CBE25  db "DragOver, destination is"
                                 72 2C 20 64 65 73 74
                                 69 6E 61 74 69 6F 6E
                                 20 69 73
     154     154  0 +  000002B8  20 61 63 63 65 70 74             db " acceptable",0h
                                 61 62 6C 65 00
     155     155  0 +  000002C4  44 72 61 67 44 72 6F             @CBE26  db "DragDrop, record %#x",0h
                                 70 2C 20 72 65 63 6F
                                 72 64 20 25 23 78 00
     156     156  0 +  000002D9  00 00 00                                 align 04h
     157     157  0 +  000002DC  44 72 61 67 44 72 6F             @CBE27  db "DragDrop, can't use exte"
                                 70 2C 20 63 61 6E 27
                                 74 20 75 73 65 20 65
                                 78 74 65
     158     158  0 +  000002F4  72 6E 61 6C 20 64 61             db "rnal data",0h
                                 74 61 00
     159     159  0 +  000002FE  00 00                                    align 04h
     160     160  0 +  00000300  54 68 69 73 20 77 69             @CBE28  db "This will destroy all da"
                                 6C 6C 20 64 65 73 74
                                 72 6F 79 20 61 6C 6C
                                 20 64 61
     161     161  0 +  00000318  74 61 20 6F 6E 20 74             db "ta on the dropped device"
                                 68 65 20 64 72 6F 70
                                 70 65 64 20 64 65 76
                                 69 63 65
     162     162  0 +  00000330  20 49 44 20 25 30 32             db " ID %02X%02X%02X%02X%02X"
                                 58 25 30 32 58 25 30
                                 32 58 25 30 32 58 25
                                 30 32 58
     163     163  0 +  00000348  25 30 32 58 2E 20 20             db "%02X.  Are you sure you "
                                 41 72 65 20 79 6F 75
                                 20 73 75 72 65 20 79
                                 6F 75 20
     164     164  0 +  00000360  77 61 6E 74 20 74 6F             db "want to do this?",0h
                                 20 64 6F 20 74 68 69
                                 73 3F 00
     165     165  0 +  00000371  00 00 00                                 align 04h
     166     166  0 +  00000374  4A 75 73 74 20 63 75             @CBE29  db "Just curious...",0h
                                 72 69 6F 75 73 2E 2E
                                 2E 00
     167     167  0 +  00000384  44 72 61 67 44 72 6F             @CBE30  db "DragDrop: found as recor"
                                 70 3A 20 66 6F 75 6E
                                 64 20 61 73 20 72 65
                                 63 6F 72
     168     168  0 +  0000039C  64 20 25 6C 75 00                db "d %lu",0h
     169     169  0 +  000003A2  00 00                                    align 04h
     170     170  0 +  000003A4  57 55 4D 5F 53 54 41             @CBE31  db "WUM_START",0h
                                 52 54 00
     171     171  0 +  000003AE  00 00                                    align 04h


    File: drvsetup.asm  Pass: 2   ALP: Assembly Language Processor  Ver 4.00.004   Page:    6
    drvsetup.cpp

    xxxx-ii-yyyy-cc-f--oooooooo--gggggggggggggggggggg-zzz-mm-ddd--ssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssss


     172     172  0 +  000003B0  5F 62 65 67 69 6E 74             @CBE32  db "_beginthread(DrvscanThre"
                                 68 72 65 61 64 28 44
                                 72 76 73 63 61 6E 54
                                 68 72 65
     173     173  0 +  000003C8  61 64 29 20 66 61 69             db "ad) failed - errno %u",0h
                                 6C 65 64 20 2D 20 65
                                 72 72 6E 6F 20 25 75
                                 00
     174     174  0 +  000003DE  00 00                                    align 04h
     175     175  0 +  000003E0  57 55 4D 5F 44 45 56             @CBE33  db "WUM_DEVTREE",0h
                                 54 52 45 45 00
     176     176  0 +  000003EC  57 4D 5F 43 4F 4E 54             @CBE34  db "WM_CONTROL",0h
                                 52 4F 4C 00
     177     177  0 +  000003F7  00                                       align 04h
     178     178  0 +  000003F8  57 4D 5F 43 4F 4E 54             @CBE35  db "WM_CONTROL (id %#x, CN_C"
                                 52 4F 4C 20 28 69 64
                                 20 25 23 78 2C 20 43
                                 4E 5F 43
     179     179  0 +  00000410  4F 4E 54 45 58 54 4D             db "ONTEXTMENU)",0h
                                 45 4E 55 29 00
     180     180  0 +  0000041C  57 4D 5F 43 4F 4E 54             @CBE36  db "WM_CONTROL (id %#x, CN_E"
                                 52 4F 4C 20 28 69 64
                                 20 25 23 78 2C 20 43
                                 4E 5F 45
     181     181  0 +  00000434  4E 54 45 52 29 00                db "NTER)",0h
     182     182  0 +  0000043A  00 00                                    align 04h
     183     183  0 +  0000043C  49 6E 74 65 72 6E 61             @CBE37  db "Internal error, can't us"
                                 6C 20 65 72 72 6F 72
                                 2C 20 63 61 6E 27 74
                                 20 75 73
     184     184  0 +  00000454  65 20 4E 55 4C 4C 20             db "e NULL device",0h
                                 64 65 76 69 63 65 00
     185     185  0 +  00000462  00 00                                    align 04h
     186     186  0 +  00000464  43 61 6E 27 74 20 77             @CBE38  db "Can't work on this devic"
                                 6F 72 6B 20 6F 6E 20
                                 74 68 69 73 20 64 65
                                 76 69 63
     187     187  0 +  0000047C  65 2C 20 72 65 6D 6F             db "e, remove parent first.",0h
                                 76 65 20 70 61 72 65
                                 6E 74 20 66 69 72 73
                                 74 2E 00
     188     188  0 +  00000494  43 61 6E 27 74 20 77             @CBE39  db "Can't work on this devic"
                                 6F 72 6B 20 6F 6E 20
                                 74 68 69 73 20 64 65
                                 76 69 63
     189     189  0 +  000004AC  65 2C 20 63 72 65 61             db "e, create physdevice fir"
                                 74 65 20 70 68 79 73
                                 64 65 76 69 63 65 20
                                 66 69 72
     190     190  0 +  000004C4  73 74 2E 00                      db "st.",0h
     191     191  0 +  000004C8  54 68 69 73 20 64 65             @CBE40  db "This device (or part of "
                                 76 69 63 65 20 28 6F
                                 72 20 70 61 72 74 20
                                 6F 66 20


    File: drvsetup.asm  Pass: 2   ALP: Assembly Language Processor  Ver 4.00.004   Page:    7
    drvsetup.cpp

    xxxx-ii-yyyy-cc-f--oooooooo--gggggggggggggggggggg-zzz-mm-ddd--ssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssss


     192     192  0 +  000004E0  69 74 29 20 69 73 20             db "it) is in use by OS/2, r"
                                 69 6E 20 75 73 65 20
                                 62 79 20 4F 53 2F 32
                                 2C 20 72
     193     193  0 +  000004F8  65 6D 6F 76 65 20 72             db "emove recognized filesys"
                                 65 63 6F 67 6E 69 7A
                                 65 64 20 66 69 6C 65
                                 73 79 73
     194     194  0 +  00000510  74 65 6D 73 20 66 69             db "tems first.",0h
                                 72 73 74 2E 00
     195     195  0 +  0000051C  57 69 6E 53 65 6E 64             @CBE41  db "WinSendMsg(CM_SETRECORDE"
                                 4D 73 67 28 43 4D 5F
                                 53 45 54 52 45 43 4F
                                 52 44 45
     196     196  0 +  00000534  4D 50 48 41 53 49 53             db "MPHASIS) failed - last e"
                                 29 20 66 61 69 6C 65
                                 64 20 2D 20 6C 61 73
                                 74 20 65
     197     197  0 +  0000054C  72 72 6F 72 20 25 23             db "rror %#x)",0h
                                 78 29 00
     198     198  0 +  00000556  00 00                                    align 04h
     199     199  0 +  00000558  57 4D 5F 43 4F 4E 54             @CBE42  db "WM_CONTROL (id %#x, CN_I"
                                 52 4F 4C 20 28 69 64
                                 20 25 23 78 2C 20 43
                                 4E 5F 49
     200     200  0 +  00000570  4E 49 54 44 52 41 47             db "NITDRAG)",0h
                                 29 00
     201     201  0 +  00000579  00 00 00                                 align 04h
     202     202  0 +  0000057C  57 4D 5F 43 4F 4E 54             @CBE43  db "WM_CONTROL (id %#x, CN_D"
                                 52 4F 4C 20 28 69 64
                                 20 25 23 78 2C 20 43
                                 4E 5F 44
     203     203  0 +  00000594  52 41 47 4F 56 45 52             db "RAGOVER)",0h
                                 29 00
     204     204  0 +  0000059D  00 00 00                                 align 04h
     205     205  0 +  000005A0  57 4D 5F 43 4F 4E 54             @CBE44  db "WM_CONTROL (id %#x, CN_D"
                                 52 4F 4C 20 28 69 64
                                 20 25 23 78 2C 20 43
                                 4E 5F 44
     206     206  0 +  000005B8  52 41 47 4C 45 41 56             db "RAGLEAVE)",0h
                                 45 29 00
     207     207  0 +  000005C2  00 00                                    align 04h
     208     208  0 +  000005C4  57 4D 5F 43 4F 4E 54             @CBE45  db "WM_CONTROL (id %#x, CN_D"
                                 52 4F 4C 20 28 69 64
                                 20 25 23 78 2C 20 43
                                 4E 5F 44
     209     209  0 +  000005DC  52 4F 50 29 00                   db "ROP)",0h
     210     210  0 +  000005E1  00 00 00                                 align 04h
     211     211  0 +  000005E4  57 4D 5F 43 4F 4E 54             @CBE46  db "WM_CONTROL (id %#x, noti"
                                 52 4F 4C 20 28 69 64
                                 20 25 23 78 2C 20 6E
                                 6F 74 69
     212     212  0 +  000005FC  66 79 20 63 6F 64 65             db "fy code %#x)",0h
                                 20 25 23 78 29 00


    File: drvsetup.asm  Pass: 2   ALP: Assembly Language Processor  Ver 4.00.004   Page:    8
    drvsetup.cpp

    xxxx-ii-yyyy-cc-f--oooooooo--gggggggggggggggggggg-zzz-mm-ddd--ssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssss


     213     213  0 +  00000609  00 00 00                                 align 04h
     214     214  0 +  0000060C  57 4D 5F 43 4F 4E 54             @CBE47  db "WM_CONTEXTMENU",0h
                                 45 58 54 4D 45 4E 55
                                 00
     215     215  0 +  0000061B  00                                       align 04h
     216     216  0 +  0000061C  57 4D 5F 4D 45 4E 55             @CBE48  db "WM_MENUEND",0h
                                 45 4E 44 00
     217     217  0 +  00000627  00                                       align 04h
     218     218  0 +  00000628  57 4D 5F 43 4F 4D 4D             @CBE49  db "WM_COMMAND",0h
                                 41 4E 44 00
     219     219  0 +  00000633  00                                       align 04h
     220     220  0 +  00000634  57 4D 5F 43 4F 4D 4D             @CBE50  db "WM_COMMAND, IDM_CREATE_P"
                                 41 4E 44 2C 20 49 44
                                 4D 5F 43 52 45 41 54
                                 45 5F 50
     221     221  0 +  0000064C  44 45 56 00                      db "DEV",0h
     222     222  0 +  00000650  57 4D 5F 43 4F 4D 4D             @CBE51  db "WM_COMMAND, IDM_COMBINE_"
                                 41 4E 44 2C 20 49 44
                                 4D 5F 43 4F 4D 42 49
                                 4E 45 5F
     223     223  0 +  00000668  44 52 56 00                      db "DRV",0h
     224     224  0 +  0000066C  25 6C 75 20 64 72 69             @CBE52  db "%lu drives are ",022h,"in-use",022h,0h
                                 76 65 73 20 61 72 65
                                 20 22 69 6E 2D 75 73
                                 65 22 00
     225     225  0 +  00000684  57 4D 5F 43 4F 4D 4D             @CBE53  db "WM_COMMAND, IDM_DESTROY_"
                                 41 4E 44 2C 20 49 44
                                 4D 5F 44 45 53 54 52
                                 4F 59 5F
     226     226  0 +  0000069C  44 52 56 00                      db "DRV",0h
     227     227  0 +  000006A0  41 72 65 20 79 6F 75             @CBE54  db "Are you sure?",0h
                                 20 73 75 72 65 3F 00
     228     228  0 +  000006AE  00 00                                    align 04h
     229     229  0 +  000006B0  57 4D 5F 43 4F 4D 4D             @CBE55  db "WM_COMMAND, IDM_DELETE_P"
                                 41 4E 44 2C 20 49 44
                                 4D 5F 44 45 4C 45 54
                                 45 5F 50
     230     230  0 +  000006C8  44 45 56 00                      db "DEV",0h
     231     231  0 +  000006CC  41 72 65 20 79 6F 75             @CBE56  db "Are you sure you want to"
                                 20 73 75 72 65 20 79
                                 6F 75 20 77 61 6E 74
                                 20 74 6F
     232     232  0 +  000006E4  20 64 65 73 74 72 6F             db " destroy ID %02X%02X%02X"
                                 79 20 49 44 20 25 30
                                 32 58 25 30 32 58 25
                                 30 32 58
     233     233  0 +  000006FC  25 30 32 58 25 30 32             db "%02X%02X%02X?",0h
                                 58 25 30 32 58 3F 00
     234     234  0 +  0000070A  00 00                                    align 04h
     235     235  0 +  0000070C  57 4D 5F 43 4F 4D 4D             @CBE57  db "WM_COMMAND, IDM_REMOVE_C"
                                 41 4E 44 2C 20 49 44
                                 4D 5F 52 45 4D 4F 56
                                 45 5F 43
     236     236  0 +  00000724  48 49 4C 44 00                   db "HILD",0h


    File: drvsetup.asm  Pass: 2   ALP: Assembly Language Processor  Ver 4.00.004   Page:    9
    drvsetup.cpp

    xxxx-ii-yyyy-cc-f--oooooooo--gggggggggggggggggggg-zzz-mm-ddd--ssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssss


     237     237  0 +  00000729  00 00 00                                 align 04h
     238     238  0 +  0000072C  41 72 65 20 79 6F 75             @CBE58  db "Are you sure you want to"
                                 20 73 75 72 65 20 79
                                 6F 75 20 77 61 6E 74
                                 20 74 6F
     239     239  0 +  00000744  20 72 65 6D 6F 76 65             db " remove ID %02X%02X%02X%"
                                 20 49 44 20 25 30 32
                                 58 25 30 32 58 25 30
                                 32 58 25
     240     240  0 +  0000075C  30 32 58 25 30 32 58             db "02X%02X%02X from array?",0h
                                 25 30 32 58 20 66 72
                                 6F 6D 20 61 72 72 61
                                 79 3F 00
     241     241  0 +  00000774  57 4D 5F 43 4F 4D 4D             @CBE59  db "WM_COMMAND %u",0h
                                 41 4E 44 20 25 75 00
     242     242  0 +  00000782  00 00                                    align 04h
     243     243  0 +  00000784  57 4D 5F 43 52 45 41             @CBE60  db "WM_CREATE",0h
                                 54 45 00
     244     244  0 +  0000078E  00 00                                    align 04h
     245     245  0 +  00000790  44 72 76 73 65 74 75             @CBE61  db "DrvsetupWindow",0h
                                 70 57 69 6E 64 6F 77
                                 00
     246     246  0 +  0000079F  00                                       align 04h
     247     247  0 +  000007A0  57 4D 5F 43 4C 4F 53             @CBE62  db "WM_CLOSE",0h
                                 45 00
     248     248  0 +  000007A9  00 00 00                                 align 04h
     249     249  0 +  000007AC  25 6C 75 20 64 72 69             @CBE63  db "%lu drives are available"
                                 76 65 73 20 61 72 65
                                 20 61 76 61 69 6C 61
                                 62 6C 65
     250     250  0 +  000007C4  00                               db 0h
     251     251  0 +  000007C5  00 00 00                                 align 04h
     252     252  0 +  000007C8  57 4D 5F 44 45 53 54             @CBE64  db "WM_DESTROY",0h
                                 52 4F 59 00
     253     253  0 +  000007D3  00                                       align 04h
     254     254  0 +  000007D4  57 4D 5F 53 49 5A 45             @CBE65  db "WM_SIZE",0h
                                 00
     255     255  0 +  000007DC  53 69 7A 65 00                   @CBE66  db "Size",0h
     256     256  0 +  000007E1  00 00 00                                 align 04h
     257     257  0 +  000007E4  57 4D 5F 4D 4F 56 45             @CBE67  db "WM_MOVE",0h
                                 00
     258     258  0 +  000007EC  50 6F 73 69 74 69 6F             @CBE68  db "Position",0h
                                 6E 00
     259     259  0 +  000007F5  00 00 00                                 align 04h
     260     260  0 +  000007F8  57 4D 5F 51 55 45 52             @CBE69  db "WM_QUERYTRACKINFO (track"
                                 59 54 52 41 43 4B 49
                                 4E 46 4F 20 28 74 72
                                 61 63 6B
     261     261  0 +  00000810  69 6E 67 20 66 6C 61             db "ing flags %#x)",0h
                                 67 73 20 25 23 78 29
                                 00
     262     262  0 +  0000081F  00                                       align 04h
     263     263  0 +  00000820  57 4D 5F 50 52 45 53             @CBE70  db "WM_PRESPARAMCHANGED(type"
                                 50 41 52 41 4D 43 48


    File: drvsetup.asm  Pass: 2   ALP: Assembly Language Processor  Ver 4.00.004   Page:   10
    drvsetup.cpp

    xxxx-ii-yyyy-cc-f--oooooooo--gggggggggggggggggggg-zzz-mm-ddd--ssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssss


                                 41 4E 47 45 44 28 74
                                 79 70 65
     264     264  0 +  00000838  20 25 23 78 29 00                db " %#x)",0h
     265     265  0 +  0000083E  00 00                                    align 04h
     266     266  0 +  00000840  57 69 6E 51 75 65 72             @CBE71  db "WinQueryPresParam failed"
                                 79 50 72 65 73 50 61
                                 72 61 6D 20 66 61 69
                                 6C 65 64
     267     267  0 +  00000858  20 2D 20 6C 61 73 74             db " - last error %#x",0h
                                 20 65 72 72 6F 72 20
                                 25 23 78 00
     268     268  0 +  0000086A  00 00                                    align 04h
     269     269  0 +  0000086C  53 65 74 20 66 6F 72             @CBE72  db "Set foreground colour to"
                                 65 67 72 6F 75 6E 64
                                 20 63 6F 6C 6F 75 72
                                 20 74 6F
     270     270  0 +  00000884  20 25 23 78 00                   db " %#x",0h
     271     271  0 +  00000889  00 00 00                                 align 04h
     272     272  0 +  0000088C  53 65 74 20 62 61 63             @CBE73  db "Set background colour to"
                                 6B 67 72 6F 75 6E 64
                                 20 63 6F 6C 6F 75 72
                                 20 74 6F
     273     273  0 +  000008A4  20 25 23 78 00                   db " %#x",0h
     274     274  0 +  000008A9  00 00 00                                 align 04h
     275     275  0 +  000008AC  53 65 74 20 66 6F 6E             @CBE74  db "Set font to ",022h,"%s",022h,0h
                                 74 20 74 6F 20 22 25
                                 73 22 00
     276     276  0 +  000008BD  00 00 00                                 align 04h
     277     277  0 +  000008C0  46 6F 6E 74 00                   @CBE75  db "Font",0h
     278     278  0 +  000008C5  00 00 00                                 align 04h
     279     279  0 +  000008C8  57 4D 5F 50 52 45 53             @CBE76  db "WM_PRESPARAMCHANGED(unsu"
                                 50 41 52 41 4D 43 48
                                 41 4E 47 45 44 28 75
                                 6E 73 75
     280     280  0 +  000008E0  70 70 6F 72 74 65 64             db "pported type %#x)",0h
                                 20 74 79 70 65 20 25
                                 23 78 29 00
     281     281  0 +  000008F2  00 00                                    align 04h
     282     282  0 +  000008F4  73 74 61 72 74 75 70             @CBE77  db "startup",0h
                                 00
     283     283  0 +  000008FC  57 69 6E 49 6E 69 74             @CBE78  db "WinInitialize failed!?!",0h
                                 69 61 6C 69 7A 65 20
                                 66 61 69 6C 65 64 21
                                 3F 21 00
     284     284  0 +  00000914  57 69 6E 43 72 65 61             @CBE79  db "WinCreateMsgQueue - erro"
                                 74 65 4D 73 67 51 75
                                 65 75 65 20 2D 20 65
                                 72 72 6F
     285     285  0 +  0000092C  72 20 25 23 78 00                db "r %#x",0h
     286     286  0 +  00000932  00 00                                    align 04h
     287     287  0 +  00000934  57 69 6E 52 65 67 69             @CBE80  db "WinRegisterClass - error"
                                 73 74 65 72 43 6C 61
                                 73 73 20 2D 20 65 72
                                 72 6F 72


    File: drvsetup.asm  Pass: 2   ALP: Assembly Language Processor  Ver 4.00.004   Page:   11
    drvsetup.cpp

    xxxx-ii-yyyy-cc-f--oooooooo--gggggggggggggggggggg-zzz-mm-ddd--ssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssss


     288     288  0 +  0000094C  20 25 23 78 00                   db " %#x",0h
     289     289  0 +  00000951  00 00 00                                 align 04h
     290     290  0 +  00000954  56 53 65 74 75 70 20             @CBE81  db "VSetup - Drive Definitio"
                                 2D 20 44 72 69 76 65
                                 20 44 65 66 69 6E 69
                                 74 69 6F
     291     291  0 +  0000096C  6E 20 57 69 6E 64 6F             db "n Window",0h
                                 77 00
     292     292  0 +  00000975  00 00 00                                 align 04h
     293     293  0 +  00000978  57 69 6E 43 72 65 61             @CBE82  db "WinCreateStdWindow - err"
                                 74 65 53 74 64 57 69
                                 6E 64 6F 77 20 2D 20
                                 65 72 72
     294     294  0 +  00000990  6F 72 20 25 23 78 00             db "or %#x",0h
     295     295  0 +  00000997  00                                       align 04h
     296     296  0 +  00000998  57 69 6E 53 65 74 57             @CBE83  db "WinSetWindowPtr failed -"
                                 69 6E 64 6F 77 50 74
                                 72 20 66 61 69 6C 65
                                 64 20 2D
     297     297  0 +  000009B0  20 65 72 72 6F 72 20             db " error %#",0h
                                 25 23 00
     298     298  0 +  000009BA  00 00                                    align 04h
     299     299  0 +  000009BC  43 6F 70 79 69 6E 67             @CBE84  db "Copying old size of wind"
                                 20 6F 6C 64 20 73 69
                                 7A 65 20 6F 66 20 77
                                 69 6E 64
     300     300  0 +  000009D4  6F 77 00                         db "ow",0h
     301     301  0 +  000009D7  00                                       align 04h
     302     302  0 +  000009D8  43 6F 70 79 69 6E 67             @CBE85  db "Copying old position of "
                                 20 6F 6C 64 20 70 6F
                                 73 69 74 69 6F 6E 20
                                 6F 66 20
     303     303  0 +  000009F0  77 69 6E 64 6F 77 00             db "window",0h
     304     304  0 +  000009F7  00                                       align 04h
     305     305  0 +  000009F8  57 69 6E 53 65 74 57             @CBE86  db "WinSetWindowPos failed ("
                                 69 6E 64 6F 77 50 6F
                                 73 20 66 61 69 6C 65
                                 64 20 28
     306     306  0 +  00000A10  6C 61 73 74 20 65 72             db "last error %#x)",0h
                                 72 6F 72 20 25 23 78
                                 29 00
     307     307  0 +  00000A20  44 72 76 53 65 74 75             @CBE87  db "DrvSetupThread: stopped",0h
                                 70 54 68 72 65 61 64
                                 3A 20 73 74 6F 70 70
                                 65 64 00
     308     308  0 +  00000A38  24 49 64 3A 20 64 72             @1vcid  db "$Id: drvsetup.cpp,v 2.9 "
                                 76 73 65 74 75 70 2E
                                 63 70 70 2C 76 20 32
                                 2E 39 20
     309     309  0 +  00000A50  32 30 30 30 2F 30 34             db "2000/04/10 01:12:09 vitu"
                                 2F 31 30 20 30 31 3A
                                 31 32 3A 30 39 20 76
                                 69 74 75
     310     310  0 +  00000A68  73 20 45 78 70 20 24             db "s Exp $",0h


    File: drvsetup.asm  Pass: 2   ALP: Assembly Language Processor  Ver 4.00.004   Page:   12
    drvsetup.cpp

    xxxx-ii-yyyy-cc-f--oooooooo--gggggggggggggggggggg-zzz-mm-ddd--ssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssss


                                 00
     311     311  0 +  00000A70                                   CONST32_RO      ends
     312     312  0 +                                             DATA32  segment
     313     313  0 +  00000000  FFFFFF01                         @2rgbBackground dd 0ffffff01h
     314     314  0 +  00000004  FFFFFF01                         @3rgbForeground dd 0ffffff01h
     315     315  0 +  00000008                                   DATA32  ends
     316     316  0 +                                             BSS32   segment
     317     317  0 +  00000000  00000000                         @bcregular      dd 0h
     318     318  0 +  00000004                                   BSS32   ends
     319     319  0 +                                             EH_DATA segment
     320     320  0 +  00000000  AD DE EF BE                      @11e__fsm_tab   db 0adh,0deh,0efh,0beh
     321     321  0 +  00000004  04 00 00 00                              db 04h,0h,0h,0h
     322     322  0 +  00000008  FFFFFFF0                                 dd -010h
     323     323  0 +  0000000C  00000000:E                               dd offset FLAT:__dl__FPv
     324     324  0 +  00000010  FD FF FF FF                              db 0fdh,0ffh,0ffh,0ffh
     325     325  0 +  00000014  30 00 00 00                              db "0",0h,0h,0h
     326     326  0 +  00000018  00 00                                    db 0h,0h
     327     327  0 +  0000001A  00 00                                    db 0h,0h
     328     328  0 +  0000001C  FFFFFFEC                                 dd -014h
     329     329  0 +  00000020  00000000:E                               dd offset FLAT:__dl__FPv
     330     330  0 +  00000024  FD FF FF FF                              db 0fdh,0ffh,0ffh,0ffh
     331     331  0 +  00000028  30 01 00 00                              db "0",01h,0h,0h
     332     332  0 +  0000002C  00 00                                    db 0h,0h
     333     333  0 +  0000002E  00 00                                    db 0h,0h
     334     334  0 +  00000030  FFFFFFE8                                 dd -018h
     335     335  0 +  00000034  00000000:E                               dd offset FLAT:__dl__FPv
     336     336  0 +  00000038  FD FF FF FF                              db 0fdh,0ffh,0ffh,0ffh
     337     337  0 +  0000003C  30 01 00 00                              db "0",01h,0h,0h
     338     338  0 +  00000040  00 00                                    db 0h,0h
     339     339  0 +  00000042  00 00                                    db 0h,0h
     340     340  0 +  00000044  FFFFFFE4                                 dd -01ch
     341     341  0 +  00000048  00000000:E                               dd offset FLAT:__dl__FPv
     342     342  0 +  0000004C  FD FF FF FF                              db 0fdh,0ffh,0ffh,0ffh
     343     343  0 +  00000050  34 01 00 00                              db "4",01h,0h,0h
     344     344  0 +  00000054  00 00                                    db 0h,0h
     345     345  0 +  00000056  00 00                                    db 0h,0h
     346     346  0 +  00000058                                   EH_DATA ends
     347     347  0 +                                             CODE32  segment
     348     348  0 +
     349     349  0 +                                             ; 1524 DrvsetupThread(void *dummy)
     350     350  0 +
     351     351  0 +                                                     public DrvsetupThread
     352     352  0 +  00000000                                   DrvsetupThread  proc
     353     353  0 +  00000000  55                                       push    ebp
     354     354  0 +
     355     355  0 +                                             ; 1534     Verbose(2, "DrvSetup", "startup");
     356     356  0 +  00000001  B9 000008F4:R                            mov     ecx,offset FLAT:@CBE77
     357     357  0 +
     358     358  0 +                                             ; 1524 DrvsetupThread(void *dummy)
     359     359  0 +  00000006  8B EC                                    mov     ebp,esp
     360     360  0 +  00000008  53                                       push    ebx
     361     361  0 +
     362     362  0 +                                             ; 1534     Verbose(2, "DrvSetup", "startup");
     363     363  0 +  00000009  BB 00000018:R                            mov     ebx,offset FLAT:@CBE3


    File: drvsetup.asm  Pass: 2   ALP: Assembly Language Processor  Ver 4.00.004   Page:   13
    drvsetup.cpp

    xxxx-ii-yyyy-cc-f--oooooooo--gggggggggggggggggggg-zzz-mm-ddd--ssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssss


     364     364  0 +
     365     365  0 +                                             ; 1524 DrvsetupThread(void *dummy)
     366     366  0 +  0000000E  57                                       push    edi
     367     367  0 +  0000000F  8B F8                                    mov     edi,eax
     368     368  0 +  00000011  56                                       push    esi
     369     369  0 +
     370     370  0 +                                             ; 1534     Verbose(2, "DrvSetup", "startup");
     371     371  0 +  00000012  8B D3                                    mov     edx,ebx
     372     372  0 +
     373     373  0 +                                             ; 1524 DrvsetupThread(void *dummy)
     374     374  0 +  00000014  81 EC 0000008C                           sub     esp,08ch
     375     375  0 +
     376     376  0 +                                             ; 1534     Verbose(2, "DrvSetup", "startup");
     377     377  0 +  0000001A  B8 00000002                              mov     eax,02h
     378     378  0 +  0000001F  E8 00000000:E                            call    Verbose
     379     379  0 +
     380     380  0 +                                             ; 1537  work = new WORK;
     381     381  0 +  00000024  B8 00000028                              mov     eax,028h
     382     382  0 +  00000029  E8 00000000:E                            call    __nw__FUi
     383     383  0 +  0000002E  8B F0                                    mov     esi,eax
     384     384  0 +
     385     385  0 +                                             ; 1538  memset(work, 0, sizeof(WORK));
     386     386  0 +  00000030  B9 00000028                              mov     ecx,028h
     387     387  0 +  00000035  33 D2                                    xor     edx,edx
     388     388  0 +  00000037  E8 00000000:E                            call    memset
     389     389  0 +
     390     390  0 +                                             ; 1541  if( (work->hab = WinInitialize(0)) )
     391     391  0 +  0000003C  6A 00                                    push    0h
     392     392  0 +
     393     393  0 +                                             ; 1537  work = new WORK;
     394     394  0 +  0000003E  89 75 [F0]                               mov     [ebp-010h],esi; work
     395     395  0 +
     396     396  0 +                                             ; 1538  memset(work, 0, sizeof(WORK));
     397     397  0 +  00000041  8B C7                                    mov     eax,edi
     398     398  0 +
     399     399  0 +                                             ; 1539  work->self = dta;
     400     400  0 +  00000043  89 06                                    mov     [esi],eax
     401     401  0 +
     402     402  0 +                                             ; 1541  if( (work->hab = WinInitialize(0)) )
     403     403  0 +  00000045  E8 00000000:E                            call    WinInitialize
     404     404  0 +  0000004A  83 C4 04                                 add     esp,04h
     405     405  0 +  0000004D  89 46 [04]                               mov     [esi+04h],eax
     406     406  0 +  00000050  83 7E [04] 00                            cmp     dword ptr [esi+04h],0h
     407     407  0 +  00000054  8B D3                                    mov     edx,ebx
     408     408  0 +  00000056  0F 85 0000006D:R                         jne     @BLBL130
     409     409  0 +
     410     410  0 +                                             ; 1543      Verbose(0, "DrvSetup", "WinInitialize failed?");
     411     411  0 +  0000005C  33 C0                                    xor     eax,eax
     412     412  0 +  0000005E  B9 000008FC:R                            mov     ecx,offset FLAT:@CBE78
     413     413  0 +  00000063  E8 00000000:E                            call    Verbose
     414     414  0 +
     415     415  0 +                                             ; 1544      break;
     416     416  0 +  00000068  E9 0000032C:R                            jmp     @BLBL131
     417     417  0 +  0000006D                                   @BLBL130:


    File: drvsetup.asm  Pass: 2   ALP: Assembly Language Processor  Ver 4.00.004   Page:   14
    drvsetup.cpp

    xxxx-ii-yyyy-cc-f--oooooooo--gggggggggggggggggggg-zzz-mm-ddd--ssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssss


     418     418  0 +
     419     419  0 +                                             ; 1547  if( (hmq = WinCreateMsgQueue(work->hab, 0)) )
     420     420  0 +  0000006D  8B 5D [F0]                               mov     ebx,[ebp-010h]; work
     421     421  0 +  00000070  6A 00                                    push    0h
     422     422  0 +  00000072  FF 73 [04]                               push    dword ptr [ebx+04h]
     423     423  0 +  00000075  E8 00000000:E                            call    WinCreateMsgQueue
     424     424  0 +  0000007A  83 C4 08                                 add     esp,08h
     425     425  0 +  0000007D  89 45 [E4]                               mov     [ebp-01ch],eax; hmq
     426     426  0 +  00000080  85 C0                                    test    eax,eax
     427     427  0 +  00000082  0F 85 000000AD:R                         jne     @BLBL132
     428     428  0 +
     429     429  0 +                                             ; 1549      Verbose(0, "DrvSetup", "WinCreateMsgQueue - error %#x",
     430     430  0 +  00000088  FF 73 [04]                               push    dword ptr [ebx+04h]
     431     431  0 +  0000008B  E8 00000000:E                            call    WinGetLastError
     432     432  0 +  00000090  50                                       push    eax
     433     433  0 +  00000091  B9 00000914:R                            mov     ecx,offset FLAT:@CBE79
     434     434  0 +  00000096  83 EC 0C                                 sub     esp,0ch
     435     435  0 +  00000099  BA 00000018:R                            mov     edx,offset FLAT:@CBE3
     436     436  0 +  0000009E  33 C0                                    xor     eax,eax
     437     437  0 +  000000A0  E8 00000000:E                            call    Verbose
     438     438  0 +  000000A5  83 C4 14                                 add     esp,014h
     439     439  0 +
     440     440  0 +                                             ; 1551      break;
     441     441  0 +  000000A8  E9 0000032C:R                            jmp     @BLBL131
     442     442  0 +  000000AD                                   @BLBL132:
     443     443  0 +
     444     444  0 +                                             ; 1553  WinCancelShutdown(hmq, TRUE);           /* don't want to handle it */
     445     445  0 +  000000AD  6A 01                                    push    01h
     446     446  0 +
     447     447  0 +                                             ; 1555  if( WinRegisterClass(work->hab, WC_DRVSETUP, DrvsetupWindowProc,
     448     448  0 +  000000AF  8B 5D [F0]                               mov     ebx,[ebp-010h]; work
     449     449  0 +
     450     450  0 +                                             ; 1553  WinCancelShutdown(hmq, TRUE);           /* don't want to handle it */
     451     451  0 +  000000B2  FF 75 [E4]                               push    dword ptr [ebp-01ch];   hmq
     452     452  0 +  000000B5  E8 00000000:E                            call    WinCancelShutdown
     453     453  0 +
     454     454  0 +                                             ; 1555  if( WinRegisterClass(work->hab, WC_DRVSETUP, DrvsetupWindowProc,
     455     455  0 +  000000BA  6A 04                                    push    04h
     456     456  0 +  000000BC  6A 01                                    push    01h
     457     457  0 +  000000BE  68 0000034B:R                            push    offset FLAT: DrvsetupWindowProc
     458     458  0 +  000000C3  68 00000790:R                            push    offset FLAT:@CBE61
     459     459  0 +  000000C8  FF 73 [04]                               push    dword ptr [ebx+04h]
     460     460  0 +  000000CB  E8 00000000:E                            call    WinRegisterClass
     461     461  0 +  000000D0  83 C4 1C                                 add     esp,01ch
     462     462  0 +  000000D3  85 C0                                    test    eax,eax
     463     463  0 +  000000D5  0F 85 00000100:R                         jne     @BLBL133
     464     464  0 +
     465     465  0 +                                             ; 1558      Verbose(0, "DrvSetup", "WinRegisterClass - error %#x",
     466     466  0 +  000000DB  FF 73 [04]                               push    dword ptr [ebx+04h]
     467     467  0 +  000000DE  E8 00000000:E                            call    WinGetLastError
     468     468  0 +  000000E3  50                                       push    eax
     469     469  0 +  000000E4  B9 00000934:R                            mov     ecx,offset FLAT:@CBE80
     470     470  0 +  000000E9  83 EC 0C                                 sub     esp,0ch
     471     471  0 +  000000EC  BA 00000018:R                            mov     edx,offset FLAT:@CBE3


    File: drvsetup.asm  Pass: 2   ALP: Assembly Language Processor  Ver 4.00.004   Page:   15
    drvsetup.cpp

    xxxx-ii-yyyy-cc-f--oooooooo--gggggggggggggggggggg-zzz-mm-ddd--ssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssss


     472     472  0 +  000000F1  33 C0                                    xor     eax,eax
     473     473  0 +  000000F3  E8 00000000:E                            call    Verbose
     474     474  0 +  000000F8  83 C4 14                                 add     esp,014h
     475     475  0 +
     476     476  0 +                                             ; 1560      break;
     477     477  0 +  000000FB  E9 0000032C:R                            jmp     @BLBL131
     478     478  0 +  00000100                                   @BLBL133:
     479     479  0 +
     480     480  0 +                                             ; 1566  hwndFrame = WinCreateStdWindow(HWND_DESKTOP, WS_ANIMATE, &flCreate,
     481     481  0 +  00000100  8D 5D [EC]                               lea     ebx,[ebp-014h]; hwndClient
     482     482  0 +  00000103  53                                       push    ebx
     483     483  0 +  00000104  8D 5D [E0]                               lea     ebx,[ebp-020h]; flCreate
     484     484  0 +  00000107  68 00000190                              push    0190h
     485     485  0 +
     486     486  0 +                                             ; 1563  flCreate = FCF_SIZEBORDER | FCF_TASKLIST | FCF_SYSMENU | FCF_TITLEBAR
     487     487  0 +  0000010C  C7 45 [E0] 0000483B                      mov     dword ptr [ebp-020h],0483bh;    flCreate
     488     488  0 +
     489     489  0 +                                             ; 1566  hwndFrame = WinCreateStdWindow(HWND_DESKTOP, WS_ANIMATE, &flCreate,
     490     490  0 +  00000113  6A 00                                    push    0h
     491     491  0 +  00000115  6A 00                                    push    0h
     492     492  0 +  00000117  68 00000954:R                            push    offset FLAT:@CBE81
     493     493  0 +  0000011C  68 00000790:R                            push    offset FLAT:@CBE61
     494     494  0 +  00000121  53                                       push    ebx
     495     495  0 +  00000122  68 00400000                              push    0400000h
     496     496  0 +  00000127  6A 01                                    push    01h
     497     497  0 +  00000129  E8 00000000:E                            call    WinCreateStdWindow
     498     498  0 +  0000012E  83 C4 24                                 add     esp,024h
     499     499  0 +  00000131  89 45 [DC]                               mov     [ebp-024h],eax; hwndFrame
     500     500  0 +
     501     501  0 +                                             ; 1572  if( hwndFrame == 0  ||  hwndClient == 0 )
     502     502  0 +  00000134  85 C0                                    test    eax,eax
     503     503  0 +  00000136  0F 84 00000146:R                         je      @BLBL134
     504     504  0 +  0000013C  83 7D [EC] 00                            cmp     dword ptr [ebp-014h],0h;        hwndClient
     505     505  0 +  00000140  0F 85 0000016E:R                         jne     @BLBL135
     506     506  0 +  00000146                                   @BLBL134:
     507     507  0 +
     508     508  0 +                                             ; 1574      Verbose(0, "DrvSetup", "WinCreateStdWindow - error %#x",
     509     509  0 +  00000146  8B 5D [F0]                               mov     ebx,[ebp-010h]; work
     510     510  0 +  00000149  FF 73 [04]                               push    dword ptr [ebx+04h]
     511     511  0 +  0000014C  E8 00000000:E                            call    WinGetLastError
     512     512  0 +  00000151  50                                       push    eax
     513     513  0 +  00000152  B9 00000978:R                            mov     ecx,offset FLAT:@CBE82
     514     514  0 +  00000157  83 EC 0C                                 sub     esp,0ch
     515     515  0 +  0000015A  BA 00000018:R                            mov     edx,offset FLAT:@CBE3
     516     516  0 +  0000015F  33 C0                                    xor     eax,eax
     517     517  0 +  00000161  E8 00000000:E                            call    Verbose
     518     518  0 +  00000166  83 C4 14                                 add     esp,014h
     519     519  0 +
     520     520  0 +                                             ; 1576      break;                              /* couldn't create window for some
     521     521  0 +  00000169  E9 0000032C:R                            jmp     @BLBL131
     522     522  0 +  0000016E                                   @BLBL135:
     523     523  0 +
     524     524  0 +                                             ; 1582  bool = WinSetWindowPtr(hwndClient, 0, work);
     525     525  0 +  0000016E  8B 5D [F0]                               mov     ebx,[ebp-010h]; work


    File: drvsetup.asm  Pass: 2   ALP: Assembly Language Processor  Ver 4.00.004   Page:   16
    drvsetup.cpp

    xxxx-ii-yyyy-cc-f--oooooooo--gggggggggggggggggggg-zzz-mm-ddd--ssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssss


     526     526  0 +  00000171  53                                       push    ebx
     527     527  0 +  00000172  6A 00                                    push    0h
     528     528  0 +  00000174  FF 75 [EC]                               push    dword ptr [ebp-014h];   hwndClient
     529     529  0 +  00000177  E8 00000000:E                            call    WinSetWindowPtr
     530     530  0 +  0000017C  83 C4 0C                                 add     esp,0ch
     531     531  0 +
     532     532  0 +                                             ; 1583  if( bool == FALSE )
     533     533  0 +  0000017F  85 C0                                    test    eax,eax
     534     534  0 +  00000181  0F 85 000001AC:R                         jne     @BLBL136
     535     535  0 +
     536     536  0 +                                             ; 1585      MyMessageBox(0, HWND_DESKTOP,
     537     537  0 +  00000187  FF 73 [04]                               push    dword ptr [ebx+04h]
     538     538  0 +  0000018A  E8 00000000:E                            call    WinGetLastError
     539     539  0 +  0000018F  50                                       push    eax
     540     540  0 +  00000190  B9 00000998:R                            mov     ecx,offset FLAT:@CBE83
     541     541  0 +  00000195  83 EC 0C                                 sub     esp,0ch
     542     542  0 +  00000198  BA 00000001                              mov     edx,01h
     543     543  0 +  0000019D  33 C0                                    xor     eax,eax
     544     544  0 +  0000019F  E8 00000000:E                            call    MyMessageBox__FCiCUlPce
     545     545  0 +  000001A4  83 C4 14                                 add     esp,014h
     546     546  0 +
     547     547  0 +                                             ; 1588      break;
     548     548  0 +  000001A7  E9 0000032C:R                            jmp     @BLBL131
     549     549  0 +  000001AC                                   @BLBL136:
     550     550  0 +
     551     551  0 +                                             ; 1591  WinPostMsg(hwndClient, WUM_START, 0, 0);
     552     552  0 +  000001AC  6A 00                                    push    0h
     553     553  0 +
     554     554  0 +                                             ; 1603      WinQueryTaskSizePos(work->hab, 0, &swp);
     555     555  0 +  000001AE  8D 5D [B8]                               lea     ebx,[ebp-048h]; swp
     556     556  0 +
     557     557  0 +                                             ; 1591  WinPostMsg(hwndClient, WUM_START, 0, 0);
     558     558  0 +  000001B1  6A 00                                    push    0h
     559     559  0 +  000001B3  68 00001002                              push    01002h
     560     560  0 +  000001B8  FF 75 [EC]                               push    dword ptr [ebp-014h];   hwndClient
     561     561  0 +  000001BB  E8 00000000:E                            call    WinPostMsg
     562     562  0 +
     563     563  0 +                                             ; 1603      WinQueryTaskSizePos(work->hab, 0, &swp);
     564     564  0 +  000001C0  53                                       push    ebx
     565     565  0 +  000001C1  8B 5D [F0]                               mov     ebx,[ebp-010h]; work
     566     566  0 +  000001C4  6A 00                                    push    0h
     567     567  0 +  000001C6  FF 73 [04]                               push    dword ptr [ebx+04h]
     568     568  0 +
     569     569  0 +                                             ; 1606      if( ProfileRead(WC_DRVSETUP, "Size", &cb, &tmp) == 0 )
     570     570  0 +  000001C9  8D 5D [94]                               lea     ebx,[ebp-06ch]; tmp
     571     571  0 +
     572     572  0 +                                             ; 1603      WinQueryTaskSizePos(work->hab, 0, &swp);
     573     573  0 +  000001CC  E8 00000000:E                            call    WinQueryTaskSizePos
     574     574  0 +
     575     575  0 +                                             ; 1606      if( ProfileRead(WC_DRVSETUP, "Size", &cb, &tmp) == 0 )
     576     576  0 +  000001D1  53                                       push    ebx
     577     577  0 +
     578     578  0 +                                             ; 1605      cb = sizeof(tmp);
     579     579  0 +  000001D2  C7 45 [E8] 00000024                      mov     dword ptr [ebp-018h],024h;      cb


    File: drvsetup.asm  Pass: 2   ALP: Assembly Language Processor  Ver 4.00.004   Page:   17
    drvsetup.cpp

    xxxx-ii-yyyy-cc-f--oooooooo--gggggggggggggggggggg-zzz-mm-ddd--ssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssss


     580     580  0 +
     581     581  0 +                                             ; 1606      if( ProfileRead(WC_DRVSETUP, "Size", &cb, &tmp) == 0 )
     582     582  0 +  000001D9  83 EC 0C                                 sub     esp,0ch
     583     583  0 +  000001DC  8D 4D [E8]                               lea     ecx,[ebp-018h]; cb
     584     584  0 +  000001DF  BA 000007DC:R                            mov     edx,offset FLAT:@CBE66
     585     585  0 +  000001E4  B8 00000790:R                            mov     eax,offset FLAT:@CBE61
     586     586  0 +  000001E9  E8 00000000:E                            call    ProfileRead
     587     587  0 +  000001EE  83 C4 2C                                 add     esp,02ch
     588     588  0 +  000001F1  85 C0                                    test    eax,eax
     589     589  0 +  000001F3  0F 85 0000021D:R                         jne     @BLBL137
     590     590  0 +
     591     591  0 +                                             ; 1608          Verbose(3, "DrvSetup", "Copying old size of window");
     592     592  0 +  000001F9  B9 000009BC:R                            mov     ecx,offset FLAT:@CBE84
     593     593  0 +  000001FE  BA 00000018:R                            mov     edx,offset FLAT:@CBE3
     594     594  0 +  00000203  B8 00000003                              mov     eax,03h
     595     595  0 +  00000208  E8 00000000:E                            call    Verbose
     596     596  0 +
     597     597  0 +                                             ; 1609          swp.cx = tmp.cx;
     598     598  0 +  0000020D  8B 45 [9C]                               mov     eax,[ebp-064h]; tmp
     599     599  0 +  00000210  89 45 [C0]                               mov     [ebp-040h],eax; swp
     600     600  0 +
     601     601  0 +                                             ; 1610          swp.cy = tmp.cy;
     602     602  0 +  00000213  8B 45 [98]                               mov     eax,[ebp-068h]; tmp
     603     603  0 +
     604     604  0 +                                             ; 1611          swp.fl |= SWP_SIZE;
     605     605  0 +  00000216  80 4D [B8] 01                            or      byte ptr [ebp-048h],01h;        swp
     606     606  0 +
     607     607  0 +                                             ; 1610          swp.cy = tmp.cy;
     608     608  0 +  0000021A  89 45 [BC]                               mov     [ebp-044h],eax; swp
     609     609  0 +
     610     610  0 +                                             ; 1612      }
     611     611  0 +  0000021D                                   @BLBL137:
     612     612  0 +
     613     613  0 +                                             ; 1614      if( ProfileRead(WC_DRVSETUP, "Position", &cb, &tmp) == 0 )
     614     614  0 +  0000021D  8D 5D [94]                               lea     ebx,[ebp-06ch]; tmp
     615     615  0 +  00000220  53                                       push    ebx
     616     616  0 +
     617     617  0 +                                             ; 1613      cb = sizeof(tmp);
     618     618  0 +  00000221  C7 45 [E8] 00000024                      mov     dword ptr [ebp-018h],024h;      cb
     619     619  0 +
     620     620  0 +                                             ; 1614      if( ProfileRead(WC_DRVSETUP, "Position", &cb, &tmp) == 0 )
     621     621  0 +  00000228  83 EC 0C                                 sub     esp,0ch
     622     622  0 +  0000022B  8D 4D [E8]                               lea     ecx,[ebp-018h]; cb
     623     623  0 +  0000022E  BA 000007EC:R                            mov     edx,offset FLAT:@CBE68
     624     624  0 +  00000233  B8 00000790:R                            mov     eax,offset FLAT:@CBE61
     625     625  0 +  00000238  E8 00000000:E                            call    ProfileRead
     626     626  0 +  0000023D  83 C4 10                                 add     esp,010h
     627     627  0 +  00000240  85 C0                                    test    eax,eax
     628     628  0 +  00000242  0F 85 0000026C:R                         jne     @BLBL138
     629     629  0 +
     630     630  0 +                                             ; 1616          Verbose(3, "DrvSetup", "Copying old position of window");
     631     631  0 +  00000248  B9 000009D8:R                            mov     ecx,offset FLAT:@CBE85
     632     632  0 +  0000024D  BA 00000018:R                            mov     edx,offset FLAT:@CBE3
     633     633  0 +  00000252  B8 00000003                              mov     eax,03h


    File: drvsetup.asm  Pass: 2   ALP: Assembly Language Processor  Ver 4.00.004   Page:   18
    drvsetup.cpp

    xxxx-ii-yyyy-cc-f--oooooooo--gggggggggggggggggggg-zzz-mm-ddd--ssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssss


     634     634  0 +  00000257  E8 00000000:E                            call    Verbose
     635     635  0 +
     636     636  0 +                                             ; 1617          swp.x = tmp.x;
     637     637  0 +  0000025C  8B 45 [A4]                               mov     eax,[ebp-05ch]; tmp
     638     638  0 +  0000025F  89 45 [C8]                               mov     [ebp-038h],eax; swp
     639     639  0 +
     640     640  0 +                                             ; 1618          swp.y = tmp.y;
     641     641  0 +  00000262  8B 45 [A0]                               mov     eax,[ebp-060h]; tmp
     642     642  0 +
     643     643  0 +                                             ; 1619          swp.fl |= SWP_MOVE;
     644     644  0 +  00000265  80 4D [B8] 02                            or      byte ptr [ebp-048h],02h;        swp
     645     645  0 +
     646     646  0 +                                             ; 1618          swp.y = tmp.y;
     647     647  0 +  00000269  89 45 [C4]                               mov     [ebp-03ch],eax; swp
     648     648  0 +
     649     649  0 +                                             ; 1620      }
     650     650  0 +  0000026C                                   @BLBL138:
     651     651  0 +
     652     652  0 +                                             ; 1622      swp.fl |= SWP_SHOW;
     653     653  0 +  0000026C  8B 5D [B8]                               mov     ebx,[ebp-048h]; swp
     654     654  0 +  0000026F  80 CB 08                                 or      bl,08h
     655     655  0 +
     656     656  0 +                                             ; 1623      bool = WinSetWindowPos(hwndFrame, HWND_TOP,
     657     657  0 +  00000272  53                                       push    ebx
     658     658  0 +
     659     659  0 +                                             ; 1622      swp.fl |= SWP_SHOW;
     660     660  0 +  00000273  89 5D [B8]                               mov     [ebp-048h],ebx; swp
     661     661  0 +
     662     662  0 +                                             ; 1623      bool = WinSetWindowPos(hwndFrame, HWND_TOP,
     663     663  0 +  00000276  FF 75 [BC]                               push    dword ptr [ebp-044h];   swp
     664     664  0 +  00000279  FF 75 [C0]                               push    dword ptr [ebp-040h];   swp
     665     665  0 +  0000027C  FF 75 [C4]                               push    dword ptr [ebp-03ch];   swp
     666     666  0 +  0000027F  FF 75 [C8]                               push    dword ptr [ebp-038h];   swp
     667     667  0 +  00000282  6A 03                                    push    03h
     668     668  0 +  00000284  FF 75 [DC]                               push    dword ptr [ebp-024h];   hwndFrame
     669     669  0 +  00000287  E8 00000000:E                            call    WinSetWindowPos
     670     670  0 +  0000028C  83 C4 1C                                 add     esp,01ch
     671     671  0 +
     672     672  0 +                                             ; 1625      if( bool == FALSE )
     673     673  0 +  0000028F  85 C0                                    test    eax,eax
     674     674  0 +  00000291  0F 85 000002BD:R                         jne     @BLBL139
     675     675  0 +
     676     676  0 +                                             ; 1626          Verbose(1, "DrvSetup", "WinSetWindowPos failed (last error %#x)",
     677     677  0 +  00000297  8B 5D [F0]                               mov     ebx,[ebp-010h]; work
     678     678  0 +  0000029A  FF 73 [04]                               push    dword ptr [ebx+04h]
     679     679  0 +  0000029D  E8 00000000:E                            call    WinGetLastError
     680     680  0 +  000002A2  50                                       push    eax
     681     681  0 +  000002A3  B9 000009F8:R                            mov     ecx,offset FLAT:@CBE86
     682     682  0 +  000002A8  83 EC 0C                                 sub     esp,0ch
     683     683  0 +  000002AB  BA 00000018:R                            mov     edx,offset FLAT:@CBE3
     684     684  0 +  000002B0  B8 00000001                              mov     eax,01h
     685     685  0 +  000002B5  E8 00000000:E                            call    Verbose
     686     686  0 +  000002BA  83 C4 14                                 add     esp,014h
     687     687  0 +


    File: drvsetup.asm  Pass: 2   ALP: Assembly Language Processor  Ver 4.00.004   Page:   19
    drvsetup.cpp

    xxxx-ii-yyyy-cc-f--oooooooo--gggggggggggggggggggg-zzz-mm-ddd--ssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssss


     688     688  0 +                                             ; 1627                  WinGetLastError(work->hab));
     689     689  0 +  000002BD                                   @BLBL139:
     690     690  0 +
     691     691  0 +                                             ; 1632  while( WinGetMsg(work->hab, &qmsg, 0L, 0, 0) )
     692     692  0 +  000002BD  6A 00                                    push    0h
     693     693  0 +  000002BF  8D 8D [FFFFFF74]                         lea     ecx,[ebp-08ch]; qmsg
     694     694  0 +  000002C5  6A 00                                    push    0h
     695     695  0 +  000002C7  8B 5D [F0]                               mov     ebx,[ebp-010h]; work
     696     696  0 +  000002CA  6A 00                                    push    0h
     697     697  0 +  000002CC  51                                       push    ecx
     698     698  0 +  000002CD  FF 73 [04]                               push    dword ptr [ebx+04h]
     699     699  0 +  000002D0  E8 00000000:E                            call    WinGetMsg
     700     700  0 +  000002D5  83 C4 14                                 add     esp,014h
     701     701  0 +  000002D8  85 C0                                    test    eax,eax
     702     702  0 +  000002DA  0F 84 00000307:R                         je      @BLBL140
     703     703  0 +  000002E0  8B FB                                    mov     edi,ebx
     704     704  0 +  000002E2                                   @BLBL141:
     705     705  0 +
     706     706  0 +                                             ; 1633      WinDispatchMsg(work->hab, &qmsg);
     707     707  0 +  000002E2  8D 9D [FFFFFF74]                         lea     ebx,[ebp-08ch]; qmsg
     708     708  0 +  000002E8  53                                       push    ebx
     709     709  0 +  000002E9  FF 77 [04]                               push    dword ptr [edi+04h]
     710     710  0 +  000002EC  E8 00000000:E                            call    WinDispatchMsg
     711     711  0 +
     712     712  0 +                                             ; 1632  while( WinGetMsg(work->hab, &qmsg, 0L, 0, 0) )
     713     713  0 +  000002F1  6A 00                                    push    0h
     714     714  0 +  000002F3  6A 00                                    push    0h
     715     715  0 +  000002F5  6A 00                                    push    0h
     716     716  0 +  000002F7  53                                       push    ebx
     717     717  0 +  000002F8  FF 77 [04]                               push    dword ptr [edi+04h]
     718     718  0 +  000002FB  E8 00000000:E                            call    WinGetMsg
     719     719  0 +  00000300  83 C4 1C                                 add     esp,01ch
     720     720  0 +  00000303  85 C0                                    test    eax,eax
     721     721  0 +  00000305  75 DB                                    jne     @BLBL141
     722     722  0 +  00000307                                   @BLBL140:
     723     723  0 +
     724     724  0 +                                             ; 1637  WinDestroyWindow(hwndFrame);
     725     725  0 +  00000307  FF 75 [DC]                               push    dword ptr [ebp-024h];   hwndFrame
     726     726  0 +
     727     727  0 +                                             ; 1639  WinTerminate(work->hab);
     728     728  0 +  0000030A  8B 75 [F0]                               mov     esi,[ebp-010h]; work
     729     729  0 +
     730     730  0 +                                             ; 1637  WinDestroyWindow(hwndFrame);
     731     731  0 +  0000030D  E8 00000000:E                            call    WinDestroyWindow
     732     732  0 +
     733     733  0 +                                             ; 1638  WinDestroyMsgQueue(hmq);
     734     734  0 +  00000312  FF 75 [E4]                               push    dword ptr [ebp-01ch];   hmq
     735     735  0 +  00000315  E8 00000000:E                            call    WinDestroyMsgQueue
     736     736  0 +
     737     737  0 +                                             ; 1639  WinTerminate(work->hab);
     738     738  0 +  0000031A  FF 76 [04]                               push    dword ptr [esi+04h]
     739     739  0 +  0000031D  E8 00000000:E                            call    WinTerminate
     740     740  0 +  00000322  8B C6                                    mov     eax,esi
     741     741  0 +


    File: drvsetup.asm  Pass: 2   ALP: Assembly Language Processor  Ver 4.00.004   Page:   20
    drvsetup.cpp

    xxxx-ii-yyyy-cc-f--oooooooo--gggggggggggggggggggg-zzz-mm-ddd--ssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssss


     742     742  0 +                                             ; 1640  delete work;
     743     743  0 +  00000324  E8 00000000:E                            call    __dl__FPv
     744     744  0 +  00000329  83 C4 0C                                 add     esp,0ch
     745     745  0 +
     746     746  0 +                                             ; 1642     while(0);
     747     747  0 +  0000032C                                   @BLBL131:
     748     748  0 +
     749     749  0 +                                             ; 1644     Verbose(2, "DrvSetup", "DrvSetupThread: stopped");
     750     750  0 +  0000032C  B9 00000A20:R                            mov     ecx,offset FLAT:@CBE87
     751     751  0 +  00000331  BA 00000018:R                            mov     edx,offset FLAT:@CBE3
     752     752  0 +  00000336  B8 00000002                              mov     eax,02h
     753     753  0 +  0000033B  E8 00000000:E                            call    Verbose
     754     754  0 +
     755     755  0 +                                             ; 1645     return;
     756     756  0 +  00000340  81 C4 0000008C                           add     esp,08ch
     757     757  0 +  00000346  5E                                       pop     esi
     758     758  0 +  00000347  5F                                       pop     edi
     759     759  0 +  00000348  5B                                       pop     ebx
     760     760  0 +  00000349  5D                                       pop     ebp
     761     761  0 +  0000034A  C3                                       ret
     762     762  0 +  0000034B                                   DrvsetupThread  endp
     763     763  0 +
     764     764  0 +                                             ; 888 DrvsetupWindowProc(HWND hwnd,ULONG msg,MPARAM mp1,MPARAM mp2)
     765     765  0 +
     766     766  0 +  0000034B                                   DrvsetupWindowProc      proc
     767     767  0 +  0000034B  55                                       push    ebp
     768     768  0 +  0000034C  8B EC                                    mov     ebp,esp
     769     769  0 +  0000034E  68 00000000:E                            push    offset FLAT: _Exception_CPP
     770     770  0 +  00000353  64:FF 35 [00000000]                      push    fs:[0h]
    R:\Source\driver\raid\Setup\list\drvsetup.asm(770:7): Warning ALP4511: Assuming segment width for operand size
     771     771  0 +  0000035A  64:89 25 [00000000]                      mov     fs:[0h],esp
     772     772  0 +  00000361  68 FFFFFEFC                              push    0fffffefch
     773     773  0 +  00000366  81 EC 0000045C                           sub     esp,045ch
     774     774  0 +
     775     775  0 +                                             ; 889 {
     776     776  0 +  0000036C  C7 85 [FFFFFEFC]                         mov     dword ptr [ebp-0104h],0h;       __es
                                 00000000
     777     777  0 +
     778     778  0 +                                             ; 888 DrvsetupWindowProc(HWND hwnd,ULONG msg,MPARAM mp1,MPARAM mp2)
     779     779  0 +  00000376  53                                       push    ebx
     780     780  0 +
     781     781  0 +                                             ; 889 {
     782     782  0 +  00000377  C7 85 [FFFFFF04]                         mov     dword ptr [ebp-0fch],offset FLAT:@11e__fsm_tab; __es
                                 00000000:R
     783     783  0 +
     784     784  0 +                                             ; 888 DrvsetupWindowProc(HWND hwnd,ULONG msg,MPARAM mp1,MPARAM mp2)
     785     785  0 +  00000381  57                                       push    edi
     786     786  0 +  00000382  56                                       push    esi
     787     787  0 +
     788     788  0 +                                             ; 891     WORK * const work = (PWORK)WinQueryWindowPtr(hwnd, 0);
     789     789  0 +  00000383  6A 00                                    push    0h
     790     790  0 +  00000385  FF 75 [08]                               push    dword ptr [ebp+08h];    hwnd
     791     791  0 +  00000388  E8 00000000:E                            call    WinQueryWindowPtr
     792     792  0 +


    File: drvsetup.asm  Pass: 2   ALP: Assembly Language Processor  Ver 4.00.004   Page:   21
    drvsetup.cpp

    xxxx-ii-yyyy-cc-f--oooooooo--gggggggggggggggggggg-zzz-mm-ddd--ssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssss


     793     793  0 +                                             ; 894     switch( msg )
     794     794  0 +  0000038D  8B 4D [0C]                               mov     ecx,[ebp+0ch];  msg
     795     795  0 +
     796     796  0 +                                             ; 891     WORK * const work = (PWORK)WinQueryWindowPtr(hwnd, 0);
     797     797  0 +  00000390  83 C4 08                                 add     esp,08h
     798     798  0 +  00000393  89 45 [E0]                               mov     [ebp-020h],eax; work
     799     799  0 +
     800     800  0 +                                             ; 894     switch( msg )
     801     801  0 +  00000396  83 F9 2F                                 cmp     ecx,02fh
     802     802  0 +  00000399  0F 8C 000003FD:R                         jl      @BLBL162
     803     803  0 +  0000039F  0F 84 000012AE:R                         je      @BLBL160
     804     804  0 +  000003A5  83 F9 4F                                 cmp     ecx,04fh
     805     805  0 +  000003A8  0F 8C 000003DD:R                         jl      @BLBL163
     806     806  0 +  000003AE  0F 84 00001513:R                         je      @BLBL161
     807     807  0 +  000003B4  81 F9 00000424                           cmp     ecx,0424h
     808     808  0 +  000003BA  0F 84 00000875:R                         je      @BLBL151
     809     809  0 +  000003C0  81 F9 00001002                           cmp     ecx,01002h
     810     810  0 +  000003C6  0F 84 00000443:R                         je      @BLBL148
     811     811  0 +  000003CC  81 F9 0000100A                           cmp     ecx,0100ah
     812     812  0 +  000003D2  0F 84 000004DB:R                         je      @BLBL149
     813     813  0 +  000003D8  E9 0000152A:R                            jmp     @BLBL147
     814     814  0 +  000003DD                                   @BLBL163:
     815     815  0 +  000003DD  83 F9 30                                 cmp     ecx,030h
     816     816  0 +  000003E0  0F 84 0000051C:R                         je      @BLBL150
     817     817  0 +  000003E6  83 F9 35                                 cmp     ecx,035h
     818     818  0 +  000003E9  0F 84 000008A2:R                         je      @BLBL152
     819     819  0 +  000003EF  83 F9 4C                                 cmp     ecx,04ch
     820     820  0 +  000003F2  0F 84 00001287:R                         je      @BLBL159
     821     821  0 +  000003F8  E9 0000152A:R                            jmp     @BLBL147
     822     822  0 +  000003FD                                   @BLBL162:
     823     823  0 +  000003FD  83 F9 06                                 cmp     ecx,06h
     824     824  0 +  00000400  0F 8C 0000042C:R                         jl      @BLBL164
     825     825  0 +  00000406  0F 84 00001227:R                         je      @BLBL158
     826     826  0 +  0000040C  83 F9 07                                 cmp     ecx,07h
     827     827  0 +  0000040F  0F 84 00001183:R                         je      @BLBL157
     828     828  0 +  00000415  83 F9 20                                 cmp     ecx,020h
     829     829  0 +  00000418  0F 84 00000917:R                         je      @BLBL153
     830     830  0 +  0000041E  83 F9 29                                 cmp     ecx,029h
     831     831  0 +  00000421  0F 84 00001075:R                         je      @BLBL155
     832     832  0 +  00000427  E9 0000152A:R                            jmp     @BLBL147
     833     833  0 +  0000042C                                   @BLBL164:
     834     834  0 +  0000042C  83 F9 01                                 cmp     ecx,01h
     835     835  0 +  0000042F  0F 84 00001049:R                         je      @BLBL154
     836     836  0 +  00000435  83 F9 02                                 cmp     ecx,02h
     837     837  0 +  00000438  0F 84 0000112C:R                         je      @BLBL156
     838     838  0 +  0000043E  E9 0000152A:R                            jmp     @BLBL147
     839     839  0 +  00000443                                   @BLBL148:
     840     840  0 +
     841     841  0 +                                             ; 904   CreateCnr(hwnd, work);
     842     842  0 +  00000443  8B 7D [08]                               mov     edi,[ebp+08h];  hwnd
     843     843  0 +
     844     844  0 +                                             ; 903   Verbose(3, "DrvSetup", "WUM_START");
     845     845  0 +  00000446  83 EC 0C                                 sub     esp,0ch
     846     846  0 +  00000449  BB 00000018:R                            mov     ebx,offset FLAT:@CBE3


    File: drvsetup.asm  Pass: 2   ALP: Assembly Language Processor  Ver 4.00.004   Page:   22
    drvsetup.cpp

    xxxx-ii-yyyy-cc-f--oooooooo--gggggggggggggggggggg-zzz-mm-ddd--ssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssss


     847     847  0 +  0000044E  B9 000003A4:R                            mov     ecx,offset FLAT:@CBE31
     848     848  0 +  00000453  8B D3                                    mov     edx,ebx
     849     849  0 +  00000455  B8 00000003                              mov     eax,03h
     850     850  0 +  0000045A  E8 00000000:E                            call    Verbose
     851     851  0 +  0000045F  83 C4 04                                 add     esp,04h
     852     852  0 +
     853     853  0 +                                             ; 904   CreateCnr(hwnd, work);
     854     854  0 +  00000462  8B 55 [E0]                               mov     edx,[ebp-020h]; work
     855     855  0 +  00000465  8B C7                                    mov     eax,edi
     856     856  0 +  00000467  E8 00002188:R                            call    CreateCnr__FUlP5_WORK
     857     857  0 +  0000046C  83 C4 04                                 add     esp,04h
     858     858  0 +
     859     859  0 +                                             ; 907       PTHR_DRVSCAN        dta = new THR_DRVSCAN;
     860     860  0 +  0000046F  B8 00000004                              mov     eax,04h
     861     861  0 +  00000474  E8 00000000:E                            call    __nw__FUi
     862     862  0 +  00000479  83 C4 04                                 add     esp,04h
     863     863  0 +
     864     864  0 +                                             ; 909       dta->parent = hwnd;
     865     865  0 +  0000047C  89 38                                    mov     [eax],edi
     866     866  0 +
     867     867  0 +                                             ; 910       tid = _beginthread(DrvscanThread, NULL, STACK_SIZE, dta);
     868     868  0 +  0000047E  50                                       push    eax
     869     869  0 +  0000047F  B9 00100000                              mov     ecx,0100000h
     870     870  0 +  00000484  83 EC 0C                                 sub     esp,0ch
     871     871  0 +  00000487  33 D2                                    xor     edx,edx
     872     872  0 +  00000489  B8 00000000:E                            mov     eax,offset FLAT: DrvscanThread
     873     873  0 +  0000048E  E8 00000000:E                            call    _beginthread
     874     874  0 +  00000493  83 C4 10                                 add     esp,010h
     875     875  0 +
     876     876  0 +                                             ; 911       if( tid == -1 )
     877     877  0 +  00000496  83 F8 FF                                 cmp     eax,0ffffffffh
     878     878  0 +  00000499  0F 85 000004BD:R                         jne     @BLBL75
     879     879  0 +
     880     880  0 +                                             ; 912           Verbose(1, "DrvSetup",
     881     881  0 +  0000049F  E8 00000000:E                            call    _errno
     882     882  0 +  000004A4  8B D3                                    mov     edx,ebx
     883     883  0 +  000004A6  FF 30                                    push    dword ptr [eax]
     884     884  0 +  000004A8  B9 000003B0:R                            mov     ecx,offset FLAT:@CBE32
     885     885  0 +  000004AD  83 EC 0C                                 sub     esp,0ch
     886     886  0 +  000004B0  B8 00000001                              mov     eax,01h
     887     887  0 +  000004B5  E8 00000000:E                            call    Verbose
     888     888  0 +  000004BA  83 C4 10                                 add     esp,010h
     889     889  0 +
     890     890  0 +                                             ; 913                   "_beginthread(DrvscanThread) failed - errno %u", errno);
     891     891  0 +  000004BD                                   @BLBL75:
     892     892  0 +
     893     893  0 +                                             ; 916   return 0;
     894     894  0 +  000004BD  5E                                       pop     esi
     895     895  0 +
     896     896  0 +                                             ; 915   regular = TRUE;
     897     897  0 +  000004BE  C7 05 [00000000]:R                       mov     dword ptr  @bcregular,01h
                                 00000001
     898     898  0 +
     899     899  0 +                                             ; 916   return 0;


    File: drvsetup.asm  Pass: 2   ALP: Assembly Language Processor  Ver 4.00.004   Page:   23
    drvsetup.cpp

    xxxx-ii-yyyy-cc-f--oooooooo--gggggggggggggggggggg-zzz-mm-ddd--ssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssss


     900     900  0 +  000004C8  5F                                       pop     edi
     901     901  0 +  000004C9  33 C0                                    xor     eax,eax
     902     902  0 +  000004CB  5B                                       pop     ebx
     903     903  0 +  000004CC  81 C4 00000460                           add     esp,0460h
     904     904  0 +  000004D2  64:8F 05 [00000000]                      pop     fs:[0h]
    R:\Source\driver\raid\Setup\list\drvsetup.asm(904:6): Warning ALP4511: Assuming segment width for operand size
     905     905  0 +  000004D9  C9                                       leave
     906     906  0 +  000004DA  C3                                       ret
     907     907  0 +  000004DB                                   @BLBL149:
     908     908  0 +
     909     909  0 +                                             ; 920   Verbose(3, "DrvSetup", "WUM_DEVTREE");
     910     910  0 +  000004DB  83 EC 0C                                 sub     esp,0ch
     911     911  0 +  000004DE  B9 000003E0:R                            mov     ecx,offset FLAT:@CBE33
     912     912  0 +  000004E3  BA 00000018:R                            mov     edx,offset FLAT:@CBE3
     913     913  0 +  000004E8  B8 00000003                              mov     eax,03h
     914     914  0 +  000004ED  E8 00000000:E                            call    Verbose
     915     915  0 +
     916     916  0 +                                             ; 921   work->hwndScanner = HWNDFROMMP(mp2);
     917     917  0 +  000004F2  8B 45 [E0]                               mov     eax,[ebp-020h]; work
     918     918  0 +  000004F5  8B 4D [14]                               mov     ecx,[ebp+014h]; mp2
     919     919  0 +  000004F8  89 48 [0C]                               mov     [eax+0ch],ecx
     920     920  0 +
     921     921  0 +                                             ; 922   DisplayDisk(work, NULL, (VRDev *)PVOIDFROMMP(mp1));
     922     922  0 +  000004FB  8B 4D [10]                               mov     ecx,[ebp+010h]; mp1
     923     923  0 +  000004FE  33 D2                                    xor     edx,edx
     924     924  0 +  00000500  E8 00001B43:R                            call    DisplayDisk__FP5_WORKP9_MYRECORDP5VRDev
     925     925  0 +  00000505  83 C4 0C                                 add     esp,0ch
     926     926  0 +
     927     927  0 +                                             ; 923   return 0;
     928     928  0 +  00000508  33 C0                                    xor     eax,eax
     929     929  0 +  0000050A  5E                                       pop     esi
     930     930  0 +  0000050B  5F                                       pop     edi
     931     931  0 +  0000050C  5B                                       pop     ebx
     932     932  0 +  0000050D  81 C4 00000460                           add     esp,0460h
     933     933  0 +  00000513  64:8F 05 [00000000]                      pop     fs:[0h]
    R:\Source\driver\raid\Setup\list\drvsetup.asm(933:6): Warning ALP4511: Assuming segment width for operand size
     934     934  0 +  0000051A  C9                                       leave
     935     935  0 +  0000051B  C3                                       ret
     936     936  0 +  0000051C                                   @BLBL150:
     937     937  0 +
     938     938  0 +                                             ; 931   Verbose(3, "DrvSetup", "WM_CONTROL");
     939     939  0 +  0000051C  83 EC 0C                                 sub     esp,0ch
     940     940  0 +  0000051F  B9 000003EC:R                            mov     ecx,offset FLAT:@CBE34
     941     941  0 +  00000524  BA 00000018:R                            mov     edx,offset FLAT:@CBE3
     942     942  0 +  00000529  B8 00000003                              mov     eax,03h
     943     943  0 +  0000052E  E8 00000000:E                            call    Verbose
     944     944  0 +
     945     945  0 +                                             ; 933       USHORT const        id = SHORT1FROMMP(mp1);
     946     946  0 +  00000533  8B 45 [10]                               mov     eax,[ebp+010h]; mp1
     947     947  0 +
     948     948  0 +                                             ; 931   Verbose(3, "DrvSetup", "WM_CONTROL");
     949     949  0 +  00000536  83 C4 0C                                 add     esp,0ch
     950     950  0 +
     951     951  0 +                                             ; 933       USHORT const        id = SHORT1FROMMP(mp1);


    File: drvsetup.asm  Pass: 2   ALP: Assembly Language Processor  Ver 4.00.004   Page:   24
    drvsetup.cpp

    xxxx-ii-yyyy-cc-f--oooooooo--gggggggggggggggggggg-zzz-mm-ddd--ssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssss


     952     952  0 +  00000539  66:89 45 [D6]                            mov     [ebp-02ah],ax;  id
     953     953  0 +
     954     954  0 +                                             ; 934       USHORT const        ncode = SHORT2FROMMP(mp1);
     955     955  0 +  0000053D  C1 E8 10                                 shr     eax,010h
     956     956  0 +  00000540  66:89 45 [9A]                            mov     [ebp-066h],ax;  ncode
     957     957  0 +
     958     958  0 +                                             ; 937       switch( ncode )
     959     959  0 +  00000544  0F B7 C0                                 movzx   eax,ax
     960     960  0 +  00000547  83 F8 68                                 cmp     eax,068h
     961     961  0 +  0000054A  0F 8C 00000576:R                         jl      @BLBL172
     962     962  0 +  00000550  0F 84 0000080A:R                         je      @BLBL170
     963     963  0 +  00000556  83 F8 6A                                 cmp     eax,06ah
     964     964  0 +  00000559  0F 84 000005BF:R                         je      @BLBL166
     965     965  0 +  0000055F  83 F8 6B                                 cmp     eax,06bh
     966     966  0 +  00000562  0F 84 00000744:R                         je      @BLBL167
     967     967  0 +  00000568  83 F8 77                                 cmp     eax,077h
     968     968  0 +  0000056B  0F 84 0000058D:R                         je      @BLBL165
     969     969  0 +  00000571  E9 0000084C:R                            jmp     @BLBL171
     970     970  0 +  00000576                                   @BLBL172:
     971     971  0 +  00000576  83 F8 66                                 cmp     eax,066h
     972     972  0 +  00000579  0F 84 000007C8:R                         je      @BLBL169
     973     973  0 +  0000057F  83 F8 67                                 cmp     eax,067h
     974     974  0 +  00000582  0F 84 00000786:R                         je      @BLBL168
     975     975  0 +  00000588  E9 0000084C:R                            jmp     @BLBL171
     976     976  0 +  0000058D                                   @BLBL165:
     977     977  0 +
     978     978  0 +                                             ; 944           Verbose(3, "DrvSetup", "WM_CONTROL (id %#x, CN_CONTEXTMENU)", id);
     979     979  0 +  0000058D  B9 000003F8:R                            mov     ecx,offset FLAT:@CBE35
     980     980  0 +  00000592  0F B7 5D [D6]                            movzx   ebx,word ptr [ebp-02ah];        id
     981     981  0 +  00000596  53                                       push    ebx
     982     982  0 +  00000597  BA 00000018:R                            mov     edx,offset FLAT:@CBE3
     983     983  0 +  0000059C  83 EC 0C                                 sub     esp,0ch
     984     984  0 +  0000059F  B8 00000003                              mov     eax,03h
     985     985  0 +  000005A4  E8 00000000:E                            call    Verbose
     986     986  0 +  000005A9  83 C4 08                                 add     esp,08h
     987     987  0 +
     988     988  0 +                                             ; 945           DoPopup(hwnd, work);
     989     989  0 +  000005AC  8B 55 [E0]                               mov     edx,[ebp-020h]; work
     990     990  0 +  000005AF  8B 45 [08]                               mov     eax,[ebp+08h];  hwnd
     991     991  0 +  000005B2  E8 00001CB6:R                            call    DoPopup__FUlCP5_WORK
     992     992  0 +  000005B7  83 C4 08                                 add     esp,08h
     993     993  0 +
     994     994  0 +                                             ; 946           break;
     995     995  0 +  000005BA  E9 0000152A:R                            jmp     @BLBL147
     996     996  0 +  000005BF                                   @BLBL166:
     997     997  0 +
     998     998  0 +                                             ; 949           Verbose(3, "DrvSetup", "WM_CONTROL (id %#x, CN_ENTER)",id);
     999     999  0 +  000005BF  B9 0000041C:R                            mov     ecx,offset FLAT:@CBE36
    1000    1000  0 +  000005C4  0F B7 5D [D6]                            movzx   ebx,word ptr [ebp-02ah];        id
    1001    1001  0 +  000005C8  53                                       push    ebx
    1002    1002  0 +  000005C9  BA 00000018:R                            mov     edx,offset FLAT:@CBE3
    1003    1003  0 +  000005CE  83 EC 0C                                 sub     esp,0ch
    1004    1004  0 +  000005D1  B8 00000003                              mov     eax,03h
    1005    1005  0 +  000005D6  E8 00000000:E                            call    Verbose


    File: drvsetup.asm  Pass: 2   ALP: Assembly Language Processor  Ver 4.00.004   Page:   25
    drvsetup.cpp

    xxxx-ii-yyyy-cc-f--oooooooo--gggggggggggggggggggg-zzz-mm-ddd--ssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssss


    1006    1006  0 +
    1007    1007  0 +                                             ; 951               PNOTIFYRECORDENTER  rec = (PNOTIFYRECORDENTER)PVOIDFROMMP(mp2);
    1008    1008  0 +  000005DB  8B 5D [14]                               mov     ebx,[ebp+014h]; mp2
    1009    1009  0 +
    1010    1010  0 +                                             ; 949           Verbose(3, "DrvSetup", "WM_CONTROL (id %#x, CN_ENTER)",id);
    1011    1011  0 +  000005DE  83 C4 10                                 add     esp,010h
    1012    1012  0 +
    1013    1013  0 +                                             ; 951               PNOTIFYRECORDENTER  rec = (PNOTIFYRECORDENTER)PVOIDFROMMP(mp2);
    1014    1014  0 +  000005E1  89 5D [C4]                               mov     [ebp-03ch],ebx; rec
    1015    1015  0 +
    1016    1016  0 +                                             ; 953               if( rec == NULL )
    1017    1017  0 +  000005E4  85 DB                                    test    ebx,ebx
    1018    1018  0 +  000005E6  0F 85 00000600:R                         jne     @BLBL76
    1019    1019  0 +
    1020    1020  0 +                                             ; 954                   return 0;               /* dblk click on background? */
    1021    1021  0 +  000005EC  5E                                       pop     esi
    1022    1022  0 +  000005ED  33 C0                                    xor     eax,eax
    1023    1023  0 +  000005EF  5F                                       pop     edi
    1024    1024  0 +  000005F0  5B                                       pop     ebx
    1025    1025  0 +  000005F1  81 C4 00000460                           add     esp,0460h
    1026    1026  0 +  000005F7  64:8F 05 [00000000]                      pop     fs:[0h]
    R:\Source\driver\raid\Setup\list\drvsetup.asm(1026:6): Warning ALP4511: Assuming segment width for operand size
    1027    1027  0 +  000005FE  C9                                       leave
    1028    1028  0 +  000005FF  C3                                       ret
    1029    1029  0 +  00000600                                   @BLBL76:
    1030    1030  0 +
    1031    1031  0 +                                             ; 956               VRDev *     dsk = ((PMYRECORD)(rec->pRecord))->dsk;
    1032    1032  0 +  00000600  8B 45 [C4]                               mov     eax,[ebp-03ch]; rec
    1033    1033  0 +  00000603  8B 40 [08]                               mov     eax,[eax+08h]
    1034    1034  0 +  00000606  8B 40 [1C]                               mov     eax,[eax+01ch]
    1035    1035  0 +  00000609  89 45 [C8]                               mov     [ebp-038h],eax; dsk
    1036    1036  0 +
    1037    1037  0 +                                             ; 957               if( dsk == NULL )
    1038    1038  0 +  0000060C  85 C0                                    test    eax,eax
    1039    1039  0 +  0000060E  0F 85 0000062E:R                         jne     @BLBL77
    1040    1040  0 +
    1041    1041  0 +                                             ; 958                   MyMessageBox(0, hwnd,
    1042    1042  0 +  00000614  8B 55 [08]                               mov     edx,[ebp+08h];  hwnd
    1043    1043  0 +  00000617  83 EC 0C                                 sub     esp,0ch
    1044    1044  0 +  0000061A  B9 0000043C:R                            mov     ecx,offset FLAT:@CBE37
    1045    1045  0 +  0000061F  33 C0                                    xor     eax,eax
    1046    1046  0 +  00000621  E8 00000000:E                            call    MyMessageBox__FCiCUlPce
    1047    1047  0 +  00000626  83 C4 0C                                 add     esp,0ch
    1048    1048  0 +
    1049    1049  0 +                                             ; 959                                "Internal error, can't use NULL device");
    1050    1050  0 +  00000629  E9 00000730:R                            jmp     @BLBL78
    1051    1051  0 +  0000062E                                   @BLBL77:
    1052    1052  0 +
    1053    1053  0 +                                             ; 960               else if( dsk->getParent() = NULL )
    1054    1054  0 +  0000062E  8B 45 [C8]                               mov     eax,[ebp-038h]; dsk
    1055    1055  0 +  00000631  83 78 [04] 00                            cmp     dword ptr [eax+04h],0h
    1056    1056  0 +  00000635  0F 84 00000658:R                         je      @BLBL79
    1057    1057  0 +
    1058    1058  0 +                                             ; 961                   MyMessageBox(1, hwnd,


    File: drvsetup.asm  Pass: 2   ALP: Assembly Language Processor  Ver 4.00.004   Page:   26
    drvsetup.cpp

    xxxx-ii-yyyy-cc-f--oooooooo--gggggggggggggggggggg-zzz-mm-ddd--ssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssss


    1059    1059  0 +  0000063B  8B 55 [08]                               mov     edx,[ebp+08h];  hwnd
    1060    1060  0 +  0000063E  83 EC 0C                                 sub     esp,0ch
    1061    1061  0 +  00000641  B9 00000464:R                            mov     ecx,offset FLAT:@CBE38
    1062    1062  0 +  00000646  B8 00000001                              mov     eax,01h
    1063    1063  0 +  0000064B  E8 00000000:E                            call    MyMessageBox__FCiCUlPce
    1064    1064  0 +  00000650  83 C4 0C                                 add     esp,0ch
    1065    1065  0 +
    1066    1066  0 +                                             ; 963                                " remove parent first.");
    1067    1067  0 +  00000653  E9 00000730:R                            jmp     @BLBL78
    1068    1068  0 +  00000658                                   @BLBL79:
    1069    1069  0 +
    1070    1070  0 +                                             ; 964               else if( dsk->isHostdrive()  &&  dsk->isArray() == 0 )
    1071    1071  0 +  00000658  83 EC 04                                 sub     esp,04h
    1072    1072  0 +  0000065B  8B 7D [C8]                               mov     edi,[ebp-038h]; dsk
    1073    1073  0 +  0000065E  8B 0F                                    mov     ecx,[edi]
    1074    1074  0 +  00000660  8B 41 [6C]                               mov     eax,[ecx+06ch]
    1075    1075  0 +  00000663  03 C7                                    add     eax,edi
    1076    1076  0 +  00000665  FF 51 [68]                               call    dword ptr [ecx+068h]
    1077    1077  0 +  00000668  83 C4 04                                 add     esp,04h
    1078    1078  0 +  0000066B  84 C0                                    test    al,al
    1079    1079  0 +  0000066D  8B C7                                    mov     eax,edi
    1080    1080  0 +  0000066F  0F 84 000006AA:R                         je      @BLBL81
    1081    1081  0 +  00000675  8B 08                                    mov     ecx,[eax]
    1082    1082  0 +  00000677  83 EC 04                                 sub     esp,04h
    1083    1083  0 +  0000067A  8B 51 [64]                               mov     edx,[ecx+064h]
    1084    1084  0 +  0000067D  03 C2                                    add     eax,edx
    1085    1085  0 +  0000067F  FF 51 [60]                               call    dword ptr [ecx+060h]
    1086    1086  0 +  00000682  83 C4 04                                 add     esp,04h
    1087    1087  0 +  00000685  84 C0                                    test    al,al
    1088    1088  0 +  00000687  0F 85 000006AA:R                         jne     @BLBL81
    1089    1089  0 +
    1090    1090  0 +                                             ; 965                   MyMessageBox(1, hwnd,
    1091    1091  0 +  0000068D  8B 55 [08]                               mov     edx,[ebp+08h];  hwnd
    1092    1092  0 +  00000690  83 EC 0C                                 sub     esp,0ch
    1093    1093  0 +  00000693  B9 00000494:R                            mov     ecx,offset FLAT:@CBE39
    1094    1094  0 +  00000698  B8 00000001                              mov     eax,01h
    1095    1095  0 +  0000069D  E8 00000000:E                            call    MyMessageBox__FCiCUlPce
    1096    1096  0 +  000006A2  83 C4 0C                                 add     esp,0ch
    1097    1097  0 +
    1098    1098  0 +                                             ; 967                                " create physdevice first.");
    1099    1099  0 +  000006A5  E9 00000730:R                            jmp     @BLBL78
    1100    1100  0 +  000006AA                                   @BLBL81:
    1101    1101  0 +
    1102    1102  0 +                                             ; 968               else if( dsk->isWritable() )
    1103    1103  0 +  000006AA  83 EC 04                                 sub     esp,04h
    1104    1104  0 +  000006AD  8B 45 [C8]                               mov     eax,[ebp-038h]; dsk
    1105    1105  0 +  000006B0  8B 18                                    mov     ebx,[eax]
    1106    1106  0 +  000006B2  8B 4B [0C]                               mov     ecx,[ebx+0ch]
    1107    1107  0 +  000006B5  03 C1                                    add     eax,ecx
    1108    1108  0 +  000006B7  FF 53 [08]                               call    dword ptr [ebx+08h]
    1109    1109  0 +  000006BA  83 C4 04                                 add     esp,04h
    1110    1110  0 +  000006BD  84 C0                                    test    al,al
    1111    1111  0 +  000006BF  0F 85 000006E2:R                         jne     @BLBL83
    1112    1112  0 +


    File: drvsetup.asm  Pass: 2   ALP: Assembly Language Processor  Ver 4.00.004   Page:   27
    drvsetup.cpp

    xxxx-ii-yyyy-cc-f--oooooooo--gggggggggggggggggggg-zzz-mm-ddd--ssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssss


    1113    1113  0 +                                             ; 969                   MyMessageBox(1, hwnd,
    1114    1114  0 +  000006C5  8B 55 [08]                               mov     edx,[ebp+08h];  hwnd
    1115    1115  0 +  000006C8  83 EC 0C                                 sub     esp,0ch
    1116    1116  0 +  000006CB  B9 000004C8:R                            mov     ecx,offset FLAT:@CBE40
    1117    1117  0 +  000006D0  B8 00000001                              mov     eax,01h
    1118    1118  0 +  000006D5  E8 00000000:E                            call    MyMessageBox__FCiCUlPce
    1119    1119  0 +  000006DA  83 C4 0C                                 add     esp,0ch
    1120    1120  0 +
    1121    1121  0 +                                             ; 972                                " first.");
    1122    1122  0 +  000006DD  EB 51 90 90 90                           jmp     @BLBL78
    1123    1123  0 +  000006E2                                   @BLBL83:
    1124    1124  0 +
    1125    1125  0 +                                             ; 975                   bool = (BOOL)WinSendMsg(rec->hwndCnr,
    1126    1126  0 +  000006E2  8B 5D [C4]                               mov     ebx,[ebp-03ch]; rec
    1127    1127  0 +  000006E5  68 00080001                              push    080001h
    1128    1128  0 +  000006EA  FF 73 [08]                               push    dword ptr [ebx+08h]
    1129    1129  0 +  000006ED  68 0000034A                              push    034ah
    1130    1130  0 +  000006F2  FF 33                                    push    dword ptr [ebx]
    1131    1131  0 +  000006F4  E8 00000000:E                            call    WinSendMsg
    1132    1132  0 +  000006F9  83 C4 10                                 add     esp,010h
    1133    1133  0 +  000006FC  89 45 [DC]                               mov     [ebp-024h],eax; bool
    1134    1134  0 +
    1135    1135  0 +                                             ; 979                   if( bool == FALSE )
    1136    1136  0 +  000006FF  85 C0                                    test    eax,eax
    1137    1137  0 +  00000701  0F 85 00000730:R                         jne     @BLBL78
    1138    1138  0 +
    1139    1139  0 +                                             ; 980                       Verbose(1, "DrvSetup",
    1140    1140  0 +  00000707  8B 5D [E0]                               mov     ebx,[ebp-020h]; work
    1141    1141  0 +  0000070A  FF 73 [04]                               push    dword ptr [ebx+04h]
    1142    1142  0 +  0000070D  E8 00000000:E                            call    WinGetLastError
    1143    1143  0 +  00000712  83 C4 04                                 add     esp,04h
    1144    1144  0 +  00000715  B9 0000051C:R                            mov     ecx,offset FLAT:@CBE41
    1145    1145  0 +  0000071A  50                                       push    eax
    1146    1146  0 +  0000071B  BA 00000018:R                            mov     edx,offset FLAT:@CBE3
    1147    1147  0 +  00000720  83 EC 0C                                 sub     esp,0ch
    1148    1148  0 +  00000723  B8 00000001                              mov     eax,01h
    1149    1149  0 +  00000728  E8 00000000:E                            call    Verbose
    1150    1150  0 +  0000072D  83 C4 10                                 add     esp,010h
    1151    1151  0 +
    1152    1152  0 +                                             ; 984               }
    1153    1153  0 +  00000730                                   @BLBL78:
    1154    1154  0 +
    1155    1155  0 +                                             ; 986           return 0;
    1156    1156  0 +  00000730  5E                                       pop     esi
    1157    1157  0 +  00000731  33 C0                                    xor     eax,eax
    1158    1158  0 +  00000733  5F                                       pop     edi
    1159    1159  0 +  00000734  5B                                       pop     ebx
    1160    1160  0 +  00000735  81 C4 00000460                           add     esp,0460h
    1161    1161  0 +  0000073B  64:8F 05 [00000000]                      pop     fs:[0h]
    R:\Source\driver\raid\Setup\list\drvsetup.asm(1161:6): Warning ALP4511: Assuming segment width for operand size
    1162    1162  0 +  00000742  C9                                       leave
    1163    1163  0 +  00000743  C3                                       ret
    1164    1164  0 +  00000744                                   @BLBL167:
    1165    1165  0 +


    File: drvsetup.asm  Pass: 2   ALP: Assembly Language Processor  Ver 4.00.004   Page:   28
    drvsetup.cpp

    xxxx-ii-yyyy-cc-f--oooooooo--gggggggggggggggggggg-zzz-mm-ddd--ssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssss


    1166    1166  0 +                                             ; 990           Verbose(3, "DrvSetup", "WM_CONTROL (id %#x, CN_INITDRAG)", id);
    1167    1167  0 +  00000744  B9 00000558:R                            mov     ecx,offset FLAT:@CBE42
    1168    1168  0 +  00000749  0F B7 5D [D6]                            movzx   ebx,word ptr [ebp-02ah];        id
    1169    1169  0 +  0000074D  53                                       push    ebx
    1170    1170  0 +  0000074E  BA 00000018:R                            mov     edx,offset FLAT:@CBE3
    1171    1171  0 +  00000753  83 EC 0C                                 sub     esp,0ch
    1172    1172  0 +  00000756  B8 00000003                              mov     eax,03h
    1173    1173  0 +  0000075B  E8 00000000:E                            call    Verbose
    1174    1174  0 +  00000760  83 C4 04                                 add     esp,04h
    1175    1175  0 +
    1176    1176  0 +                                             ; 991           return DragInit(hwnd, work,(PCNRDRAGINIT)PVOIDFROMMP(mp2));
    1177    1177  0 +  00000763  8B 4D [14]                               mov     ecx,[ebp+014h]; mp2
    1178    1178  0 +  00000766  8B 55 [E0]                               mov     edx,[ebp-020h]; work
    1179    1179  0 +  00000769  8B 45 [08]                               mov     eax,[ebp+08h];  hwnd
    1180    1180  0 +  0000076C  E8 000019B4:R                            call    DragInit__FUlCP5_WORKCP12_CNRDRAGINIT
    1181    1181  0 +  00000771  83 C4 0C                                 add     esp,0ch
    1182    1182  0 +  00000774  5E                                       pop     esi
    1183    1183  0 +  00000775  5F                                       pop     edi
    1184    1184  0 +  00000776  5B                                       pop     ebx
    1185    1185  0 +  00000777  81 C4 00000460                           add     esp,0460h
    1186    1186  0 +  0000077D  64:8F 05 [00000000]                      pop     fs:[0h]
    R:\Source\driver\raid\Setup\list\drvsetup.asm(1186:6): Warning ALP4511: Assuming segment width for operand size
    1187    1187  0 +  00000784  C9                                       leave
    1188    1188  0 +  00000785  C3                                       ret
    1189    1189  0 +  00000786                                   @BLBL168:
    1190    1190  0 +
    1191    1191  0 +                                             ; 994           Verbose(3, "DrvSetup", "WM_CONTROL (id %#x, CN_DRAGOVER)", id);
    1192    1192  0 +  00000786  B9 0000057C:R                            mov     ecx,offset FLAT:@CBE43
    1193    1193  0 +  0000078B  0F B7 5D [D6]                            movzx   ebx,word ptr [ebp-02ah];        id
    1194    1194  0 +  0000078F  53                                       push    ebx
    1195    1195  0 +  00000790  BA 00000018:R                            mov     edx,offset FLAT:@CBE3
    1196    1196  0 +  00000795  83 EC 0C                                 sub     esp,0ch
    1197    1197  0 +  00000798  B8 00000003                              mov     eax,03h
    1198    1198  0 +  0000079D  E8 00000000:E                            call    Verbose
    1199    1199  0 +  000007A2  83 C4 04                                 add     esp,04h
    1200    1200  0 +
    1201    1201  0 +                                             ; 995           return DragOver(hwnd, work, (PCNRDRAGINFO)PVOIDFROMMP(mp2));
    1202    1202  0 +  000007A5  8B 4D [14]                               mov     ecx,[ebp+014h]; mp2
    1203    1203  0 +  000007A8  8B 55 [E0]                               mov     edx,[ebp-020h]; work
    1204    1204  0 +  000007AB  8B 45 [08]                               mov     eax,[ebp+08h];  hwnd
    1205    1205  0 +  000007AE  E8 00001718:R                            call    DragOver__FUlCP5_WORKP12_CNRDRAGINFO
    1206    1206  0 +  000007B3  83 C4 0C                                 add     esp,0ch
    1207    1207  0 +  000007B6  5E                                       pop     esi
    1208    1208  0 +  000007B7  5F                                       pop     edi
    1209    1209  0 +  000007B8  5B                                       pop     ebx
    1210    1210  0 +  000007B9  81 C4 00000460                           add     esp,0460h
    1211    1211  0 +  000007BF  64:8F 05 [00000000]                      pop     fs:[0h]
    R:\Source\driver\raid\Setup\list\drvsetup.asm(1211:6): Warning ALP4511: Assuming segment width for operand size
    1212    1212  0 +  000007C6  C9                                       leave
    1213    1213  0 +  000007C7  C3                                       ret
    1214    1214  0 +  000007C8                                   @BLBL169:
    1215    1215  0 +
    1216    1216  0 +                                             ; 998           Verbose(3, "DrvSetup", "WM_CONTROL (id %#x, CN_DRAGLEAVE)", id);
    1217    1217  0 +  000007C8  B9 000005A0:R                            mov     ecx,offset FLAT:@CBE44


    File: drvsetup.asm  Pass: 2   ALP: Assembly Language Processor  Ver 4.00.004   Page:   29
    drvsetup.cpp

    xxxx-ii-yyyy-cc-f--oooooooo--gggggggggggggggggggg-zzz-mm-ddd--ssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssss


    1218    1218  0 +  000007CD  0F B7 5D [D6]                            movzx   ebx,word ptr [ebp-02ah];        id
    1219    1219  0 +  000007D1  53                                       push    ebx
    1220    1220  0 +  000007D2  BA 00000018:R                            mov     edx,offset FLAT:@CBE3
    1221    1221  0 +  000007D7  83 EC 0C                                 sub     esp,0ch
    1222    1222  0 +  000007DA  B8 00000003                              mov     eax,03h
    1223    1223  0 +  000007DF  E8 00000000:E                            call    Verbose
    1224    1224  0 +  000007E4  83 C4 04                                 add     esp,04h
    1225    1225  0 +
    1226    1226  0 +                                             ; 999           return DragLeave(hwnd, work, (PCNRDRAGINFO)PVOIDFROMMP(mp2));
    1227    1227  0 +  000007E7  8B 4D [14]                               mov     ecx,[ebp+014h]; mp2
    1228    1228  0 +  000007EA  8B 55 [E0]                               mov     edx,[ebp-020h]; work
    1229    1229  0 +  000007ED  8B 45 [08]                               mov     eax,[ebp+08h];  hwnd
    1230    1230  0 +  000007F0  E8 00001980:R                            call    DragLeave__FUlCP5_WORKP12_CNRDRAGINFO
    1231    1231  0 +  000007F5  83 C4 0C                                 add     esp,0ch
    1232    1232  0 +  000007F8  5E                                       pop     esi
    1233    1233  0 +  000007F9  5F                                       pop     edi
    1234    1234  0 +  000007FA  5B                                       pop     ebx
    1235    1235  0 +  000007FB  81 C4 00000460                           add     esp,0460h
    1236    1236  0 +  00000801  64:8F 05 [00000000]                      pop     fs:[0h]
    R:\Source\driver\raid\Setup\list\drvsetup.asm(1236:6): Warning ALP4511: Assuming segment width for operand size
    1237    1237  0 +  00000808  C9                                       leave
    1238    1238  0 +  00000809  C3                                       ret
    1239    1239  0 +  0000080A                                   @BLBL170:
    1240    1240  0 +
    1241    1241  0 +                                             ; 1002          Verbose(3, "DrvSetup", "WM_CONTROL (id %#x, CN_DROP)", id);
    1242    1242  0 +  0000080A  B9 000005C4:R                            mov     ecx,offset FLAT:@CBE45
    1243    1243  0 +  0000080F  0F B7 5D [D6]                            movzx   ebx,word ptr [ebp-02ah];        id
    1244    1244  0 +  00000813  53                                       push    ebx
    1245    1245  0 +  00000814  BA 00000018:R                            mov     edx,offset FLAT:@CBE3
    1246    1246  0 +  00000819  83 EC 0C                                 sub     esp,0ch
    1247    1247  0 +  0000081C  B8 00000003                              mov     eax,03h
    1248    1248  0 +  00000821  E8 00000000:E                            call    Verbose
    1249    1249  0 +  00000826  83 C4 04                                 add     esp,04h
    1250    1250  0 +
    1251    1251  0 +                                             ; 1003          return DragDrop(hwnd, work, (PCNRDRAGINFO)PVOIDFROMMP(mp2));
    1252    1252  0 +  00000829  8B 4D [14]                               mov     ecx,[ebp+014h]; mp2
    1253    1253  0 +  0000082C  8B 55 [E0]                               mov     edx,[ebp-020h]; work
    1254    1254  0 +  0000082F  8B 45 [08]                               mov     eax,[ebp+08h];  hwnd
    1255    1255  0 +  00000832  E8 00001550:R                            call    DragDrop__FUlCP5_WORKP12_CNRDRAGINFO
    1256    1256  0 +  00000837  83 C4 0C                                 add     esp,0ch
    1257    1257  0 +  0000083A  5E                                       pop     esi
    1258    1258  0 +  0000083B  5F                                       pop     edi
    1259    1259  0 +  0000083C  5B                                       pop     ebx
    1260    1260  0 +  0000083D  81 C4 00000460                           add     esp,0460h
    1261    1261  0 +  00000843  64:8F 05 [00000000]                      pop     fs:[0h]
    R:\Source\driver\raid\Setup\list\drvsetup.asm(1261:6): Warning ALP4511: Assuming segment width for operand size
    1262    1262  0 +  0000084A  C9                                       leave
    1263    1263  0 +  0000084B  C3                                       ret
    1264    1264  0 +  0000084C                                   @BLBL171:
    1265    1265  0 +
    1266    1266  0 +                                             ; 1006          Verbose(3, "DrvSetup", "WM_CONTROL (id %#x, notify code %#x)",
    1267    1267  0 +  0000084C  B9 000005E4:R                            mov     ecx,offset FLAT:@CBE46
    1268    1268  0 +  00000851  0F B7 45 [9A]                            movzx   eax,word ptr [ebp-066h];        ncode
    1269    1269  0 +  00000855  50                                       push    eax


    File: drvsetup.asm  Pass: 2   ALP: Assembly Language Processor  Ver 4.00.004   Page:   30
    drvsetup.cpp

    xxxx-ii-yyyy-cc-f--oooooooo--gggggggggggggggggggg-zzz-mm-ddd--ssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssss


    1270    1270  0 +  00000856  0F B7 45 [D6]                            movzx   eax,word ptr [ebp-02ah];        id
    1271    1271  0 +  0000085A  50                                       push    eax
    1272    1272  0 +  0000085B  BA 00000018:R                            mov     edx,offset FLAT:@CBE3
    1273    1273  0 +  00000860  83 EC 0C                                 sub     esp,0ch
    1274    1274  0 +  00000863  B8 00000003                              mov     eax,03h
    1275    1275  0 +  00000868  E8 00000000:E                            call    Verbose
    1276    1276  0 +  0000086D  83 C4 14                                 add     esp,014h
    1277    1277  0 +
    1278    1278  0 +                                             ; 1011  break;
    1279    1279  0 +  00000870  E9 0000152A:R                            jmp     @BLBL147
    1280    1280  0 +  00000875                                   @BLBL151:
    1281    1281  0 +
    1282    1282  0 +                                             ; 1018  Verbose(3, "DrvSetup", "WM_CONTEXTMENU");
    1283    1283  0 +  00000875  83 EC 0C                                 sub     esp,0ch
    1284    1284  0 +  00000878  B9 0000060C:R                            mov     ecx,offset FLAT:@CBE47
    1285    1285  0 +  0000087D  BA 00000018:R                            mov     edx,offset FLAT:@CBE3
    1286    1286  0 +  00000882  B8 00000003                              mov     eax,03h
    1287    1287  0 +  00000887  E8 00000000:E                            call    Verbose
    1288    1288  0 +  0000088C  83 C4 04                                 add     esp,04h
    1289    1289  0 +
    1290    1290  0 +                                             ; 1019  DoPopup(hwnd, work);
    1291    1291  0 +  0000088F  8B 55 [E0]                               mov     edx,[ebp-020h]; work
    1292    1292  0 +  00000892  8B 45 [08]                               mov     eax,[ebp+08h];  hwnd
    1293    1293  0 +  00000895  E8 00001CB6:R                            call    DoPopup__FUlCP5_WORK
    1294    1294  0 +  0000089A  83 C4 08                                 add     esp,08h
    1295    1295  0 +
    1296    1296  0 +                                             ; 1020  break;
    1297    1297  0 +  0000089D  E9 0000152A:R                            jmp     @BLBL147
    1298    1298  0 +  000008A2                                   @BLBL152:
    1299    1299  0 +
    1300    1300  0 +                                             ; 1029  Verbose(3, "DrvSetup", "WM_MENUEND");
    1301    1301  0 +  000008A2  83 EC 0C                                 sub     esp,0ch
    1302    1302  0 +  000008A5  B9 0000061C:R                            mov     ecx,offset FLAT:@CBE48
    1303    1303  0 +  000008AA  BA 00000018:R                            mov     edx,offset FLAT:@CBE3
    1304    1304  0 +  000008AF  B8 00000003                              mov     eax,03h
    1305    1305  0 +  000008B4  E8 00000000:E                            call    Verbose
    1306    1306  0 +  000008B9  83 C4 0C                                 add     esp,0ch
    1307    1307  0 +
    1308    1308  0 +                                             ; 1030  if( work->pmrMenu == NULL )
    1309    1309  0 +  000008BC  8B 5D [E0]                               mov     ebx,[ebp-020h]; work
    1310    1310  0 +  000008BF  83 7B [1C] 00                            cmp     dword ptr [ebx+01ch],0h
    1311    1311  0 +  000008C3  0F 85 000008E5:R                         jne     @BLBL86
    1312    1312  0 +
    1313    1313  0 +                                             ; 1032      WinSendMsg(work->hwndCnr, CM_SETRECORDEMPHASIS,
    1314    1314  0 +  000008C9  68 40000000                              push    040000000h
    1315    1315  0 +  000008CE  6A 00                                    push    0h
    1316    1316  0 +  000008D0  68 0000034A                              push    034ah
    1317    1317  0 +  000008D5  FF 73 [08]                               push    dword ptr [ebx+08h]
    1318    1318  0 +  000008D8  E8 00000000:E                            call    WinSendMsg
    1319    1319  0 +  000008DD  83 C4 10                                 add     esp,010h
    1320    1320  0 +
    1321    1321  0 +                                             ; 1034  }
    1322    1322  0 +  000008E0  EB 30 90 90 90                           jmp     @BLBL87
    1323    1323  0 +  000008E5                                   @BLBL86:


    File: drvsetup.asm  Pass: 2   ALP: Assembly Language Processor  Ver 4.00.004   Page:   31
    drvsetup.cpp

    xxxx-ii-yyyy-cc-f--oooooooo--gggggggggggggggggggg-zzz-mm-ddd--ssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssss


    1324    1324  0 +
    1325    1325  0 +                                             ; 1043      SearchCnr(work->hwndCnr, (PFNSRCH)EmphSource, &bool, &dummy, NULL);
    1326    1326  0 +  000008E5  6A 00                                    push    0h
    1327    1327  0 +  000008E7  8D 5D [C0]                               lea     ebx,[ebp-040h]; dummy
    1328    1328  0 +  000008EA  53                                       push    ebx
    1329    1329  0 +
    1330    1330  0 +                                             ; 1041      bool = FALSE;
    1331    1331  0 +  000008EB  C7 45 [DC] 00000000                      mov     dword ptr [ebp-024h],0h;        bool
    1332    1332  0 +
    1333    1333  0 +                                             ; 1042      dummy = 0;
    1334    1334  0 +  000008F2  C7 45 [C0] 00000000                      mov     dword ptr [ebp-040h],0h;        dummy
    1335    1335  0 +
    1336    1336  0 +                                             ; 1043      SearchCnr(work->hwndCnr, (PFNSRCH)EmphSource, &bool, &dummy, NULL);
    1337    1337  0 +  000008F9  83 EC 0C                                 sub     esp,0ch
    1338    1338  0 +  000008FC  8B 45 [E0]                               mov     eax,[ebp-020h]; work
    1339    1339  0 +  000008FF  8D 4D [DC]                               lea     ecx,[ebp-024h]; bool
    1340    1340  0 +  00000902  8B 40 [08]                               mov     eax,[eax+08h]
    1341    1341  0 +  00000905  BA 00000000:E                            mov     edx,offset FLAT: EmphSource__FUlP9_MYRECORDPUlT3
    1342    1342  0 +  0000090A  E8 00000000:E                            call    SearchCnr__FUlPFUlPvT2PUl_UlPvN23
    1343    1343  0 +  0000090F  83 C4 14                                 add     esp,014h
    1344    1344  0 +
    1345    1345  0 +                                             ; 1044  }
    1346    1346  0 +  00000912                                   @BLBL87:
    1347    1347  0 +
    1348    1348  0 +                                             ; 1045  break;
    1349    1349  0 +  00000912  E9 0000152A:R                            jmp     @BLBL147
    1350    1350  0 +  00000917                                   @BLBL153:
    1351    1351  0 +
    1352    1352  0 +                                             ; 1053  Verbose(3, "DrvSetup", "WM_COMMAND");
    1353    1353  0 +  00000917  83 EC 0C                                 sub     esp,0ch
    1354    1354  0 +  0000091A  B9 00000628:R                            mov     ecx,offset FLAT:@CBE49
    1355    1355  0 +  0000091F  BA 00000018:R                            mov     edx,offset FLAT:@CBE3
    1356    1356  0 +  00000924  B8 00000003                              mov     eax,03h
    1357    1357  0 +  00000929  E8 00000000:E                            call    Verbose
    1358    1358  0 +
    1359    1359  0 +                                             ; 1055      USHORT const cmd = SHORT1FROMMP(mp1);
    1360    1360  0 +  0000092E  8B 45 [10]                               mov     eax,[ebp+010h]; mp1
    1361    1361  0 +
    1362    1362  0 +                                             ; 1053  Verbose(3, "DrvSetup", "WM_COMMAND");
    1363    1363  0 +  00000931  83 C4 0C                                 add     esp,0ch
    1364    1364  0 +
    1365    1365  0 +                                             ; 1055      USHORT const cmd = SHORT1FROMMP(mp1);
    1366    1366  0 +  00000934  66:89 45 [98]                            mov     [ebp-068h],ax;  cmd
    1367    1367  0 +
    1368    1368  0 +                                             ; 1058      switch( cmd )
    1369    1369  0 +  00000938  0F B7 C0                                 movzx   eax,ax
    1370    1370  0 +  0000093B  3D 000001BA                              cmp     eax,01bah
    1371    1371  0 +  00000940  0F 8C 00000972:R                         jl      @BLBL180
    1372    1372  0 +  00000946  0F 84 00000D4B:R                         je      @BLBL176
    1373    1373  0 +  0000094C  3D 000001BB                              cmp     eax,01bbh
    1374    1374  0 +  00000951  0F 84 00000EF3:R                         je      @BLBL178
    1375    1375  0 +  00000957  3D 000001BC                              cmp     eax,01bch
    1376    1376  0 +  0000095C  0F 84 00000D0A:R                         je      @BLBL175
    1377    1377  0 +  00000962  3D 000001BD                              cmp     eax,01bdh


    File: drvsetup.asm  Pass: 2   ALP: Assembly Language Processor  Ver 4.00.004   Page:   32
    drvsetup.cpp

    xxxx-ii-yyyy-cc-f--oooooooo--gggggggggggggggggggg-zzz-mm-ddd--ssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssss


    1378    1378  0 +  00000967  0F 84 000009F5:R                         je      @BLBL174
    1379    1379  0 +  0000096D  E9 00001025:R                            jmp     @BLBL179
    1380    1380  0 +  00000972                                   @BLBL180:
    1381    1381  0 +  00000972  3D 000001B8                              cmp     eax,01b8h
    1382    1382  0 +  00000977  0F 84 0000098D:R                         je      @BLBL173
    1383    1383  0 +  0000097D  3D 000001B9                              cmp     eax,01b9h
    1384    1384  0 +  00000982  0F 84 00000E05:R                         je      @BLBL177
    1385    1385  0 +  00000988  E9 00001025:R                            jmp     @BLBL179
    1386    1386  0 +  0000098D                                   @BLBL173:
    1387    1387  0 +
    1388    1388  0 +                                             ; 1061          Verbose(3, "DrvSetup", "WM_COMMAND, IDM_CREATE_PDEV");
    1389    1389  0 +  0000098D  83 EC 0C                                 sub     esp,0ch
    1390    1390  0 +  00000990  B9 00000634:R                            mov     ecx,offset FLAT:@CBE50
    1391    1391  0 +  00000995  BA 00000018:R                            mov     edx,offset FLAT:@CBE3
    1392    1392  0 +  0000099A  B8 00000003                              mov     eax,03h
    1393    1393  0 +  0000099F  E8 00000000:E                            call    Verbose
    1394    1394  0 +  000009A4  83 C4 0C                                 add     esp,0ch
    1395    1395  0 +
    1396    1396  0 +                                             ; 1063              PMINIRECORDCORE     ap[1] = {(PMINIRECORDCORE)work->pmrMenu};
    1397    1397  0 +  000009A7  8B 5D [E0]                               mov     ebx,[ebp-020h]; work
    1398    1398  0 +
    1399    1399  0 +                                             ; 1067              WinSendMsg(work->hwndCnr, CM_REMOVERECORD,
    1400    1400  0 +  000009AA  68 00030001                              push    030001h
    1401    1401  0 +
    1402    1402  0 +                                             ; 1063              PMINIRECORDCORE     ap[1] = {(PMINIRECORDCORE)work->pmrMenu};
    1403    1403  0 +  000009AF  8B 4B [1C]                               mov     ecx,[ebx+01ch]
    1404    1404  0 +  000009B2  89 4D [BC]                               mov     [ebp-044h],ecx; ap
    1405    1405  0 +
    1406    1406  0 +                                             ; 1067              WinSendMsg(work->hwndCnr, CM_REMOVERECORD,
    1407    1407  0 +  000009B5  8D 4D [BC]                               lea     ecx,[ebp-044h]; ap
    1408    1408  0 +  000009B8  51                                       push    ecx
    1409    1409  0 +  000009B9  68 00000346                              push    0346h
    1410    1410  0 +  000009BE  FF 73 [08]                               push    dword ptr [ebx+08h]
    1411    1411  0 +  000009C1  E8 00000000:E                            call    WinSendMsg
    1412    1412  0 +  000009C6  83 C4 10                                 add     esp,010h
    1413    1413  0 +
    1414    1414  0 +                                             ; 1073              WinPostMsg(work->hwndScanner, WUM_MKPDEV,
    1415    1415  0 +  000009C9  8B 4B [1C]                               mov     ecx,[ebx+01ch]
    1416    1416  0 +  000009CC  6A 00                                    push    0h
    1417    1417  0 +  000009CE  FF 71 [1C]                               push    dword ptr [ecx+01ch]
    1418    1418  0 +  000009D1  68 0000100D                              push    0100dh
    1419    1419  0 +  000009D6  FF 73 [0C]                               push    dword ptr [ebx+0ch]
    1420    1420  0 +  000009D9  E8 00000000:E                            call    WinPostMsg
    1421    1421  0 +  000009DE  83 C4 10                                 add     esp,010h
    1422    1422  0 +
    1423    1423  0 +                                             ; 1076          return 0;
    1424    1424  0 +  000009E1  33 C0                                    xor     eax,eax
    1425    1425  0 +  000009E3  5E                                       pop     esi
    1426    1426  0 +  000009E4  5F                                       pop     edi
    1427    1427  0 +  000009E5  5B                                       pop     ebx
    1428    1428  0 +  000009E6  81 C4 00000460                           add     esp,0460h
    1429    1429  0 +  000009EC  64:8F 05 [00000000]                      pop     fs:[0h]
    R:\Source\driver\raid\Setup\list\drvsetup.asm(1429:6): Warning ALP4511: Assuming segment width for operand size
    1430    1430  0 +  000009F3  C9                                       leave


    File: drvsetup.asm  Pass: 2   ALP: Assembly Language Processor  Ver 4.00.004   Page:   33
    drvsetup.cpp

    xxxx-ii-yyyy-cc-f--oooooooo--gggggggggggggggggggg-zzz-mm-ddd--ssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssss


    1431    1431  0 +  000009F4  C3                                       ret
    1432    1432  0 +  000009F5                                   @BLBL174:
    1433    1433  0 +
    1434    1434  0 +                                             ; 1081          Verbose(3, "DrvSetup", "WM_COMMAND, IDM_COMBINE_DRV");
    1435    1435  0 +  000009F5  83 EC 0C                                 sub     esp,0ch
    1436    1436  0 +  000009F8  BB 00000018:R                            mov     ebx,offset FLAT:@CBE3
    1437    1437  0 +  000009FD  B9 00000650:R                            mov     ecx,offset FLAT:@CBE51
    1438    1438  0 +  00000A02  8B D3                                    mov     edx,ebx
    1439    1439  0 +  00000A04  B8 00000003                              mov     eax,03h
    1440    1440  0 +  00000A09  E8 00000000:E                            call    Verbose
    1441    1441  0 +  00000A0E  83 C4 0C                                 add     esp,0ch
    1442    1442  0 +
    1443    1443  0 +                                             ; 1089              SearchCnr(work->hwndCnr, (PFNSRCH)QueryInuse,
    1444    1444  0 +  00000A11  8D 85 [FFFFFF18]                         lea     eax,[ebp-0e8h]; info
    1445    1445  0 +  00000A17  6A 00                                    push    0h
    1446    1446  0 +
    1447    1447  0 +                                             ; 1088              info.cnt = 0;
    1448    1448  0 +  00000A19  C7 85 [FFFFFF14]                         mov     dword ptr [ebp-0ech],0h;        info
                                 00000000
    1449    1449  0 +
    1450    1450  0 +                                             ; 1089              SearchCnr(work->hwndCnr, (PFNSRCH)QueryInuse,
    1451    1451  0 +  00000A23  50                                       push    eax
    1452    1452  0 +  00000A24  8D 8D [FFFFFF14]                         lea     ecx,[ebp-0ech]; info
    1453    1453  0 +  00000A2A  83 EC 0C                                 sub     esp,0ch
    1454    1454  0 +  00000A2D  8B 45 [E0]                               mov     eax,[ebp-020h]; work
    1455    1455  0 +  00000A30  BA 00000000:E                            mov     edx,offset FLAT: QueryInuse__FUlP9_MYRECORDPUlPP9_MYRECORD
    1456    1456  0 +  00000A35  8B 40 [08]                               mov     eax,[eax+08h]
    1457    1457  0 +  00000A38  E8 00000000:E                            call    SearchCnr__FUlPFUlPvT2PUl_UlPvN23
    1458    1458  0 +  00000A3D  83 C4 14                                 add     esp,014h
    1459    1459  0 +  00000A40  8B D3                                    mov     edx,ebx
    1460    1460  0 +
    1461    1461  0 +                                             ; 1091              Verbose(2, "DrvSetup", "%lu drives are \"in-use\"",info.cnt);
    1462    1462  0 +  00000A42  FF B5 [FFFFFF14]                         push    dword ptr [ebp-0ech];   info
    1463    1463  0 +  00000A48  B9 0000066C:R                            mov     ecx,offset FLAT:@CBE52
    1464    1464  0 +  00000A4D  83 EC 0C                                 sub     esp,0ch
    1465    1465  0 +  00000A50  B8 00000002                              mov     eax,02h
    1466    1466  0 +  00000A55  E8 00000000:E                            call    Verbose
    1467    1467  0 +  00000A5A  83 C4 10                                 add     esp,010h
    1468    1468  0 +
    1469    1469  0 +                                             ; 1095              ul = WinDlgBox(HWND_DESKTOP, hwnd, DrvtypeDlgProc,
    1470    1470  0 +  00000A5D  8D 85 [FFFFFF10]                         lea     eax,[ebp-0f0h]; info
    1471    1471  0 +  00000A63  50                                       push    eax
    1472    1472  0 +  00000A64  68 000002BC                              push    02bch
    1473    1473  0 +  00000A69  6A 00                                    push    0h
    1474    1474  0 +  00000A6B  68 00000000:E                            push    offset FLAT: DrvtypeDlgProc
    1475    1475  0 +  00000A70  FF 75 [08]                               push    dword ptr [ebp+08h];    hwnd
    1476    1476  0 +  00000A73  6A 01                                    push    01h
    1477    1477  0 +  00000A75  E8 00000000:E                            call    WinDlgBox
    1478    1478  0 +  00000A7A  83 C4 18                                 add     esp,018h
    1479    1479  0 +
    1480    1480  0 +                                             ; 1097              if( DID_OK == ul )
    1481    1481  0 +  00000A7D  83 F8 01                                 cmp     eax,01h
    1482    1482  0 +  00000A80  0F 85 00000CC9:R                         jne     @BLBL88
    1483    1483  0 +


    File: drvsetup.asm  Pass: 2   ALP: Assembly Language Processor  Ver 4.00.004   Page:   34
    drvsetup.cpp

    xxxx-ii-yyyy-cc-f--oooooooo--gggggggggggggggggggg-zzz-mm-ddd--ssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssss


    1484    1484  0 +                                             ; 1107                  memcpy(&newid[0], &usHostId, sizeof(usHostId));
    1485    1485  0 +  00000A86  8D 45 [D0]                               lea     eax,[ebp-030h]; newid
    1486    1486  0 +  00000A89  83 EC 0C                                 sub     esp,0ch
    1487    1487  0 +  00000A8C  B9 00000002                              mov     ecx,02h
    1488    1488  0 +  00000A91  BA 00000000:E                            mov     edx,offset FLAT:usHostId
    1489    1489  0 +  00000A96  E8 00000000:E                            call    memcpy
    1490    1490  0 +  00000A9B  83 C4 08                                 add     esp,08h
    1491    1491  0 +
    1492    1492  0 +                                             ; 1108                  *(PULONG)&newid[2] = time(NULL);
    1493    1493  0 +  00000A9E  33 C0                                    xor     eax,eax
    1494    1494  0 +  00000AA0  E8 00000000:E                            call    time
    1495    1495  0 +  00000AA5  83 C4 04                                 add     esp,04h
    1496    1496  0 +
    1497    1497  0 +                                             ; 1110                  switch( info.type )
    1498    1498  0 +  00000AA8  8B 9D [FFFFFF10]                         mov     ebx,[ebp-0f0h]; info
    1499    1499  0 +
    1500    1500  0 +                                             ; 1108                  *(PULONG)&newid[2] = time(NULL);
    1501    1501  0 +  00000AAE  89 45 [D2]                               mov     [ebp-02eh],eax; newid
    1502    1502  0 +
    1503    1503  0 +                                             ; 1110                  switch( info.type )
    1504    1504  0 +  00000AB1  83 FB 02                                 cmp     ebx,02h
    1505    1505  0 +  00000AB4  0F 8C 00000AD7:R                         jl      @BLBL186
    1506    1506  0 +  00000ABA  0F 84 00000B28:R                         je      @BLBL183
    1507    1507  0 +  00000AC0  83 FB 03                                 cmp     ebx,03h
    1508    1508  0 +  00000AC3  0F 84 00000B76:R                         je      @BLBL184
    1509    1509  0 +  00000AC9  83 FB 04                                 cmp     ebx,04h
    1510    1510  0 +  00000ACC  0F 84 00000BC4:R                         je      @BLBL185
    1511    1511  0 +  00000AD2  E9 00000C0D:R                            jmp     @BLBL181
    1512    1512  0 +  00000AD7                                   @BLBL186:
    1513    1513  0 +  00000AD7  83 FB 01                                 cmp     ebx,01h
    1514    1514  0 +  00000ADA  0F 85 00000C0D:R                         jne     @BLBL181
    1515    1515  0 +  00000AE0                                   @BLBL182:
    1516    1516  0 +
    1517    1517  0 +                                             ; 1113                      drv = new VSingle(newid);
    1518    1518  0 +  00000AE0  83 EC 04                                 sub     esp,04h
    1519    1519  0 +  00000AE3  B8 00000030                              mov     eax,030h
    1520    1520  0 +  00000AE8  E8 00000000:E                            call    __nw__FUi
    1521    1521  0 +  00000AED  83 C4 04                                 add     esp,04h
    1522    1522  0 +  00000AF0  89 45 [F0]                               mov     [ebp-010h],eax; __66
    1523    1523  0 +  00000AF3  85 C0                                    test    eax,eax
    1524    1524  0 +  00000AF5  0F 84 00000B1D:R                         je      @BLBL90
    1525    1525  0 +  00000AFB  8D 55 [D0]                               lea     edx,[ebp-030h]; newid
    1526    1526  0 +  00000AFE  83 EC 08                                 sub     esp,08h
    1527    1527  0 +  00000B01  C7 85 [FFFFFEFC]                         mov     dword ptr [ebp-0104h],01h;      __es
                                 00000001
    1528    1528  0 +  00000B0B  E8 00000000:E                            call    __ct__7VSingleFPUc
    1529    1529  0 +  00000B10  83 C4 08                                 add     esp,08h
    1530    1530  0 +  00000B13  C7 85 [FFFFFEFC]                         mov     dword ptr [ebp-0104h],0h;       __es
                                 00000000
    1531    1531  0 +  00000B1D                                   @BLBL90:
    1532    1532  0 +  00000B1D  8B 45 [F0]                               mov     eax,[ebp-010h]; __66
    1533    1533  0 +  00000B20  89 45 [CC]                               mov     [ebp-034h],eax; drv
    1534    1534  0 +
    1535    1535  0 +                                             ; 1114                      break;


    File: drvsetup.asm  Pass: 2   ALP: Assembly Language Processor  Ver 4.00.004   Page:   35
    drvsetup.cpp

    xxxx-ii-yyyy-cc-f--oooooooo--gggggggggggggggggggg-zzz-mm-ddd--ssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssss


    1536    1536  0 +  00000B23  E9 00000C0D:R                            jmp     @BLBL181
    1537    1537  0 +  00000B28                                   @BLBL183:
    1538    1538  0 +
    1539    1539  0 +                                             ; 1116                      drv = new VChain(newid, (int)info.cnt);
    1540    1540  0 +  00000B28  83 EC 04                                 sub     esp,04h
    1541    1541  0 +  00000B2B  B8 00000130                              mov     eax,0130h
    1542    1542  0 +  00000B30  E8 00000000:E                            call    __nw__FUi
    1543    1543  0 +  00000B35  83 C4 04                                 add     esp,04h
    1544    1544  0 +  00000B38  89 45 [EC]                               mov     [ebp-014h],eax; __67
    1545    1545  0 +  00000B3B  85 C0                                    test    eax,eax
    1546    1546  0 +  00000B3D  0F 84 00000B6B:R                         je      @BLBL92
    1547    1547  0 +  00000B43  8D 55 [D0]                               lea     edx,[ebp-030h]; newid
    1548    1548  0 +  00000B46  83 EC 0C                                 sub     esp,0ch
    1549    1549  0 +  00000B49  8B 8D [FFFFFF14]                         mov     ecx,[ebp-0ech]; info
    1550    1550  0 +  00000B4F  C7 85 [FFFFFEFC]                         mov     dword ptr [ebp-0104h],02h;      __es
                                 00000002
    1551    1551  0 +  00000B59  E8 00000000:E                            call    __ct__6VChainFPUci
    1552    1552  0 +  00000B5E  83 C4 0C                                 add     esp,0ch
    1553    1553  0 +  00000B61  C7 85 [FFFFFEFC]                         mov     dword ptr [ebp-0104h],0h;       __es
                                 00000000
    1554    1554  0 +  00000B6B                                   @BLBL92:
    1555    1555  0 +  00000B6B  8B 45 [EC]                               mov     eax,[ebp-014h]; __67
    1556    1556  0 +  00000B6E  89 45 [CC]                               mov     [ebp-034h],eax; drv
    1557    1557  0 +
    1558    1558  0 +                                             ; 1117                      break;
    1559    1559  0 +  00000B71  E9 00000C0D:R                            jmp     @BLBL181
    1560    1560  0 +  00000B76                                   @BLBL184:
    1561    1561  0 +
    1562    1562  0 +                                             ; 1119                      drv = new VStripe(newid, (int)info.cnt);
    1563    1563  0 +  00000B76  83 EC 04                                 sub     esp,04h
    1564    1564  0 +  00000B79  B8 00000130                              mov     eax,0130h
    1565    1565  0 +  00000B7E  E8 00000000:E                            call    __nw__FUi
    1566    1566  0 +  00000B83  83 C4 04                                 add     esp,04h
    1567    1567  0 +  00000B86  89 45 [E8]                               mov     [ebp-018h],eax; __68
    1568    1568  0 +  00000B89  85 C0                                    test    eax,eax
    1569    1569  0 +  00000B8B  0F 84 00000BB9:R                         je      @BLBL94
    1570    1570  0 +  00000B91  8D 55 [D0]                               lea     edx,[ebp-030h]; newid
    1571    1571  0 +  00000B94  83 EC 0C                                 sub     esp,0ch
    1572    1572  0 +  00000B97  8B 8D [FFFFFF14]                         mov     ecx,[ebp-0ech]; info
    1573    1573  0 +  00000B9D  C7 85 [FFFFFEFC]                         mov     dword ptr [ebp-0104h],03h;      __es
                                 00000003
    1574    1574  0 +  00000BA7  E8 00000000:E                            call    __ct__7VStripeFPUci
    1575    1575  0 +  00000BAC  83 C4 0C                                 add     esp,0ch
    1576    1576  0 +  00000BAF  C7 85 [FFFFFEFC]                         mov     dword ptr [ebp-0104h],0h;       __es
                                 00000000
    1577    1577  0 +  00000BB9                                   @BLBL94:
    1578    1578  0 +  00000BB9  8B 45 [E8]                               mov     eax,[ebp-018h]; __68
    1579    1579  0 +  00000BBC  89 45 [CC]                               mov     [ebp-034h],eax; drv
    1580    1580  0 +
    1581    1581  0 +                                             ; 1120                      break;
    1582    1582  0 +  00000BBF  EB 4C 90 90 90                           jmp     @BLBL181
    1583    1583  0 +  00000BC4                                   @BLBL185:
    1584    1584  0 +
    1585    1585  0 +                                             ; 1122                      drv = new VMirror(newid, (int)info.cnt);


    File: drvsetup.asm  Pass: 2   ALP: Assembly Language Processor  Ver 4.00.004   Page:   36
    drvsetup.cpp

    xxxx-ii-yyyy-cc-f--oooooooo--gggggggggggggggggggg-zzz-mm-ddd--ssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssss


    1586    1586  0 +  00000BC4  83 EC 04                                 sub     esp,04h
    1587    1587  0 +  00000BC7  B8 00000134                              mov     eax,0134h
    1588    1588  0 +  00000BCC  E8 00000000:E                            call    __nw__FUi
    1589    1589  0 +  00000BD1  83 C4 04                                 add     esp,04h
    1590    1590  0 +  00000BD4  89 45 [E4]                               mov     [ebp-01ch],eax; __69
    1591    1591  0 +  00000BD7  85 C0                                    test    eax,eax
    1592    1592  0 +  00000BD9  0F 84 00000C07:R                         je      @BLBL96
    1593    1593  0 +  00000BDF  8D 55 [D0]                               lea     edx,[ebp-030h]; newid
    1594    1594  0 +  00000BE2  83 EC 0C                                 sub     esp,0ch
    1595    1595  0 +  00000BE5  8B 8D [FFFFFF14]                         mov     ecx,[ebp-0ech]; info
    1596    1596  0 +  00000BEB  C7 85 [FFFFFEFC]                         mov     dword ptr [ebp-0104h],04h;      __es
                                 00000004
    1597    1597  0 +  00000BF5  E8 00000000:E                            call    __ct__7VMirrorFPUci
    1598    1598  0 +  00000BFA  83 C4 0C                                 add     esp,0ch
    1599    1599  0 +  00000BFD  C7 85 [FFFFFEFC]                         mov     dword ptr [ebp-0104h],0h;       __es
                                 00000000
    1600    1600  0 +  00000C07                                   @BLBL96:
    1601    1601  0 +  00000C07  8B 45 [E4]                               mov     eax,[ebp-01ch]; __69
    1602    1602  0 +  00000C0A  89 45 [CC]                               mov     [ebp-034h],eax; drv
    1603    1603  0 +
    1604    1604  0 +                                             ; 1123                      break;
    1605    1605  0 +  00000C0D                                   @BLBL181:
    1606    1606  0 +
    1607    1607  0 +                                             ; 1130                  for( ul = 0; ul < info.cnt; ++ul )
    1608    1608  0 +  00000C0D  83 BD [FFFFFF14] 00                      cmp     dword ptr [ebp-0ech],0h;        info
    1609    1609  0 +  00000C14  0F 86 00000CAC:R                         jbe     @BLBL97
    1610    1610  0 +  00000C1A  8B 5D [CC]                               mov     ebx,[ebp-034h]; drv
    1611    1611  0 +  00000C1D  8B 75 [E0]                               mov     esi,[ebp-020h]; work
    1612    1612  0 +  00000C20  33 FF                                    xor     edi,edi
    1613    1613  0 +  00000C22                                   @BLBL98:
    1614    1614  0 +
    1615    1615  0 +                                             ; 1135                      drv->addChild(info.child[ul]->dsk, False, Tru
    1616    1616  0 +                                             ; 1135 e);
    1617    1617  0 +  00000C22  6A 01                                    push    01h
    1618    1618  0 +
    1619    1619  0 +                                             ; 1132                      PMINIRECORDCORE     ap[1]
    1620    1620  0 +  00000C24  8D 84/BD [FFFFFF10]                      lea     eax,dword ptr [ebp+edi*04h-0f0h]
    1621    1621  0 +
    1622    1622  0 +                                             ; 1135                      drv->addChild(info.child[ul]->dsk, False, Tru
    1623    1623  0 +                                             ; 1135 e);
    1624    1624  0 +  00000C2B  83 EC 0C                                 sub     esp,0ch
    1625    1625  0 +
    1626    1626  0 +                                             ; 1132                      PMINIRECORDCORE     ap[1]
    1627    1627  0 +  00000C2E  8B 50 [08]                               mov     edx,[eax+08h]
    1628    1628  0 +  00000C31  89 85 [FFFFFB98]                         mov     [ebp-0468h],eax;        @CBE89
    1629    1629  0 +  00000C37  89 55 [B8]                               mov     [ebp-048h],edx; ap
    1630    1630  0 +
    1631    1631  0 +                                             ; 1135                      drv->addChild(info.child[ul]->dsk, False, Tru
    1632    1632  0 +                                             ; 1135 e);
    1633    1633  0 +  00000C3A  8B 33                                    mov     esi,[ebx]
    1634    1634  0 +  00000C3C  8B 52 [1C]                               mov     edx,[edx+01ch]
    1635    1635  0 +  00000C3F  8B 86 [0000008C]                         mov     eax,[esi+08ch]
    1636    1636  0 +  00000C45  33 C9                                    xor     ecx,ecx
    1637    1637  0 +  00000C47  03 C3                                    add     eax,ebx


    File: drvsetup.asm  Pass: 2   ALP: Assembly Language Processor  Ver 4.00.004   Page:   37
    drvsetup.cpp

    xxxx-ii-yyyy-cc-f--oooooooo--gggggggggggggggggggg-zzz-mm-ddd--ssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssss


    1638    1638  0 +  00000C49  FF 96 [00000088]                         call    dword ptr [esi+088h]
    1639    1639  0 +  00000C4F  8B 85 [FFFFFB98]                         mov     eax,[ebp-0468h];        @CBE89
    1640    1640  0 +  00000C55  8B 75 [E0]                               mov     esi,[ebp-020h]; work
    1641    1641  0 +
    1642    1642  0 +                                             ; 1136                      if( info.child[ul]->dsk->isWritable() )
    1643    1643  0 +  00000C58  8B 40 [08]                               mov     eax,[eax+08h]
    1644    1644  0 +
    1645    1645  0 +                                             ; 1135                      drv->addChild(info.child[ul]->dsk, False, Tru
    1646    1646  0 +                                             ; 1135 e);
    1647    1647  0 +  00000C5B  83 C4 0C                                 add     esp,0ch
    1648    1648  0 +
    1649    1649  0 +                                             ; 1136                      if( info.child[ul]->dsk->isWritable() )
    1650    1650  0 +  00000C5E  8B 40 [1C]                               mov     eax,[eax+01ch]
    1651    1651  0 +  00000C61  8B 08                                    mov     ecx,[eax]
    1652    1652  0 +  00000C63  8B 51 [0C]                               mov     edx,[ecx+0ch]
    1653    1653  0 +  00000C66  03 C2                                    add     eax,edx
    1654    1654  0 +  00000C68  FF 51 [08]                               call    dword ptr [ecx+08h]
    1655    1655  0 +  00000C6B  83 C4 04                                 add     esp,04h
    1656    1656  0 +  00000C6E  84 C0                                    test    al,al
    1657    1657  0 +  00000C70  0F 85 00000C86:R                         jne     @BLBL99
    1658    1658  0 +
    1659    1659  0 +                                             ; 1137                          drv->forceUnwritable();
    1660    1660  0 +  00000C76  8B 0B                                    mov     ecx,[ebx]
    1661    1661  0 +  00000C78  83 EC 04                                 sub     esp,04h
    1662    1662  0 +  00000C7B  8B 41 [34]                               mov     eax,[ecx+034h]
    1663    1663  0 +  00000C7E  03 C3                                    add     eax,ebx
    1664    1664  0 +  00000C80  FF 51 [30]                               call    dword ptr [ecx+030h]
    1665    1665  0 +  00000C83  83 C4 04                                 add     esp,04h
    1666    1666  0 +  00000C86                                   @BLBL99:
    1667    1667  0 +
    1668    1668  0 +                                             ; 1141                      WinSendMsg(work->hwndCnr, CM_REMOVERECORD,
    1669    1669  0 +  00000C86  68 00030001                              push    030001h
    1670    1670  0 +  00000C8B  8D 45 [B8]                               lea     eax,[ebp-048h]; ap
    1671    1671  0 +  00000C8E  50                                       push    eax
    1672    1672  0 +
    1673    1673  0 +                                             ; 1130                  for( ul = 0; ul < info.cnt; ++ul )
    1674    1674  0 +  00000C8F  47                                       inc     edi
    1675    1675  0 +
    1676    1676  0 +                                             ; 1141                      WinSendMsg(work->hwndCnr, CM_REMOVERECORD,
    1677    1677  0 +  00000C90  68 00000346                              push    0346h
    1678    1678  0 +  00000C95  FF 76 [08]                               push    dword ptr [esi+08h]
    1679    1679  0 +  00000C98  E8 00000000:E                            call    WinSendMsg
    1680    1680  0 +  00000C9D  83 C4 10                                 add     esp,010h
    1681    1681  0 +
    1682    1682  0 +                                             ; 1130                  for( ul = 0; ul < info.cnt; ++ul )
    1683    1683  0 +  00000CA0  39 BD [FFFFFF14]                         cmp     [ebp-0ech],edi; info
    1684    1684  0 +  00000CA6  0F 87 00000C22:R                         ja      @BLBL98
    1685    1685  0 +  00000CAC                                   @BLBL97:
    1686    1686  0 +
    1687    1687  0 +                                             ; 1145                  WinPostMsg(work->hwndScanner, WUM_DEVTREE, drv, NULL);
    1688    1688  0 +  00000CAC  6A 00                                    push    0h
    1689    1689  0 +  00000CAE  8B 5D [E0]                               mov     ebx,[ebp-020h]; work
    1690    1690  0 +  00000CB1  FF 75 [CC]                               push    dword ptr [ebp-034h];   drv
    1691    1691  0 +  00000CB4  68 0000100A                              push    0100ah


    File: drvsetup.asm  Pass: 2   ALP: Assembly Language Processor  Ver 4.00.004   Page:   38
    drvsetup.cpp

    xxxx-ii-yyyy-cc-f--oooooooo--gggggggggggggggggggg-zzz-mm-ddd--ssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssss


    1692    1692  0 +  00000CB9  FF 73 [0C]                               push    dword ptr [ebx+0ch]
    1693    1693  0 +  00000CBC  E8 00000000:E                            call    WinPostMsg
    1694    1694  0 +  00000CC1  83 C4 10                                 add     esp,010h
    1695    1695  0 +
    1696    1696  0 +                                             ; 1146              }
    1697    1697  0 +  00000CC4  EB 30 90 90 90                           jmp     @BLBL103
    1698    1698  0 +  00000CC9                                   @BLBL88:
    1699    1699  0 +
    1700    1700  0 +                                             ; 1151                  SearchCnr(work->hwndCnr, (PFNSRCH)EmphInuse, &bool, &dummy, NULL);
    1701    1701  0 +  00000CC9  6A 00                                    push    0h
    1702    1702  0 +  00000CCB  8D 5D [D8]                               lea     ebx,[ebp-028h]; dummy
    1703    1703  0 +  00000CCE  53                                       push    ebx
    1704    1704  0 +
    1705    1705  0 +                                             ; 1149                  bool = FALSE;
    1706    1706  0 +  00000CCF  C7 45 [DC] 00000000                      mov     dword ptr [ebp-024h],0h;        bool
    1707    1707  0 +
    1708    1708  0 +                                             ; 1150                  dummy = 0;
    1709    1709  0 +  00000CD6  C7 45 [D8] 00000000                      mov     dword ptr [ebp-028h],0h;        dummy
    1710    1710  0 +
    1711    1711  0 +                                             ; 1151                  SearchCnr(work->hwndCnr, (PFNSRCH)EmphInuse, &bool, &dummy, NULL);
    1712    1712  0 +  00000CDD  83 EC 0C                                 sub     esp,0ch
    1713    1713  0 +  00000CE0  8B 45 [E0]                               mov     eax,[ebp-020h]; work
    1714    1714  0 +  00000CE3  8D 4D [DC]                               lea     ecx,[ebp-024h]; bool
    1715    1715  0 +  00000CE6  8B 40 [08]                               mov     eax,[eax+08h]
    1716    1716  0 +  00000CE9  BA 00000000:E                            mov     edx,offset FLAT: EmphInuse__FUlP9_MYRECORDPUlT3
    1717    1717  0 +  00000CEE  E8 00000000:E                            call    SearchCnr__FUlPFUlPvT2PUl_UlPvN23
    1718    1718  0 +  00000CF3  83 C4 14                                 add     esp,014h
    1719    1719  0 +
    1720    1720  0 +                                             ; 1152              }
    1721    1721  0 +  00000CF6                                   @BLBL103:
    1722    1722  0 +
    1723    1723  0 +                                             ; 1154          return 0;
    1724    1724  0 +  00000CF6  5E                                       pop     esi
    1725    1725  0 +  00000CF7  33 C0                                    xor     eax,eax
    1726    1726  0 +  00000CF9  5F                                       pop     edi
    1727    1727  0 +  00000CFA  5B                                       pop     ebx
    1728    1728  0 +  00000CFB  81 C4 00000460                           add     esp,0460h
    1729    1729  0 +  00000D01  64:8F 05 [00000000]                      pop     fs:[0h]
    R:\Source\driver\raid\Setup\list\drvsetup.asm(1729:6): Warning ALP4511: Assuming segment width for operand size
    1730    1730  0 +  00000D08  C9                                       leave
    1731    1731  0 +  00000D09  C3                                       ret
    1732    1732  0 +  00000D0A                                   @BLBL175:
    1733    1733  0 +
    1734    1734  0 +                                             ; 1162          SearchCnr(work->hwndCnr, (PFNSRCH)EmphInuse, &bool, &dummy, NULL);
    1735    1735  0 +  00000D0A  6A 00                                    push    0h
    1736    1736  0 +  00000D0C  8D 5D [D8]                               lea     ebx,[ebp-028h]; dummy
    1737    1737  0 +  00000D0F  53                                       push    ebx
    1738    1738  0 +
    1739    1739  0 +                                             ; 1160          bool = FALSE;
    1740    1740  0 +  00000D10  C7 45 [DC] 00000000                      mov     dword ptr [ebp-024h],0h;        bool
    1741    1741  0 +
    1742    1742  0 +                                             ; 1161          dummy = 0;
    1743    1743  0 +  00000D17  C7 45 [D8] 00000000                      mov     dword ptr [ebp-028h],0h;        dummy
    1744    1744  0 +


    File: drvsetup.asm  Pass: 2   ALP: Assembly Language Processor  Ver 4.00.004   Page:   39
    drvsetup.cpp

    xxxx-ii-yyyy-cc-f--oooooooo--gggggggggggggggggggg-zzz-mm-ddd--ssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssss


    1745    1745  0 +                                             ; 1162          SearchCnr(work->hwndCnr, (PFNSRCH)EmphInuse, &bool, &dummy, NULL);
    1746    1746  0 +  00000D1E  83 EC 0C                                 sub     esp,0ch
    1747    1747  0 +  00000D21  8B 45 [E0]                               mov     eax,[ebp-020h]; work
    1748    1748  0 +  00000D24  8D 4D [DC]                               lea     ecx,[ebp-024h]; bool
    1749    1749  0 +  00000D27  8B 40 [08]                               mov     eax,[eax+08h]
    1750    1750  0 +  00000D2A  BA 00000000:E                            mov     edx,offset FLAT: EmphInuse__FUlP9_MYRECORDPUlT3
    1751    1751  0 +  00000D2F  E8 00000000:E                            call    SearchCnr__FUlPFUlPvT2PUl_UlPvN23
    1752    1752  0 +  00000D34  83 C4 14                                 add     esp,014h
    1753    1753  0 +
    1754    1754  0 +                                             ; 1163          return 0;
    1755    1755  0 +  00000D37  33 C0                                    xor     eax,eax
    1756    1756  0 +  00000D39  5E                                       pop     esi
    1757    1757  0 +  00000D3A  5F                                       pop     edi
    1758    1758  0 +  00000D3B  5B                                       pop     ebx
    1759    1759  0 +  00000D3C  81 C4 00000460                           add     esp,0460h
    1760    1760  0 +  00000D42  64:8F 05 [00000000]                      pop     fs:[0h]
    R:\Source\driver\raid\Setup\list\drvsetup.asm(1760:6): Warning ALP4511: Assuming segment width for operand size
    1761    1761  0 +  00000D49  C9                                       leave
    1762    1762  0 +  00000D4A  C3                                       ret
    1763    1763  0 +  00000D4B                                   @BLBL176:
    1764    1764  0 +
    1765    1765  0 +                                             ; 1170          Verbose(3, "DrvSetup", "WM_COMMAND, IDM_DESTROY_DRV");
    1766    1766  0 +  00000D4B  83 EC 0C                                 sub     esp,0ch
    1767    1767  0 +  00000D4E  B9 00000684:R                            mov     ecx,offset FLAT:@CBE53
    1768    1768  0 +  00000D53  BA 00000018:R                            mov     edx,offset FLAT:@CBE3
    1769    1769  0 +  00000D58  B8 00000003                              mov     eax,03h
    1770    1770  0 +  00000D5D  E8 00000000:E                            call    Verbose
    1771    1771  0 +  00000D62  83 C4 0C                                 add     esp,0ch
    1772    1772  0 +
    1773    1773  0 +                                             ; 1176          SearchCnr(work->hwndCnr, (PFNSRCH)EmphInuse, &bool, &dummy, NULL);
    1774    1774  0 +  00000D65  8D 4D [D8]                               lea     ecx,[ebp-028h]; dummy
    1775    1775  0 +  00000D68  6A 00                                    push    0h
    1776    1776  0 +
    1777    1777  0 +                                             ; 1174          bool = FALSE;
    1778    1778  0 +  00000D6A  C7 45 [DC] 00000000                      mov     dword ptr [ebp-024h],0h;        bool
    1779    1779  0 +
    1780    1780  0 +                                             ; 1176          SearchCnr(work->hwndCnr, (PFNSRCH)EmphInuse, &bool, &dummy, NULL);
    1781    1781  0 +  00000D71  51                                       push    ecx
    1782    1782  0 +
    1783    1783  0 +                                             ; 1175          dummy = 0;
    1784    1784  0 +  00000D72  C7 45 [D8] 00000000                      mov     dword ptr [ebp-028h],0h;        dummy
    1785    1785  0 +
    1786    1786  0 +                                             ; 1176          SearchCnr(work->hwndCnr, (PFNSRCH)EmphInuse, &bool, &dummy, NULL);
    1787    1787  0 +  00000D79  83 EC 0C                                 sub     esp,0ch
    1788    1788  0 +  00000D7C  8B 5D [E0]                               mov     ebx,[ebp-020h]; work
    1789    1789  0 +  00000D7F  8D 4D [DC]                               lea     ecx,[ebp-024h]; bool
    1790    1790  0 +  00000D82  8B 43 [08]                               mov     eax,[ebx+08h]
    1791    1791  0 +  00000D85  BA 00000000:E                            mov     edx,offset FLAT: EmphInuse__FUlP9_MYRECORDPUlT3
    1792    1792  0 +  00000D8A  E8 00000000:E                            call    SearchCnr__FUlPFUlPvT2PUl_UlPvN23
    1793    1793  0 +  00000D8F  83 C4 14                                 add     esp,014h
    1794    1794  0 +
    1795    1795  0 +                                             ; 1181              VRDrive *   drv = (VRDrive *)work->pmrMenu->dsk; /* ! */
    1796    1796  0 +  00000D92  8B 7B [1C]                               mov     edi,[ebx+01ch]
    1797    1797  0 +


    File: drvsetup.asm  Pass: 2   ALP: Assembly Language Processor  Ver 4.00.004   Page:   40
    drvsetup.cpp

    xxxx-ii-yyyy-cc-f--oooooooo--gggggggggggggggggggg-zzz-mm-ddd--ssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssss


    1798    1798  0 +                                             ; 1184              response = WinMessageBox(HWND_DESKTOP, hwnd,
    1799    1799  0 +  00000D95  68 00004014                              push    04014h
    1800    1800  0 +
    1801    1801  0 +                                             ; 1181              VRDrive *   drv = (VRDrive *)work->pmrMenu->dsk; /* ! */
    1802    1802  0 +  00000D9A  8B 7F [1C]                               mov     edi,[edi+01ch]
    1803    1803  0 +
    1804    1804  0 +                                             ; 1184              response = WinMessageBox(HWND_DESKTOP, hwnd,
    1805    1805  0 +  00000D9D  6A FF                                    push    0ffffffffh
    1806    1806  0 +  00000D9F  68 00000374:R                            push    offset FLAT:@CBE29
    1807    1807  0 +  00000DA4  68 000006A0:R                            push    offset FLAT:@CBE54
    1808    1808  0 +  00000DA9  FF 75 [08]                               push    dword ptr [ebp+08h];    hwnd
    1809    1809  0 +  00000DAC  6A 01                                    push    01h
    1810    1810  0 +  00000DAE  E8 00000000:E                            call    WinMessageBox
    1811    1811  0 +  00000DB3  83 C4 18                                 add     esp,018h
    1812    1812  0 +
    1813    1813  0 +                                             ; 1187              if( response == MBID_YES )
    1814    1814  0 +  00000DB6  83 F8 06                                 cmp     eax,06h
    1815    1815  0 +  00000DB9  0F 85 00000DF1:R                         jne     @BLBL104
    1816    1816  0 +
    1817    1817  0 +                                             ; 1193                  WinSendMsg(work->hwndCnr, CM_REMOVERECORD,
    1818    1818  0 +  00000DBF  68 00030001                              push    030001h
    1819    1819  0 +
    1820    1820  0 +                                             ; 1189                  PMINIRECORDCORE ap[1] = {(PMINIRECORDCORE)work->pmrMenu};
    1821    1821  0 +  00000DC4  8B 4B [1C]                               mov     ecx,[ebx+01ch]
    1822    1822  0 +  00000DC7  89 4D [B4]                               mov     [ebp-04ch],ecx; ap
    1823    1823  0 +
    1824    1824  0 +                                             ; 1193                  WinSendMsg(work->hwndCnr, CM_REMOVERECORD,
    1825    1825  0 +  00000DCA  8D 4D [B4]                               lea     ecx,[ebp-04ch]; ap
    1826    1826  0 +  00000DCD  51                                       push    ecx
    1827    1827  0 +  00000DCE  68 00000346                              push    0346h
    1828    1828  0 +  00000DD3  FF 73 [08]                               push    dword ptr [ebx+08h]
    1829    1829  0 +  00000DD6  E8 00000000:E                            call    WinSendMsg
    1830    1830  0 +  00000DDB  83 C4 10                                 add     esp,010h
    1831    1831  0 +
    1832    1832  0 +                                             ; 1200                  WinPostMsg(work->hwndScanner, WUM_DELDRV, drv, NULL);
    1833    1833  0 +  00000DDE  6A 00                                    push    0h
    1834    1834  0 +  00000DE0  57                                       push    edi
    1835    1835  0 +  00000DE1  68 0000100C                              push    0100ch
    1836    1836  0 +  00000DE6  FF 73 [0C]                               push    dword ptr [ebx+0ch]
    1837    1837  0 +  00000DE9  E8 00000000:E                            call    WinPostMsg
    1838    1838  0 +  00000DEE  83 C4 10                                 add     esp,010h
    1839    1839  0 +
    1840    1840  0 +                                             ; 1201              }
    1841    1841  0 +  00000DF1                                   @BLBL104:
    1842    1842  0 +
    1843    1843  0 +                                             ; 1203          return 0;
    1844    1844  0 +  00000DF1  5E                                       pop     esi
    1845    1845  0 +  00000DF2  33 C0                                    xor     eax,eax
    1846    1846  0 +  00000DF4  5F                                       pop     edi
    1847    1847  0 +  00000DF5  5B                                       pop     ebx
    1848    1848  0 +  00000DF6  81 C4 00000460                           add     esp,0460h
    1849    1849  0 +  00000DFC  64:8F 05 [00000000]                      pop     fs:[0h]
    R:\Source\driver\raid\Setup\list\drvsetup.asm(1849:6): Warning ALP4511: Assuming segment width for operand size
    1850    1850  0 +  00000E03  C9                                       leave


    File: drvsetup.asm  Pass: 2   ALP: Assembly Language Processor  Ver 4.00.004   Page:   41
    drvsetup.cpp

    xxxx-ii-yyyy-cc-f--oooooooo--gggggggggggggggggggg-zzz-mm-ddd--ssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssss


    1851    1851  0 +  00000E04  C3                                       ret
    1852    1852  0 +  00000E05                                   @BLBL177:
    1853    1853  0 +
    1854    1854  0 +                                             ; 1206          Verbose(3, "DrvSetup", "WM_COMMAND, IDM_DELETE_PDEV");
    1855    1855  0 +  00000E05  83 EC 0C                                 sub     esp,0ch
    1856    1856  0 +  00000E08  B9 000006B0:R                            mov     ecx,offset FLAT:@CBE55
    1857    1857  0 +  00000E0D  BA 00000018:R                            mov     edx,offset FLAT:@CBE3
    1858    1858  0 +  00000E12  B8 00000003                              mov     eax,03h
    1859    1859  0 +  00000E17  E8 00000000:E                            call    Verbose
    1860    1860  0 +  00000E1C  83 C4 0C                                 add     esp,0ch
    1861    1861  0 +
    1862    1862  0 +                                             ; 1212          SearchCnr(work->hwndCnr, (PFNSRCH)EmphInuse, &bool, &dummy, NULL);
    1863    1863  0 +  00000E1F  8D 4D [D8]                               lea     ecx,[ebp-028h]; dummy
    1864    1864  0 +  00000E22  6A 00                                    push    0h
    1865    1865  0 +
    1866    1866  0 +                                             ; 1210          bool = FALSE;
    1867    1867  0 +  00000E24  C7 45 [DC] 00000000                      mov     dword ptr [ebp-024h],0h;        bool
    1868    1868  0 +
    1869    1869  0 +                                             ; 1212          SearchCnr(work->hwndCnr, (PFNSRCH)EmphInuse, &bool, &dummy, NULL);
    1870    1870  0 +  00000E2B  51                                       push    ecx
    1871    1871  0 +
    1872    1872  0 +                                             ; 1211          dummy = 0;
    1873    1873  0 +  00000E2C  C7 45 [D8] 00000000                      mov     dword ptr [ebp-028h],0h;        dummy
    1874    1874  0 +
    1875    1875  0 +                                             ; 1212          SearchCnr(work->hwndCnr, (PFNSRCH)EmphInuse, &bool, &dummy, NULL);
    1876    1876  0 +  00000E33  83 EC 0C                                 sub     esp,0ch
    1877    1877  0 +  00000E36  8B 5D [E0]                               mov     ebx,[ebp-020h]; work
    1878    1878  0 +  00000E39  8D 4D [DC]                               lea     ecx,[ebp-024h]; bool
    1879    1879  0 +  00000E3C  8B 43 [08]                               mov     eax,[ebx+08h]
    1880    1880  0 +  00000E3F  BA 00000000:E                            mov     edx,offset FLAT: EmphInuse__FUlP9_MYRECORDPUlT3
    1881    1881  0 +  00000E44  E8 00000000:E                            call    SearchCnr__FUlPFUlPvT2PUl_UlPvN23
    1882    1882  0 +
    1883    1883  0 +                                             ; 1217              VRDev *     rdev = work->pmrMenu->dsk;
    1884    1884  0 +  00000E49  8B 7B [1C]                               mov     edi,[ebx+01ch]
    1885    1885  0 +
    1886    1886  0 +                                             ; 1212          SearchCnr(work->hwndCnr, (PFNSRCH)EmphInuse, &bool, &dummy, NULL);
    1887    1887  0 +  00000E4C  83 C4 14                                 add     esp,014h
    1888    1888  0 +
    1889    1889  0 +                                             ; 1217              VRDev *     rdev = work->pmrMenu->dsk;
    1890    1890  0 +  00000E4F  8B 7F [1C]                               mov     edi,[edi+01ch]
    1891    1891  0 +
    1892    1892  0 +                                             ; 1221              sprintf(str,"Are you sure you want to destroy"
    1893    1893  0 +  00000E52  8D 4F [08]                               lea     ecx,[edi+08h]
    1894    1894  0 +  00000E55  0F B6 51 [05]                            movzx   edx,byte ptr [ecx+05h]
    1895    1895  0 +  00000E59  52                                       push    edx
    1896    1896  0 +  00000E5A  0F B6 51 [04]                            movzx   edx,byte ptr [ecx+04h]
    1897    1897  0 +  00000E5E  52                                       push    edx
    1898    1898  0 +  00000E5F  0F B6 51 [03]                            movzx   edx,byte ptr [ecx+03h]
    1899    1899  0 +  00000E63  52                                       push    edx
    1900    1900  0 +  00000E64  0F B6 51 [02]                            movzx   edx,byte ptr [ecx+02h]
    1901    1901  0 +  00000E68  52                                       push    edx
    1902    1902  0 +  00000E69  0F B6 51 [01]                            movzx   edx,byte ptr [ecx+01h]
    1903    1903  0 +  00000E6D  52                                       push    edx
    1904    1904  0 +  00000E6E  0F B6 09                                 movzx   ecx,byte ptr [ecx]


    File: drvsetup.asm  Pass: 2   ALP: Assembly Language Processor  Ver 4.00.004   Page:   42
    drvsetup.cpp

    xxxx-ii-yyyy-cc-f--oooooooo--gggggggggggggggggggg-zzz-mm-ddd--ssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssss


    1905    1905  0 +  00000E71  51                                       push    ecx
    1906    1906  0 +  00000E72  8D B5 [FFFFFC88]                         lea     esi,[ebp-0378h];        str
    1907    1907  0 +  00000E78  83 EC 08                                 sub     esp,08h
    1908    1908  0 +  00000E7B  BA 000006CC:R                            mov     edx,offset FLAT:@CBE56
    1909    1909  0 +  00000E80  8B C6                                    mov     eax,esi
    1910    1910  0 +  00000E82  E8 00000000:E                            call    _sprintfieee
    1911    1911  0 +  00000E87  83 C4 20                                 add     esp,020h
    1912    1912  0 +
    1913    1913  0 +                                             ; 1226              response = WinMessageBox(HWND_DESKTOP, hwnd,
    1914    1914  0 +  00000E8A  68 00004014                              push    04014h
    1915    1915  0 +  00000E8F  6A FF                                    push    0ffffffffh
    1916    1916  0 +  00000E91  68 00000374:R                            push    offset FLAT:@CBE29
    1917    1917  0 +  00000E96  56                                       push    esi
    1918    1918  0 +  00000E97  FF 75 [08]                               push    dword ptr [ebp+08h];    hwnd
    1919    1919  0 +  00000E9A  6A 01                                    push    01h
    1920    1920  0 +  00000E9C  E8 00000000:E                            call    WinMessageBox
    1921    1921  0 +  00000EA1  83 C4 18                                 add     esp,018h
    1922    1922  0 +
    1923    1923  0 +                                             ; 1229              if( response == MBID_YES )
    1924    1924  0 +  00000EA4  83 F8 06                                 cmp     eax,06h
    1925    1925  0 +  00000EA7  0F 85 00000EDF:R                         jne     @BLBL105
    1926    1926  0 +
    1927    1927  0 +                                             ; 1235                  WinSendMsg(work->hwndCnr, CM_REMOVERECORD,
    1928    1928  0 +  00000EAD  68 00030001                              push    030001h
    1929    1929  0 +
    1930    1930  0 +                                             ; 1231                  PMINIRECORDCORE ap[1] = {(PMINIRECORDCORE)work->pmrMenu};
    1931    1931  0 +  00000EB2  8B 4B [1C]                               mov     ecx,[ebx+01ch]
    1932    1932  0 +  00000EB5  89 4D [B0]                               mov     [ebp-050h],ecx; ap
    1933    1933  0 +
    1934    1934  0 +                                             ; 1235                  WinSendMsg(work->hwndCnr, CM_REMOVERECORD,
    1935    1935  0 +  00000EB8  8D 4D [B0]                               lea     ecx,[ebp-050h]; ap
    1936    1936  0 +  00000EBB  51                                       push    ecx
    1937    1937  0 +  00000EBC  68 00000346                              push    0346h
    1938    1938  0 +  00000EC1  FF 73 [08]                               push    dword ptr [ebx+08h]
    1939    1939  0 +  00000EC4  E8 00000000:E                            call    WinSendMsg
    1940    1940  0 +  00000EC9  83 C4 10                                 add     esp,010h
    1941    1941  0 +
    1942    1942  0 +                                             ; 1239                  WinPostMsg(work->hwndScanner, WUM_DELPDEV, rdev, NULL);
    1943    1943  0 +  00000ECC  6A 00                                    push    0h
    1944    1944  0 +  00000ECE  57                                       push    edi
    1945    1945  0 +  00000ECF  68 0000100B                              push    0100bh
    1946    1946  0 +  00000ED4  FF 73 [0C]                               push    dword ptr [ebx+0ch]
    1947    1947  0 +  00000ED7  E8 00000000:E                            call    WinPostMsg
    1948    1948  0 +  00000EDC  83 C4 10                                 add     esp,010h
    1949    1949  0 +
    1950    1950  0 +                                             ; 1240              }
    1951    1951  0 +  00000EDF                                   @BLBL105:
    1952    1952  0 +
    1953    1953  0 +                                             ; 1242          return 0;
    1954    1954  0 +  00000EDF  5E                                       pop     esi
    1955    1955  0 +  00000EE0  33 C0                                    xor     eax,eax
    1956    1956  0 +  00000EE2  5F                                       pop     edi
    1957    1957  0 +  00000EE3  5B                                       pop     ebx
    1958    1958  0 +  00000EE4  81 C4 00000460                           add     esp,0460h


    File: drvsetup.asm  Pass: 2   ALP: Assembly Language Processor  Ver 4.00.004   Page:   43
    drvsetup.cpp

    xxxx-ii-yyyy-cc-f--oooooooo--gggggggggggggggggggg-zzz-mm-ddd--ssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssss


    1959    1959  0 +  00000EEA  64:8F 05 [00000000]                      pop     fs:[0h]
    R:\Source\driver\raid\Setup\list\drvsetup.asm(1959:6): Warning ALP4511: Assuming segment width for operand size
    1960    1960  0 +  00000EF1  C9                                       leave
    1961    1961  0 +  00000EF2  C3                                       ret
    1962    1962  0 +  00000EF3                                   @BLBL178:
    1963    1963  0 +
    1964    1964  0 +                                             ; 1245          Verbose(3, "DrvSetup", "WM_COMMAND, IDM_REMOVE_CHILD");
    1965    1965  0 +  00000EF3  83 EC 0C                                 sub     esp,0ch
    1966    1966  0 +  00000EF6  B9 0000070C:R                            mov     ecx,offset FLAT:@CBE57
    1967    1967  0 +  00000EFB  BA 00000018:R                            mov     edx,offset FLAT:@CBE3
    1968    1968  0 +  00000F00  B8 00000003                              mov     eax,03h
    1969    1969  0 +  00000F05  E8 00000000:E                            call    Verbose
    1970    1970  0 +  00000F0A  83 C4 0C                                 add     esp,0ch
    1971    1971  0 +
    1972    1972  0 +                                             ; 1251          SearchCnr(work->hwndCnr, (PFNSRCH)EmphInuse, &bool, &dummy, NULL);
    1973    1973  0 +  00000F0D  8D 4D [D8]                               lea     ecx,[ebp-028h]; dummy
    1974    1974  0 +  00000F10  6A 00                                    push    0h
    1975    1975  0 +
    1976    1976  0 +                                             ; 1249          bool = FALSE;
    1977    1977  0 +  00000F12  C7 45 [DC] 00000000                      mov     dword ptr [ebp-024h],0h;        bool
    1978    1978  0 +
    1979    1979  0 +                                             ; 1251          SearchCnr(work->hwndCnr, (PFNSRCH)EmphInuse, &bool, &dummy, NULL);
    1980    1980  0 +  00000F19  51                                       push    ecx
    1981    1981  0 +
    1982    1982  0 +                                             ; 1250          dummy = 0;
    1983    1983  0 +  00000F1A  C7 45 [D8] 00000000                      mov     dword ptr [ebp-028h],0h;        dummy
    1984    1984  0 +
    1985    1985  0 +                                             ; 1251          SearchCnr(work->hwndCnr, (PFNSRCH)EmphInuse, &bool, &dummy, NULL);
    1986    1986  0 +  00000F21  83 EC 0C                                 sub     esp,0ch
    1987    1987  0 +  00000F24  8B 5D [E0]                               mov     ebx,[ebp-020h]; work
    1988    1988  0 +  00000F27  8D 4D [DC]                               lea     ecx,[ebp-024h]; bool
    1989    1989  0 +  00000F2A  8B 43 [08]                               mov     eax,[ebx+08h]
    1990    1990  0 +  00000F2D  BA 00000000:E                            mov     edx,offset FLAT: EmphInuse__FUlP9_MYRECORDPUlT3
    1991    1991  0 +  00000F32  E8 00000000:E                            call    SearchCnr__FUlPFUlPvT2PUl_UlPvN23
    1992    1992  0 +
    1993    1993  0 +                                             ; 1256              VRDev *     rdev = work->pmrMenu->dsk;
    1994    1994  0 +  00000F37  8B 5B [1C]                               mov     ebx,[ebx+01ch]
    1995    1995  0 +
    1996    1996  0 +                                             ; 1251          SearchCnr(work->hwndCnr, (PFNSRCH)EmphInuse, &bool, &dummy, NULL);
    1997    1997  0 +  00000F3A  83 C4 14                                 add     esp,014h
    1998    1998  0 +
    1999    1999  0 +                                             ; 1256              VRDev *     rdev = work->pmrMenu->dsk;
    2000    2000  0 +  00000F3D  8B 5B [1C]                               mov     ebx,[ebx+01ch]
    2001    2001  0 +  00000F40  89 5D [A0]                               mov     [ebp-060h],ebx; rdev
    2002    2002  0 +
    2003    2003  0 +                                             ; 1260              sprintf(str,"Are you sure you want to remove"
    2004    2004  0 +  00000F43  8D 4B [08]                               lea     ecx,[ebx+08h]
    2005    2005  0 +  00000F46  0F B6 51 [05]                            movzx   edx,byte ptr [ecx+05h]
    2006    2006  0 +  00000F4A  52                                       push    edx
    2007    2007  0 +  00000F4B  0F B6 51 [04]                            movzx   edx,byte ptr [ecx+04h]
    2008    2008  0 +  00000F4F  52                                       push    edx
    2009    2009  0 +  00000F50  0F B6 51 [03]                            movzx   edx,byte ptr [ecx+03h]
    2010    2010  0 +  00000F54  52                                       push    edx
    2011    2011  0 +  00000F55  0F B6 51 [02]                            movzx   edx,byte ptr [ecx+02h]


    File: drvsetup.asm  Pass: 2   ALP: Assembly Language Processor  Ver 4.00.004   Page:   44
    drvsetup.cpp

    xxxx-ii-yyyy-cc-f--oooooooo--gggggggggggggggggggg-zzz-mm-ddd--ssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssss


    2012    2012  0 +  00000F59  52                                       push    edx
    2013    2013  0 +  00000F5A  0F B6 51 [01]                            movzx   edx,byte ptr [ecx+01h]
    2014    2014  0 +  00000F5E  52                                       push    edx
    2015    2015  0 +  00000F5F  0F B6 09                                 movzx   ecx,byte ptr [ecx]
    2016    2016  0 +  00000F62  51                                       push    ecx
    2017    2017  0 +  00000F63  8D BD [FFFFFBC0]                         lea     edi,[ebp-0440h];        str
    2018    2018  0 +  00000F69  83 EC 08                                 sub     esp,08h
    2019    2019  0 +  00000F6C  BA 0000072C:R                            mov     edx,offset FLAT:@CBE58
    2020    2020  0 +  00000F71  8B C7                                    mov     eax,edi
    2021    2021  0 +  00000F73  E8 00000000:E                            call    _sprintfieee
    2022    2022  0 +  00000F78  83 C4 20                                 add     esp,020h
    2023    2023  0 +
    2024    2024  0 +                                             ; 1265              response = WinMessageBox(HWND_DESKTOP, hwnd,
    2025    2025  0 +  00000F7B  68 00004014                              push    04014h
    2026    2026  0 +  00000F80  6A FF                                    push    0ffffffffh
    2027    2027  0 +  00000F82  68 00000374:R                            push    offset FLAT:@CBE29
    2028    2028  0 +  00000F87  57                                       push    edi
    2029    2029  0 +  00000F88  FF 75 [08]                               push    dword ptr [ebp+08h];    hwnd
    2030    2030  0 +  00000F8B  6A 01                                    push    01h
    2031    2031  0 +  00000F8D  E8 00000000:E                            call    WinMessageBox
    2032    2032  0 +  00000F92  83 C4 18                                 add     esp,018h
    2033    2033  0 +
    2034    2034  0 +                                             ; 1268              if( response == MBID_YES )
    2035    2035  0 +  00000F95  83 F8 06                                 cmp     eax,06h
    2036    2036  0 +  00000F98  0F 85 00001011:R                         jne     @BLBL106
    2037    2037  0 +
    2038    2038  0 +                                             ; 1272                  VRDrive *       parent = rdev->getParent();
    2039    2039  0 +  00000F9E  8B 4B [04]                               mov     ecx,[ebx+04h]
    2040    2040  0 +  00000FA1  89 4D [9C]                               mov     [ebp-064h],ecx; parent
    2041    2041  0 +
    2042    2042  0 +                                             ; 1276                  VRDev * highest = parent;
    2043    2043  0 +  00000FA4  89 4D [AC]                               mov     [ebp-054h],ecx; highest
    2044    2044  0 +
    2045    2045  0 +                                             ; 1277                  while( highest->getParent() = 0 )
    2046    2046  0 +  00000FA7  83 79 [04] 00                            cmp     dword ptr [ecx+04h],0h
    2047    2047  0 +  00000FAB  0F 84 00000FBD:R                         je      @BLBL107
    2048    2048  0 +  00000FB1                                   @BLBL108:
    2049    2049  0 +
    2050    2050  0 +                                             ; 1278                      highest = highest->getParent();
    2051    2051  0 +  00000FB1  8B 49 [04]                               mov     ecx,[ecx+04h]
    2052    2052  0 +
    2053    2053  0 +                                             ; 1277                  while( highest->getParent() = 0 )
    2054    2054  0 +  00000FB4  83 79 [04] 00                            cmp     dword ptr [ecx+04h],0h
    2055    2055  0 +  00000FB8  75 F7                                    jne     @BLBL108
    2056    2056  0 +  00000FBA  89 4D [AC]                               mov     [ebp-054h],ecx; highest
    2057    2057  0 +  00000FBD                                   @BLBL107:
    2058    2058  0 +
    2059    2059  0 +                                             ; 1279                  SearchCnr(work->hwndCnr, (PFNSRCH)LookupDisk,
    2060    2060  0 +  00000FBD  6A 00                                    push    0h
    2061    2061  0 +  00000FBF  8D 4D [A8]                               lea     ecx,[ebp-058h]; myrcd
    2062    2062  0 +  00000FC2  51                                       push    ecx
    2063    2063  0 +  00000FC3  8B 4D [AC]                               mov     ecx,[ebp-054h]; highest
    2064    2064  0 +  00000FC6  83 EC 0C                                 sub     esp,0ch
    2065    2065  0 +  00000FC9  8B 5D [E0]                               mov     ebx,[ebp-020h]; work


    File: drvsetup.asm  Pass: 2   ALP: Assembly Language Processor  Ver 4.00.004   Page:   45
    drvsetup.cpp

    xxxx-ii-yyyy-cc-f--oooooooo--gggggggggggggggggggg-zzz-mm-ddd--ssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssss


    2066    2066  0 +  00000FCC  BA 00000000:E                            mov     edx,offset FLAT: LookupDisk__FUlP9_MYRECORDP5VRDevPP9_MYRECORD
    2067    2067  0 +  00000FD1  8B 43 [08]                               mov     eax,[ebx+08h]
    2068    2068  0 +  00000FD4  E8 00000000:E                            call    SearchCnr__FUlPFUlPvT2PUl_UlPvN23
    2069    2069  0 +  00000FD9  83 C4 14                                 add     esp,014h
    2070    2070  0 +
    2071    2071  0 +                                             ; 1281                  ap[0] = (PMINIRECORDCORE)myrcd;
    2072    2072  0 +  00000FDC  8B 4D [A8]                               mov     ecx,[ebp-058h]; myrcd
    2073    2073  0 +
    2074    2074  0 +                                             ; 1283                  WinSendMsg(work->hwndCnr, CM_REMOVERECORD,
    2075    2075  0 +  00000FDF  68 00030001                              push    030001h
    2076    2076  0 +
    2077    2077  0 +                                             ; 1281                  ap[0] = (PMINIRECORDCORE)myrcd;
    2078    2078  0 +  00000FE4  89 4D [A4]                               mov     [ebp-05ch],ecx; ap
    2079    2079  0 +
    2080    2080  0 +                                             ; 1283                  WinSendMsg(work->hwndCnr, CM_REMOVERECORD,
    2081    2081  0 +  00000FE7  8D 4D [A4]                               lea     ecx,[ebp-05ch]; ap
    2082    2082  0 +  00000FEA  51                                       push    ecx
    2083    2083  0 +  00000FEB  68 00000346                              push    0346h
    2084    2084  0 +  00000FF0  FF 73 [08]                               push    dword ptr [ebx+08h]
    2085    2085  0 +  00000FF3  E8 00000000:E                            call    WinSendMsg
    2086    2086  0 +  00000FF8  83 C4 10                                 add     esp,010h
    2087    2087  0 +
    2088    2088  0 +                                             ; 1290                  WinPostMsg(work->hwndScanner, WUM_REMCHILD, rdev, parent);
    2089    2089  0 +  00000FFB  FF 75 [9C]                               push    dword ptr [ebp-064h];   parent
    2090    2090  0 +  00000FFE  FF 75 [A0]                               push    dword ptr [ebp-060h];   rdev
    2091    2091  0 +  00001001  68 0000100E                              push    0100eh
    2092    2092  0 +  00001006  FF 73 [0C]                               push    dword ptr [ebx+0ch]
    2093    2093  0 +  00001009  E8 00000000:E                            call    WinPostMsg
    2094    2094  0 +  0000100E  83 C4 10                                 add     esp,010h
    2095    2095  0 +
    2096    2096  0 +                                             ; 1291              }
    2097    2097  0 +  00001011                                   @BLBL106:
    2098    2098  0 +
    2099    2099  0 +                                             ; 1293          return 0;
    2100    2100  0 +  00001011  5E                                       pop     esi
    2101    2101  0 +  00001012  33 C0                                    xor     eax,eax
    2102    2102  0 +  00001014  5F                                       pop     edi
    2103    2103  0 +  00001015  5B                                       pop     ebx
    2104    2104  0 +  00001016  81 C4 00000460                           add     esp,0460h
    2105    2105  0 +  0000101C  64:8F 05 [00000000]                      pop     fs:[0h]
    R:\Source\driver\raid\Setup\list\drvsetup.asm(2105:6): Warning ALP4511: Assuming segment width for operand size
    2106    2106  0 +  00001023  C9                                       leave
    2107    2107  0 +  00001024  C3                                       ret
    2108    2108  0 +  00001025                                   @BLBL179:
    2109    2109  0 +
    2110    2110  0 +                                             ; 1297          Verbose(2, "DrvSetup", "WM_COMMAND %u", cmd);
    2111    2111  0 +  00001025  B9 00000774:R                            mov     ecx,offset FLAT:@CBE59
    2112    2112  0 +  0000102A  0F B7 45 [98]                            movzx   eax,word ptr [ebp-068h];        cmd
    2113    2113  0 +  0000102E  50                                       push    eax
    2114    2114  0 +  0000102F  BA 00000018:R                            mov     edx,offset FLAT:@CBE3
    2115    2115  0 +  00001034  83 EC 0C                                 sub     esp,0ch
    2116    2116  0 +  00001037  B8 00000002                              mov     eax,02h
    2117    2117  0 +  0000103C  E8 00000000:E                            call    Verbose
    2118    2118  0 +  00001041  83 C4 10                                 add     esp,010h


    File: drvsetup.asm  Pass: 2   ALP: Assembly Language Processor  Ver 4.00.004   Page:   46
    drvsetup.cpp

    xxxx-ii-yyyy-cc-f--oooooooo--gggggggggggggggggggg-zzz-mm-ddd--ssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssss


    2119    2119  0 +
    2120    2120  0 +                                             ; 1301  break;                                  /* continue with default */
    2121    2121  0 +  00001044  E9 0000152A:R                            jmp     @BLBL147
    2122    2122  0 +  00001049                                   @BLBL154:
    2123    2123  0 +
    2124    2124  0 +                                             ; 1309  Verbose(3, "DrvSetup", "WM_CREATE");
    2125    2125  0 +  00001049  83 EC 0C                                 sub     esp,0ch
    2126    2126  0 +  0000104C  B9 00000784:R                            mov     ecx,offset FLAT:@CBE60
    2127    2127  0 +  00001051  BA 00000018:R                            mov     edx,offset FLAT:@CBE3
    2128    2128  0 +  00001056  B8 00000003                              mov     eax,03h
    2129    2129  0 +  0000105B  E8 00000000:E                            call    Verbose
    2130    2130  0 +  00001060  83 C4 08                                 add     esp,08h
    2131    2131  0 +
    2132    2132  0 +                                             ; 1310  LoadPresParam(WC_DRVSETUP);
    2133    2133  0 +  00001063  B8 00000790:R                            mov     eax,offset FLAT:@CBE61
    2134    2134  0 +  00001068  E8 00002312:R                            call    LoadPresParam__FPc
    2135    2135  0 +  0000106D  83 C4 04                                 add     esp,04h
    2136    2136  0 +
    2137    2137  0 +                                             ; 1311  break;                                  /* keep on going... */
    2138    2138  0 +  00001070  E9 0000152A:R                            jmp     @BLBL147
    2139    2139  0 +  00001075                                   @BLBL155:
    2140    2140  0 +
    2141    2141  0 +                                             ; 1319  Verbose(3, "DrvSetup", "WM_CLOSE");
    2142    2142  0 +  00001075  83 EC 0C                                 sub     esp,0ch
    2143    2143  0 +  00001078  BB 00000018:R                            mov     ebx,offset FLAT:@CBE3
    2144    2144  0 +  0000107D  B9 000007A0:R                            mov     ecx,offset FLAT:@CBE62
    2145    2145  0 +  00001082  8B D3                                    mov     edx,ebx
    2146    2146  0 +  00001084  B8 00000003                              mov     eax,03h
    2147    2147  0 +  00001089  E8 00000000:E                            call    Verbose
    2148    2148  0 +  0000108E  83 C4 0C                                 add     esp,0ch
    2149    2149  0 +
    2150    2150  0 +                                             ; 1327      SearchCnr(work->hwndCnr, (PFNSRCH)QueryAny,
    2151    2151  0 +  00001091  8D 85 [FFFFFE7C]                         lea     eax,[ebp-0184h];        info
    2152    2152  0 +  00001097  6A 00                                    push    0h
    2153    2153  0 +
    2154    2154  0 +                                             ; 1326      info.cnt = 0;
    2155    2155  0 +  00001099  C7 85 [FFFFFE78]                         mov     dword ptr [ebp-0188h],0h;       info
                                 00000000
    2156    2156  0 +
    2157    2157  0 +                                             ; 1327      SearchCnr(work->hwndCnr, (PFNSRCH)QueryAny,
    2158    2158  0 +  000010A3  50                                       push    eax
    2159    2159  0 +  000010A4  8D 8D [FFFFFE78]                         lea     ecx,[ebp-0188h];        info
    2160    2160  0 +  000010AA  83 EC 0C                                 sub     esp,0ch
    2161    2161  0 +  000010AD  8B 7D [E0]                               mov     edi,[ebp-020h]; work
    2162    2162  0 +  000010B0  BA 00000000:E                            mov     edx,offset FLAT: QueryAny__FUlP9_MYRECORDPUlPP9_MYRECORD
    2163    2163  0 +  000010B5  8B 47 [08]                               mov     eax,[edi+08h]
    2164    2164  0 +  000010B8  E8 00000000:E                            call    SearchCnr__FUlPFUlPvT2PUl_UlPvN23
    2165    2165  0 +  000010BD  83 C4 14                                 add     esp,014h
    2166    2166  0 +  000010C0  8B D3                                    mov     edx,ebx
    2167    2167  0 +
    2168    2168  0 +                                             ; 1329      Verbose(2, "DrvSetup", "%lu drives are available", info.cnt);
    2169    2169  0 +  000010C2  FF B5 [FFFFFE78]                         push    dword ptr [ebp-0188h];  info
    2170    2170  0 +  000010C8  B9 000007AC:R                            mov     ecx,offset FLAT:@CBE63
    2171    2171  0 +  000010CD  83 EC 0C                                 sub     esp,0ch


    File: drvsetup.asm  Pass: 2   ALP: Assembly Language Processor  Ver 4.00.004   Page:   47
    drvsetup.cpp

    xxxx-ii-yyyy-cc-f--oooooooo--gggggggggggggggggggg-zzz-mm-ddd--ssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssss


    2172    2172  0 +  000010D0  B8 00000002                              mov     eax,02h
    2173    2173  0 +  000010D5  E8 00000000:E                            call    Verbose
    2174    2174  0 +  000010DA  83 C4 10                                 add     esp,010h
    2175    2175  0 +
    2176    2176  0 +                                             ; 1330      for( ul = 0; ul < info.cnt; ++ul )
    2177    2177  0 +  000010DD  83 BD [FFFFFE78] 00                      cmp     dword ptr [ebp-0188h],0h;       info
    2178    2178  0 +  000010E4  0F 86 00001113:R                         jbe     @BLBL112
    2179    2179  0 +  000010EA  8B F7                                    mov     esi,edi
    2180    2180  0 +  000010EC  33 FF                                    xor     edi,edi
    2181    2181  0 +  000010EE                                   @BLBL113:
    2182    2182  0 +
    2183    2183  0 +                                             ; 1332          WinPostMsg(work->hwndScanner, WUM_CLOSEDEV,
    2184    2184  0 +  000010EE  6A 00                                    push    0h
    2185    2185  0 +  000010F0  8B 84/BD [FFFFFE7C]                      mov     eax,dword ptr [ebp+edi*04h-0184h]
    2186    2186  0 +
    2187    2187  0 +                                             ; 1330      for( ul = 0; ul < info.cnt; ++ul )
    2188    2188  0 +  000010F7  47                                       inc     edi
    2189    2189  0 +
    2190    2190  0 +                                             ; 1332          WinPostMsg(work->hwndScanner, WUM_CLOSEDEV,
    2191    2191  0 +  000010F8  FF 70 [1C]                               push    dword ptr [eax+01ch]
    2192    2192  0 +  000010FB  68 0000100F                              push    0100fh
    2193    2193  0 +  00001100  FF 76 [0C]                               push    dword ptr [esi+0ch]
    2194    2194  0 +  00001103  E8 00000000:E                            call    WinPostMsg
    2195    2195  0 +  00001108  83 C4 10                                 add     esp,010h
    2196    2196  0 +
    2197    2197  0 +                                             ; 1330      for( ul = 0; ul < info.cnt; ++ul )
    2198    2198  0 +  0000110B  39 BD [FFFFFE78]                         cmp     [ebp-0188h],edi;        info
    2199    2199  0 +  00001111  77 DB                                    ja      @BLBL113
    2200    2200  0 +  00001113                                   @BLBL112:
    2201    2201  0 +
    2202    2202  0 +                                             ; 1336  WinPostMsg(work->hwndScanner, WM_CLOSE, 0, 0);
    2203    2203  0 +  00001113  6A 00                                    push    0h
    2204    2204  0 +  00001115  8B 5D [E0]                               mov     ebx,[ebp-020h]; work
    2205    2205  0 +  00001118  6A 00                                    push    0h
    2206    2206  0 +  0000111A  6A 29                                    push    029h
    2207    2207  0 +  0000111C  FF 73 [0C]                               push    dword ptr [ebx+0ch]
    2208    2208  0 +  0000111F  E8 00000000:E                            call    WinPostMsg
    2209    2209  0 +  00001124  83 C4 10                                 add     esp,010h
    2210    2210  0 +
    2211    2211  0 +                                             ; 1337  break;                                  /* continue... */
    2212    2212  0 +  00001127  E9 0000152A:R                            jmp     @BLBL147
    2213    2213  0 +  0000112C                                   @BLBL156:
    2214    2214  0 +
    2215    2215  0 +                                             ; 1347  Verbose(3, "DrvSetup", "WM_DESTROY");
    2216    2216  0 +  0000112C  83 EC 0C                                 sub     esp,0ch
    2217    2217  0 +  0000112F  B9 000007C8:R                            mov     ecx,offset FLAT:@CBE64
    2218    2218  0 +  00001134  BA 00000018:R                            mov     edx,offset FLAT:@CBE3
    2219    2219  0 +  00001139  B8 00000003                              mov     eax,03h
    2220    2220  0 +  0000113E  E8 00000000:E                            call    Verbose
    2221    2221  0 +  00001143  83 C4 0C                                 add     esp,0ch
    2222    2222  0 +
    2223    2223  0 +                                             ; 1349      WinDestroyWindow(work->hwndSngPopup);
    2224    2224  0 +  00001146  8B 5D [E0]                               mov     ebx,[ebp-020h]; work
    2225    2225  0 +  00001149  FF 73 [14]                               push    dword ptr [ebx+014h]


    File: drvsetup.asm  Pass: 2   ALP: Assembly Language Processor  Ver 4.00.004   Page:   48
    drvsetup.cpp

    xxxx-ii-yyyy-cc-f--oooooooo--gggggggggggggggggggg-zzz-mm-ddd--ssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssss


    2226    2226  0 +  0000114C  E8 00000000:E                            call    WinDestroyWindow
    2227    2227  0 +  00001151  83 C4 04                                 add     esp,04h
    2228    2228  0 +
    2229    2229  0 +                                             ; 1350      WinDestroyWindow(work->hwndMulPopup);
    2230    2230  0 +  00001154  FF 73 [18]                               push    dword ptr [ebx+018h]
    2231    2231  0 +  00001157  E8 00000000:E                            call    WinDestroyWindow
    2232    2232  0 +  0000115C  83 C4 04                                 add     esp,04h
    2233    2233  0 +
    2234    2234  0 +                                             ; 1351      WinDestroyWindow(work->hwndCnr);
    2235    2235  0 +  0000115F  FF 73 [08]                               push    dword ptr [ebx+08h]
    2236    2236  0 +  00001162  E8 00000000:E                            call    WinDestroyWindow
    2237    2237  0 +  00001167  83 C4 04                                 add     esp,04h
    2238    2238  0 +
    2239    2239  0 +                                             ; 1352      WinPostMsg(work->self->parent, WUM_THREADENDED, work->self, 0);
    2240    2240  0 +  0000116A  8B 0B                                    mov     ecx,[ebx]
    2241    2241  0 +  0000116C  6A 00                                    push    0h
    2242    2242  0 +  0000116E  51                                       push    ecx
    2243    2243  0 +  0000116F  68 00001003                              push    01003h
    2244    2244  0 +  00001174  FF 31                                    push    dword ptr [ecx]
    2245    2245  0 +  00001176  E8 00000000:E                            call    WinPostMsg
    2246    2246  0 +  0000117B  83 C4 10                                 add     esp,010h
    2247    2247  0 +
    2248    2248  0 +                                             ; 1354  break;
    2249    2249  0 +  0000117E  E9 0000152A:R                            jmp     @BLBL147
    2250    2250  0 +  00001183                                   @BLBL157:
    2251    2251  0 +
    2252    2252  0 +                                             ; 1368      if( WinQueryWindowPos(WinQueryWindow(hwnd, QW_PARENT), &size) == TRUE )
    2253    2253  0 +  00001183  8D 9D [FFFFFE50]                         lea     ebx,[ebp-01b0h];        size
    2254    2254  0 +
    2255    2255  0 +                                             ; 1364  Verbose(3, "DrvSetup", "WM_SIZE");
    2256    2256  0 +  00001189  83 EC 0C                                 sub     esp,0ch
    2257    2257  0 +  0000118C  B9 000007D4:R                            mov     ecx,offset FLAT:@CBE65
    2258    2258  0 +  00001191  BA 00000018:R                            mov     edx,offset FLAT:@CBE3
    2259    2259  0 +  00001196  B8 00000003                              mov     eax,03h
    2260    2260  0 +  0000119B  E8 00000000:E                            call    Verbose
    2261    2261  0 +  000011A0  83 C4 0C                                 add     esp,0ch
    2262    2262  0 +
    2263    2263  0 +                                             ; 1368      if( WinQueryWindowPos(WinQueryWindow(hwnd, QW_PARENT), &size) == TRUE )
    2264    2264  0 +  000011A3  6A 05                                    push    05h
    2265    2265  0 +  000011A5  FF 75 [08]                               push    dword ptr [ebp+08h];    hwnd
    2266    2266  0 +  000011A8  E8 00000000:E                            call    WinQueryWindow
    2267    2267  0 +  000011AD  83 C4 08                                 add     esp,08h
    2268    2268  0 +  000011B0  53                                       push    ebx
    2269    2269  0 +  000011B1  50                                       push    eax
    2270    2270  0 +  000011B2  E8 00000000:E                            call    WinQueryWindowPos
    2271    2271  0 +  000011B7  83 C4 08                                 add     esp,08h
    2272    2272  0 +  000011BA  83 F8 01                                 cmp     eax,01h
    2273    2273  0 +  000011BD  0F 85 000011DE:R                         jne     @BLBL117
    2274    2274  0 +
    2275    2275  0 +                                             ; 1369          ProfileWrite(WC_DRVSETUP, "Size", sizeof(size), &size);
    2276    2276  0 +  000011C3  53                                       push    ebx
    2277    2277  0 +  000011C4  B9 00000024                              mov     ecx,024h
    2278    2278  0 +  000011C9  83 EC 0C                                 sub     esp,0ch
    2279    2279  0 +  000011CC  BA 000007DC:R                            mov     edx,offset FLAT:@CBE66


    File: drvsetup.asm  Pass: 2   ALP: Assembly Language Processor  Ver 4.00.004   Page:   49
    drvsetup.cpp

    xxxx-ii-yyyy-cc-f--oooooooo--gggggggggggggggggggg-zzz-mm-ddd--ssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssss


    2280    2280  0 +  000011D1  B8 00000790:R                            mov     eax,offset FLAT:@CBE61
    2281    2281  0 +  000011D6  E8 00000000:E                            call    ProfileWrite
    2282    2282  0 +  000011DB  83 C4 10                                 add     esp,010h
    2283    2283  0 +  000011DE                                   @BLBL117:
    2284    2284  0 +
    2285    2285  0 +                                             ; 1371      if( WinQueryWindowPos(hwnd, &size) == TRUE )
    2286    2286  0 +  000011DE  8D 9D [FFFFFE50]                         lea     ebx,[ebp-01b0h];        size
    2287    2287  0 +  000011E4  53                                       push    ebx
    2288    2288  0 +  000011E5  FF 75 [08]                               push    dword ptr [ebp+08h];    hwnd
    2289    2289  0 +  000011E8  E8 00000000:E                            call    WinQueryWindowPos
    2290    2290  0 +  000011ED  83 C4 08                                 add     esp,08h
    2291    2291  0 +  000011F0  83 F8 01                                 cmp     eax,01h
    2292    2292  0 +  000011F3  0F 85 00001222:R                         jne     @BLBL118
    2293    2293  0 +
    2294    2294  0 +                                             ; 1372          WinSetWindowPos(work->hwndCnr, HWND_TOP,
    2295    2295  0 +  000011F9  68 0000008B                              push    08bh
    2296    2296  0 +  000011FE  8B 4D [14]                               mov     ecx,[ebp+014h]; mp2
    2297    2297  0 +  00001201  8B D9                                    mov     ebx,ecx
    2298    2298  0 +  00001203  C1 E9 10                                 shr     ecx,010h
    2299    2299  0 +  00001206  0F B7 C9                                 movzx   ecx,cx
    2300    2300  0 +  00001209  51                                       push    ecx
    2301    2301  0 +  0000120A  0F B7 DB                                 movzx   ebx,bx
    2302    2302  0 +  0000120D  53                                       push    ebx
    2303    2303  0 +  0000120E  8B 5D [E0]                               mov     ebx,[ebp-020h]; work
    2304    2304  0 +  00001211  6A 00                                    push    0h
    2305    2305  0 +  00001213  6A 00                                    push    0h
    2306    2306  0 +  00001215  6A 03                                    push    03h
    2307    2307  0 +  00001217  FF 73 [08]                               push    dword ptr [ebx+08h]
    2308    2308  0 +  0000121A  E8 00000000:E                            call    WinSetWindowPos
    2309    2309  0 +  0000121F  83 C4 1C                                 add     esp,01ch
    2310    2310  0 +
    2311    2311  0 +                                             ; 1375                          SWP_SIZE|SWP_MOVE|SWP_SHOW|SWP_ACTIVATE);
    2312    2312  0 +  00001222                                   @BLBL118:
    2313    2313  0 +
    2314    2314  0 +                                             ; 1377  break;
    2315    2315  0 +  00001222  E9 0000152A:R                            jmp     @BLBL147
    2316    2316  0 +  00001227                                   @BLBL158:
    2317    2317  0 +
    2318    2318  0 +                                             ; 1389      if( WinQueryWindowPos(WinQueryWindow(hwnd, QW_PARENT), &swp) == TRUE )
    2319    2319  0 +  00001227  8D 9D [FFFFFB9C]                         lea     ebx,[ebp-0464h];        swp
    2320    2320  0 +
    2321    2321  0 +                                             ; 1385  Verbose(3, "DrvSetup", "WM_MOVE");
    2322    2322  0 +  0000122D  83 EC 0C                                 sub     esp,0ch
    2323    2323  0 +  00001230  B9 000007E4:R                            mov     ecx,offset FLAT:@CBE67
    2324    2324  0 +  00001235  BA 00000018:R                            mov     edx,offset FLAT:@CBE3
    2325    2325  0 +  0000123A  B8 00000003                              mov     eax,03h
    2326    2326  0 +  0000123F  E8 00000000:E                            call    Verbose
    2327    2327  0 +  00001244  83 C4 0C                                 add     esp,0ch
    2328    2328  0 +
    2329    2329  0 +                                             ; 1389      if( WinQueryWindowPos(WinQueryWindow(hwnd, QW_PARENT), &swp) == TRUE )
    2330    2330  0 +  00001247  6A 05                                    push    05h
    2331    2331  0 +  00001249  FF 75 [08]                               push    dword ptr [ebp+08h];    hwnd
    2332    2332  0 +  0000124C  E8 00000000:E                            call    WinQueryWindow
    2333    2333  0 +  00001251  83 C4 08                                 add     esp,08h


    File: drvsetup.asm  Pass: 2   ALP: Assembly Language Processor  Ver 4.00.004   Page:   50
    drvsetup.cpp

    xxxx-ii-yyyy-cc-f--oooooooo--gggggggggggggggggggg-zzz-mm-ddd--ssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssss


    2334    2334  0 +  00001254  53                                       push    ebx
    2335    2335  0 +  00001255  50                                       push    eax
    2336    2336  0 +  00001256  E8 00000000:E                            call    WinQueryWindowPos
    2337    2337  0 +  0000125B  83 C4 08                                 add     esp,08h
    2338    2338  0 +  0000125E  83 F8 01                                 cmp     eax,01h
    2339    2339  0 +  00001261  0F 85 00001282:R                         jne     @BLBL119
    2340    2340  0 +
    2341    2341  0 +                                             ; 1390          ProfileWrite(WC_DRVSETUP, "Position", sizeof(swp), &swp);
    2342    2342  0 +  00001267  53                                       push    ebx
    2343    2343  0 +  00001268  B9 00000024                              mov     ecx,024h
    2344    2344  0 +  0000126D  83 EC 0C                                 sub     esp,0ch
    2345    2345  0 +  00001270  BA 000007EC:R                            mov     edx,offset FLAT:@CBE68
    2346    2346  0 +  00001275  B8 00000790:R                            mov     eax,offset FLAT:@CBE61
    2347    2347  0 +  0000127A  E8 00000000:E                            call    ProfileWrite
    2348    2348  0 +  0000127F  83 C4 10                                 add     esp,010h
    2349    2349  0 +  00001282                                   @BLBL119:
    2350    2350  0 +
    2351    2351  0 +                                             ; 1392  break;
    2352    2352  0 +  00001282  E9 0000152A:R                            jmp     @BLBL147
    2353    2353  0 +  00001287                                   @BLBL159:
    2354    2354  0 +
    2355    2355  0 +                                             ; 1403      Verbose(1, "DrvSetup", "WM_QUERYTRACKINFO (tracking flags %#x)",tf);
    2356    2356  0 +  00001287  66:8B 45 [10]                            mov     ax,[ebp+010h];  mp1
    2357    2357  0 +  0000128B  0F B7 C0                                 movzx   eax,ax
    2358    2358  0 +  0000128E  50                                       push    eax
    2359    2359  0 +  0000128F  B9 000007F8:R                            mov     ecx,offset FLAT:@CBE69
    2360    2360  0 +  00001294  83 EC 0C                                 sub     esp,0ch
    2361    2361  0 +  00001297  BA 00000018:R                            mov     edx,offset FLAT:@CBE3
    2362    2362  0 +  0000129C  B8 00000001                              mov     eax,01h
    2363    2363  0 +  000012A1  E8 00000000:E                            call    Verbose
    2364    2364  0 +  000012A6  83 C4 10                                 add     esp,010h
    2365    2365  0 +
    2366    2366  0 +                                             ; 1405  break;                          /* has to do default processing */
    2367    2367  0 +  000012A9  E9 0000152A:R                            jmp     @BLBL147
    2368    2368  0 +  000012AE                                   @BLBL160:
    2369    2369  0 +
    2370    2370  0 +                                             ; 1418      Verbose(3, "DrvSetup", "WM_PRESPARAMCHANGED(type %#x)", LONGFROMMP(mp1));
    2371    2371  0 +  000012AE  8B 45 [10]                               mov     eax,[ebp+010h]; mp1
    2372    2372  0 +  000012B1  50                                       push    eax
    2373    2373  0 +  000012B2  B9 00000820:R                            mov     ecx,offset FLAT:@CBE70
    2374    2374  0 +  000012B7  83 EC 0C                                 sub     esp,0ch
    2375    2375  0 +  000012BA  BA 00000018:R                            mov     edx,offset FLAT:@CBE3
    2376    2376  0 +  000012BF  B8 00000003                              mov     eax,03h
    2377    2377  0 +  000012C4  E8 00000000:E                            call    Verbose
    2378    2378  0 +  000012C9  83 C4 10                                 add     esp,010h
    2379    2379  0 +
    2380    2380  0 +                                             ; 1419      if( work == NULL )
    2381    2381  0 +  000012CC  83 7D [E0] 00                            cmp     dword ptr [ebp-020h],0h;        work
    2382    2382  0 +  000012D0  0F 85 000012DB:R                         jne     @BLBL120
    2383    2383  0 +
    2384    2384  0 +                                             ; 1420          break;
    2385    2385  0 +  000012D6  E9 0000152A:R                            jmp     @BLBL147
    2386    2386  0 +  000012DB                                   @BLBL120:
    2387    2387  0 +


    File: drvsetup.asm  Pass: 2   ALP: Assembly Language Processor  Ver 4.00.004   Page:   51
    drvsetup.cpp

    xxxx-ii-yyyy-cc-f--oooooooo--gggggggggggggggggggg-zzz-mm-ddd--ssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssss


    2388    2388  0 +                                             ; 1422      switch( LONGFROMMP(mp1) )
    2389    2389  0 +  000012DB  8B 45 [10]                               mov     eax,[ebp+010h]; mp1
    2390    2390  0 +  000012DE  83 F8 01                                 cmp     eax,01h
    2391    2391  0 +  000012E1  0F 84 000012FE:R                         je      @BLBL187
    2392    2392  0 +  000012E7  83 F8 03                                 cmp     eax,03h
    2393    2393  0 +  000012EA  0F 84 000013A1:R                         je      @BLBL188
    2394    2394  0 +  000012F0  83 F8 0F                                 cmp     eax,0fh
    2395    2395  0 +  000012F3  0F 84 00001444:R                         je      @BLBL189
    2396    2396  0 +  000012F9  E9 000014F0:R                            jmp     @BLBL190
    2397    2397  0 +  000012FE                                   @BLBL187:
    2398    2398  0 +
    2399    2399  0 +                                             ; 1425          cb = WinQueryPresParam(hwnd, PP_FOREGROUNDCOLOR, 0, NULL,
    2400    2400  0 +  000012FE  6A 01                                    push    01h
    2401    2401  0 +  00001300  68 00000004:R                            push    offset FLAT:@3rgbForeground
    2402    2402  0 +  00001305  6A 04                                    push    04h
    2403    2403  0 +  00001307  6A 00                                    push    0h
    2404    2404  0 +  00001309  6A 00                                    push    0h
    2405    2405  0 +  0000130B  6A 01                                    push    01h
    2406    2406  0 +  0000130D  FF 75 [08]                               push    dword ptr [ebp+08h];    hwnd
    2407    2407  0 +  00001310  E8 00000000:E                            call    WinQueryPresParam
    2408    2408  0 +  00001315  83 C4 1C                                 add     esp,01ch
    2409    2409  0 +
    2410    2410  0 +                                             ; 1428          if( cb == 0 )
    2411    2411  0 +  00001318  85 C0                                    test    eax,eax
    2412    2412  0 +  0000131A  0F 85 0000134E:R                         jne     @BLBL121
    2413    2413  0 +
    2414    2414  0 +                                             ; 1429              Verbose(1, "DrvSetup",
    2415    2415  0 +  00001320  8B 5D [E0]                               mov     ebx,[ebp-020h]; work
    2416    2416  0 +  00001323  FF 73 [04]                               push    dword ptr [ebx+04h]
    2417    2417  0 +  00001326  E8 00000000:E                            call    WinGetLastError
    2418    2418  0 +  0000132B  83 C4 04                                 add     esp,04h
    2419    2419  0 +  0000132E  B9 00000840:R                            mov     ecx,offset FLAT:@CBE71
    2420    2420  0 +  00001333  50                                       push    eax
    2421    2421  0 +  00001334  BA 00000018:R                            mov     edx,offset FLAT:@CBE3
    2422    2422  0 +  00001339  83 EC 0C                                 sub     esp,0ch
    2423    2423  0 +  0000133C  B8 00000001                              mov     eax,01h
    2424    2424  0 +  00001341  E8 00000000:E                            call    Verbose
    2425    2425  0 +  00001346  83 C4 10                                 add     esp,010h
    2426    2426  0 +
    2427    2427  0 +                                             ; 1431                      WinGetLastError(work-
    2428    2428  0 +                                             ; 1431 >hab));
    2429    2429  0 +  00001349  EB 51 90 90 90                           jmp     @BLBL122
    2430    2430  0 +  0000134E                                   @BLBL121:
    2431    2431  0 +
    2432    2432  0 +                                             ; 1434              Verbose(2, "DrvSetup", "Set foreground colour to %#x",
    2433    2433  0 +  0000134E  FF 35 [00000004]:R                       push    dword ptr  @3rgbForeground
    2434    2434  0 +  00001354  B9 0000086C:R                            mov     ecx,offset FLAT:@CBE72
    2435    2435  0 +  00001359  83 EC 0C                                 sub     esp,0ch
    2436    2436  0 +  0000135C  BA 00000018:R                            mov     edx,offset FLAT:@CBE3
    2437    2437  0 +  00001361  B8 00000002                              mov     eax,02h
    2438    2438  0 +  00001366  E8 00000000:E                            call    Verbose
    2439    2439  0 +  0000136B  83 C4 10                                 add     esp,010h
    2440    2440  0 +
    2441    2441  0 +                                             ; 1436              ProfileWrite(WC_DRVSETUP, "Foreground",


    File: drvsetup.asm  Pass: 2   ALP: Assembly Language Processor  Ver 4.00.004   Page:   52
    drvsetup.cpp

    xxxx-ii-yyyy-cc-f--oooooooo--gggggggggggggggggggg-zzz-mm-ddd--ssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssss


    2442    2442  0 +  0000136E  B9 00000004                              mov     ecx,04h
    2443    2443  0 +  00001373  68 00000004:R                            push    offset FLAT:@3rgbForeground
    2444    2444  0 +  00001378  BA 0000000C:R                            mov     edx,offset FLAT:@CBE2
    2445    2445  0 +  0000137D  83 EC 0C                                 sub     esp,0ch
    2446    2446  0 +  00001380  B8 00000790:R                            mov     eax,offset FLAT:@CBE61
    2447    2447  0 +  00001385  E8 00000000:E                            call    ProfileWrite
    2448    2448  0 +  0000138A  83 C4 10                                 add     esp,010h
    2449    2449  0 +
    2450    2450  0 +                                             ; 1438              WinInvalidateRect(hwnd, NULL, FALSE);
    2451    2451  0 +  0000138D  6A 00                                    push    0h
    2452    2452  0 +  0000138F  6A 00                                    push    0h
    2453    2453  0 +  00001391  FF 75 [08]                               push    dword ptr [ebp+08h];    hwnd
    2454    2454  0 +  00001394  E8 00000000:E                            call    WinInvalidateRect
    2455    2455  0 +  00001399  83 C4 0C                                 add     esp,0ch
    2456    2456  0 +
    2457    2457  0 +                                             ; 1439          }
    2458    2458  0 +  0000139C                                   @BLBL122:
    2459    2459  0 +
    2460    2460  0 +                                             ; 1440          break;
    2461    2461  0 +  0000139C  E9 0000152A:R                            jmp     @BLBL147
    2462    2462  0 +  000013A1                                   @BLBL188:
    2463    2463  0 +
    2464    2464  0 +                                             ; 1443          cb = WinQueryPresParam(hwnd, PP_BACKGROUNDCOLOR, 0, NULL,
    2465    2465  0 +  000013A1  6A 01                                    push    01h
    2466    2466  0 +  000013A3  68 00000000:R                            push    offset FLAT:@2rgbBackground
    2467    2467  0 +  000013A8  6A 04                                    push    04h
    2468    2468  0 +  000013AA  6A 00                                    push    0h
    2469    2469  0 +  000013AC  6A 00                                    push    0h
    2470    2470  0 +  000013AE  6A 03                                    push    03h
    2471    2471  0 +  000013B0  FF 75 [08]                               push    dword ptr [ebp+08h];    hwnd
    2472    2472  0 +  000013B3  E8 00000000:E                            call    WinQueryPresParam
    2473    2473  0 +  000013B8  83 C4 1C                                 add     esp,01ch
    2474    2474  0 +
    2475    2475  0 +                                             ; 1446          if( cb == 0 )
    2476    2476  0 +  000013BB  85 C0                                    test    eax,eax
    2477    2477  0 +  000013BD  0F 85 000013F1:R                         jne     @BLBL123
    2478    2478  0 +
    2479    2479  0 +                                             ; 1447              Verbose(1, "DrvSetup",
    2480    2480  0 +  000013C3  8B 5D [E0]                               mov     ebx,[ebp-020h]; work
    2481    2481  0 +  000013C6  FF 73 [04]                               push    dword ptr [ebx+04h]
    2482    2482  0 +  000013C9  E8 00000000:E                            call    WinGetLastError
    2483    2483  0 +  000013CE  83 C4 04                                 add     esp,04h
    2484    2484  0 +  000013D1  B9 00000840:R                            mov     ecx,offset FLAT:@CBE71
    2485    2485  0 +  000013D6  50                                       push    eax
    2486    2486  0 +  000013D7  BA 00000018:R                            mov     edx,offset FLAT:@CBE3
    2487    2487  0 +  000013DC  83 EC 0C                                 sub     esp,0ch
    2488    2488  0 +  000013DF  B8 00000001                              mov     eax,01h
    2489    2489  0 +  000013E4  E8 00000000:E                            call    Verbose
    2490    2490  0 +  000013E9  83 C4 10                                 add     esp,010h
    2491    2491  0 +
    2492    2492  0 +                                             ; 1449                      WinGetLastError(work->hab));
    2493    2493  0 +  000013EC  EB 51 90 90 90                           jmp     @BLBL124
    2494    2494  0 +  000013F1                                   @BLBL123:
    2495    2495  0 +


    File: drvsetup.asm  Pass: 2   ALP: Assembly Language Processor  Ver 4.00.004   Page:   53
    drvsetup.cpp

    xxxx-ii-yyyy-cc-f--oooooooo--gggggggggggggggggggg-zzz-mm-ddd--ssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssss


    2496    2496  0 +                                             ; 1452              Verbose(2, "DrvSetup", "Set background colour to %#x",
    2497    2497  0 +  000013F1  FF 35 [00000000]:R                       push    dword ptr  @2rgbBackground
    2498    2498  0 +  000013F7  B9 0000088C:R                            mov     ecx,offset FLAT:@CBE73
    2499    2499  0 +  000013FC  83 EC 0C                                 sub     esp,0ch
    2500    2500  0 +  000013FF  BA 00000018:R                            mov     edx,offset FLAT:@CBE3
    2501    2501  0 +  00001404  B8 00000002                              mov     eax,02h
    2502    2502  0 +  00001409  E8 00000000:E                            call    Verbose
    2503    2503  0 +  0000140E  83 C4 10                                 add     esp,010h
    2504    2504  0 +
    2505    2505  0 +                                             ; 1454              ProfileWrite(WC_DRVSETUP, "Background",
    2506    2506  0 +  00001411  B9 00000004                              mov     ecx,04h
    2507    2507  0 +  00001416  68 00000000:R                            push    offset FLAT:@2rgbBackground
    2508    2508  0 +  0000141B  BA 00000000:R                            mov     edx,offset FLAT:@CBE1
    2509    2509  0 +  00001420  83 EC 0C                                 sub     esp,0ch
    2510    2510  0 +  00001423  B8 00000790:R                            mov     eax,offset FLAT:@CBE61
    2511    2511  0 +  00001428  E8 00000000:E                            call    ProfileWrite
    2512    2512  0 +  0000142D  83 C4 10                                 add     esp,010h
    2513    2513  0 +
    2514    2514  0 +                                             ; 1456              WinInvalidateRect(hwnd, NULL, FALSE);
    2515    2515  0 +  00001430  6A 00                                    push    0h
    2516    2516  0 +  00001432  6A 00                                    push    0h
    2517    2517  0 +  00001434  FF 75 [08]                               push    dword ptr [ebp+08h];    hwnd
    2518    2518  0 +  00001437  E8 00000000:E                            call    WinInvalidateRect
    2519    2519  0 +  0000143C  83 C4 0C                                 add     esp,0ch
    2520    2520  0 +
    2521    2521  0 +                                             ; 1457          }
    2522    2522  0 +  0000143F                                   @BLBL124:
    2523    2523  0 +
    2524    2524  0 +                                             ; 1458          break;
    2525    2525  0 +  0000143F  E9 0000152A:R                            jmp     @BLBL147
    2526    2526  0 +  00001444                                   @BLBL189:
    2527    2527  0 +
    2528    2528  0 +                                             ; 1461          cb = WinQueryPresParam(hwnd, PP_FONTNAMESIZE, 0, NULL,
    2529    2529  0 +  00001444  6A 01                                    push    01h
    2530    2530  0 +  00001446  8D 9D [FFFFFD50]                         lea     ebx,[ebp-02b0h];        fontname
    2531    2531  0 +  0000144C  53                                       push    ebx
    2532    2532  0 +  0000144D  68 00000100                              push    0100h
    2533    2533  0 +  00001452  6A 00                                    push    0h
    2534    2534  0 +  00001454  6A 00                                    push    0h
    2535    2535  0 +  00001456  6A 0F                                    push    0fh
    2536    2536  0 +  00001458  FF 75 [08]                               push    dword ptr [ebp+08h];    hwnd
    2537    2537  0 +  0000145B  E8 00000000:E                            call    WinQueryPresParam
    2538    2538  0 +  00001460  83 C4 1C                                 add     esp,01ch
    2539    2539  0 +
    2540    2540  0 +                                             ; 1464          if( cb == 0 )
    2541    2541  0 +  00001463  85 C0                                    test    eax,eax
    2542    2542  0 +  00001465  0F 85 00001499:R                         jne     @BLBL125
    2543    2543  0 +
    2544    2544  0 +                                             ; 1465              Verbose(1, "DrvSetup",
    2545    2545  0 +  0000146B  8B 5D [E0]                               mov     ebx,[ebp-020h]; work
    2546    2546  0 +  0000146E  FF 73 [04]                               push    dword ptr [ebx+04h]
    2547    2547  0 +  00001471  E8 00000000:E                            call    WinGetLastError
    2548    2548  0 +  00001476  83 C4 04                                 add     esp,04h
    2549    2549  0 +  00001479  B9 00000840:R                            mov     ecx,offset FLAT:@CBE71


    File: drvsetup.asm  Pass: 2   ALP: Assembly Language Processor  Ver 4.00.004   Page:   54
    drvsetup.cpp

    xxxx-ii-yyyy-cc-f--oooooooo--gggggggggggggggggggg-zzz-mm-ddd--ssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssss


    2550    2550  0 +  0000147E  50                                       push    eax
    2551    2551  0 +  0000147F  BA 00000018:R                            mov     edx,offset FLAT:@CBE3
    2552    2552  0 +  00001484  83 EC 0C                                 sub     esp,0ch
    2553    2553  0 +  00001487  B8 00000001                              mov     eax,01h
    2554    2554  0 +  0000148C  E8 00000000:E                            call    Verbose
    2555    2555  0 +  00001491  83 C4 10                                 add     esp,010h
    2556    2556  0 +
    2557    2557  0 +                                             ; 1467                      WinGetLastError(work->hab));
    2558    2558  0 +  00001494  EB 55 90 90 90                           jmp     @BLBL126
    2559    2559  0 +  00001499                                   @BLBL125:
    2560    2560  0 +
    2561    2561  0 +                                             ; 1470              Verbose(2, "DrvSetup", "Set font to \"%s\"", fontname);
    2562    2562  0 +  00001499  8D 9D [FFFFFD50]                         lea     ebx,[ebp-02b0h];        fontname
    2563    2563  0 +  0000149F  53                                       push    ebx
    2564    2564  0 +  000014A0  B9 000008AC:R                            mov     ecx,offset FLAT:@CBE74
    2565    2565  0 +  000014A5  83 EC 0C                                 sub     esp,0ch
    2566    2566  0 +  000014A8  BA 00000018:R                            mov     edx,offset FLAT:@CBE3
    2567    2567  0 +  000014AD  B8 00000002                              mov     eax,02h
    2568    2568  0 +  000014B2  E8 00000000:E                            call    Verbose
    2569    2569  0 +  000014B7  83 C4 0C                                 add     esp,0ch
    2570    2570  0 +
    2571    2571  0 +                                             ; 1471              ProfileWrite(WC_DRVSETUP, "Font", strlen(fontname), &fontname);
    2572    2572  0 +  000014BA  8B C3                                    mov     eax,ebx
    2573    2573  0 +  000014BC  E8 00000000:E                            call    strlen
    2574    2574  0 +  000014C1  83 C4 04                                 add     esp,04h
    2575    2575  0 +  000014C4  8B C8                                    mov     ecx,eax
    2576    2576  0 +  000014C6  53                                       push    ebx
    2577    2577  0 +  000014C7  BA 000008C0:R                            mov     edx,offset FLAT:@CBE75
    2578    2578  0 +  000014CC  83 EC 0C                                 sub     esp,0ch
    2579    2579  0 +  000014CF  B8 00000790:R                            mov     eax,offset FLAT:@CBE61
    2580    2580  0 +  000014D4  E8 00000000:E                            call    ProfileWrite
    2581    2581  0 +  000014D9  83 C4 10                                 add     esp,010h
    2582    2582  0 +
    2583    2583  0 +                                             ; 1472              WinInvalidateRect(hwnd, NULL, FALSE);
    2584    2584  0 +  000014DC  6A 00                                    push    0h
    2585    2585  0 +  000014DE  6A 00                                    push    0h
    2586    2586  0 +  000014E0  FF 75 [08]                               push    dword ptr [ebp+08h];    hwnd
    2587    2587  0 +  000014E3  E8 00000000:E                            call    WinInvalidateRect
    2588    2588  0 +  000014E8  83 C4 0C                                 add     esp,0ch
    2589    2589  0 +
    2590    2590  0 +                                             ; 1473          }
    2591    2591  0 +  000014EB                                   @BLBL126:
    2592    2592  0 +
    2593    2593  0 +                                             ; 1474          break;
    2594    2594  0 +  000014EB  EB 3D 90 90 90                           jmp     @BLBL147
    2595    2595  0 +  000014F0                                   @BLBL190:
    2596    2596  0 +
    2597    2597  0 +                                             ; 1477          Verbose(1, "DrvSetup", "WM_PRESPARAMCHANGED(unsupported type %#x)",
    2598    2598  0 +  000014F0  8B 45 [10]                               mov     eax,[ebp+010h]; mp1
    2599    2599  0 +  000014F3  50                                       push    eax
    2600    2600  0 +  000014F4  B9 000008C8:R                            mov     ecx,offset FLAT:@CBE76
    2601    2601  0 +  000014F9  83 EC 0C                                 sub     esp,0ch
    2602    2602  0 +  000014FC  BA 00000018:R                            mov     edx,offset FLAT:@CBE3
    2603    2603  0 +  00001501  B8 00000001                              mov     eax,01h


    File: drvsetup.asm  Pass: 2   ALP: Assembly Language Processor  Ver 4.00.004   Page:   55
    drvsetup.cpp

    xxxx-ii-yyyy-cc-f--oooooooo--gggggggggggggggggggg-zzz-mm-ddd--ssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssss


    2604    2604  0 +  00001506  E8 00000000:E                            call    Verbose
    2605    2605  0 +  0000150B  83 C4 10                                 add     esp,010h
    2606    2606  0 +
    2607    2607  0 +                                             ; 1482       break;
    2608    2608  0 +  0000150E  EB 1A 90 90 90                           jmp     @BLBL147
    2609    2609  0 +  00001513                                   @BLBL161:
    2610    2610  0 +
    2611    2611  0 +                                             ; 1490  return (MRESULT)TRUE;
    2612    2612  0 +  00001513  5E                                       pop     esi
    2613    2613  0 +  00001514  B8 00000001                              mov     eax,01h
    2614    2614  0 +  00001519  5F                                       pop     edi
    2615    2615  0 +  0000151A  5B                                       pop     ebx
    2616    2616  0 +  0000151B  81 C4 00000460                           add     esp,0460h
    2617    2617  0 +  00001521  64:8F 05 [00000000]                      pop     fs:[0h]
    R:\Source\driver\raid\Setup\list\drvsetup.asm(2617:6): Warning ALP4511: Assuming segment width for operand size
    2618    2618  0 +  00001528  C9                                       leave
    2619    2619  0 +  00001529  C3                                       ret
    2620    2620  0 +
    2621    2621  0 +                                             ; 1494  break;
    2622    2622  0 +  0000152A                                   @BLBL147:
    2623    2623  0 +
    2624    2624  0 +                                             ; 1497     return WinDefWindowProc(hwnd, msg, mp1, mp2);
    2625    2625  0 +  0000152A  FF 75 [14]                               push    dword ptr [ebp+014h];   mp2
    2626    2626  0 +  0000152D  FF 75 [10]                               push    dword ptr [ebp+010h];   mp1
    2627    2627  0 +  00001530  FF 75 [0C]                               push    dword ptr [ebp+0ch];    msg
    2628    2628  0 +  00001533  FF 75 [08]                               push    dword ptr [ebp+08h];    hwnd
    2629    2629  0 +  00001536  E8 00000000:E                            call    WinDefWindowProc
    2630    2630  0 +  0000153B  83 C4 10                                 add     esp,010h
    2631    2631  0 +  0000153E  5E                                       pop     esi
    2632    2632  0 +  0000153F  5F                                       pop     edi
    2633    2633  0 +  00001540  5B                                       pop     ebx
    2634    2634  0 +  00001541  81 C4 00000460                           add     esp,0460h
    2635    2635  0 +  00001547  64:8F 05 [00000000]                      pop     fs:[0h]
    R:\Source\driver\raid\Setup\list\drvsetup.asm(2635:6): Warning ALP4511: Assuming segment width for operand size
    2636    2636  0 +  0000154E  C9                                       leave
    2637    2637  0 +  0000154F  C3                                       ret
    2638    2638  0 +  00001550                                   DrvsetupWindowProc      endp
    2639    2639  0 +
    2640    2640  0 +                                             ; 791 DragDrop(HWND hwndClient,PWORK const work,PCNRDRAGINFO drag)
    2641    2641  0 +
    2642    2642  0 +  00001550                                   DragDrop__FUlCP5_WORKP12_CNRDRAGINFO    proc
    2643    2643  0 +  00001550  55                                       push    ebp
    2644    2644  0 +  00001551  8B EC                                    mov     ebp,esp
    2645    2645  0 +  00001553  53                                       push    ebx
    2646    2646  0 +  00001554  8B D9                                    mov     ebx,ecx
    2647    2647  0 +  00001556  57                                       push    edi
    2648    2648  0 +  00001557  89 5D [10]                               mov     [ebp+010h],ebx; drag
    2649    2649  0 +  0000155A  56                                       push    esi
    2650    2650  0 +  0000155B  8B F0                                    mov     esi,eax
    2651    2651  0 +  0000155D  81 EC 000000EC                           sub     esp,0ech
    2652    2652  0 +  00001563  89 55 [0C]                               mov     [ebp+0ch],edx;  work
    2653    2653  0 +  00001566  89 75 [08]                               mov     [ebp+08h],esi;  hwndClient
    2654    2654  0 +
    2655    2655  0 +                                             ; 793     VRDev * const dest = ((PMYRECORD)drag->pRecord)->dsk;


    File: drvsetup.asm  Pass: 2   ALP: Assembly Language Processor  Ver 4.00.004   Page:   56
    drvsetup.cpp

    xxxx-ii-yyyy-cc-f--oooooooo--gggggggggggggggggggg-zzz-mm-ddd--ssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssss


    2656    2656  0 +  00001569  8B 43 [04]                               mov     eax,[ebx+04h]
    2657    2657  0 +
    2658    2658  0 +                                             ; 798     Verbose(2, "DrvSetup", "DragDrop, record %#x", drag->pRecord);
    2659    2659  0 +  0000156C  50                                       push    eax
    2660    2660  0 +
    2661    2661  0 +                                             ; 793     VRDev * const dest = ((PMYRECORD)drag->pRecord)->dsk;
    2662    2662  0 +  0000156D  8B 40 [1C]                               mov     eax,[eax+01ch]
    2663    2663  0 +
    2664    2664  0 +                                             ; 798     Verbose(2, "DrvSetup", "DragDrop, record %#x", drag->pRecord);
    2665    2665  0 +  00001570  83 EC 0C                                 sub     esp,0ch
    2666    2666  0 +
    2667    2667  0 +                                             ; 793     VRDev * const dest = ((PMYRECORD)drag->pRecord)->dsk;
    2668    2668  0 +  00001573  89 45 [E4]                               mov     [ebp-01ch],eax; dest
    2669    2669  0 +
    2670    2670  0 +                                             ; 798     Verbose(2, "DrvSetup", "DragDrop, record %#x", drag->pRecord);
    2671    2671  0 +  00001576  BF 00000018:R                            mov     edi,offset FLAT:@CBE3
    2672    2672  0 +  0000157B  B9 000002C4:R                            mov     ecx,offset FLAT:@CBE26
    2673    2673  0 +  00001580  8B D7                                    mov     edx,edi
    2674    2674  0 +  00001582  B8 00000002                              mov     eax,02h
    2675    2675  0 +  00001587  E8 00000000:E                            call    Verbose
    2676    2676  0 +  0000158C  8B CB                                    mov     ecx,ebx
    2677    2677  0 +  0000158E  8B C6                                    mov     eax,esi
    2678    2678  0 +
    2679    2679  0 +                                             ; 800     if( drag->pDragInfo->hwndSource = hwndClient )
    2680    2680  0 +  00001590  8B 09                                    mov     ecx,[ecx]
    2681    2681  0 +
    2682    2682  0 +                                             ; 798     Verbose(2, "DrvSetup", "DragDrop, record %#x", drag->pRecord);
    2683    2683  0 +  00001592  83 C4 10                                 add     esp,010h
    2684    2684  0 +
    2685    2685  0 +                                             ; 800     if( drag->pDragInfo->hwndSource = hwndClient )
    2686    2686  0 +  00001595  39 41 [08]                               cmp     [ecx+08h],eax
    2687    2687  0 +
    2688    2688  0 +                                             ; 798     Verbose(2, "DrvSetup", "DragDrop, record %#x", drag->pRecord);
    2689    2689  0 +  00001598  8B D7                                    mov     edx,edi
    2690    2690  0 +
    2691    2691  0 +                                             ; 800     if( drag->pDragInfo->hwndSource = hwndClient )
    2692    2692  0 +  0000159A  0F 84 000015BC:R                         je      @BLBL66
    2693    2693  0 +
    2694    2694  0 +                                             ; 802   Verbose(2, "DrvSetup", "DragDrop, can't use external data");
    2695    2695  0 +  000015A0  B9 000002DC:R                            mov     ecx,offset FLAT:@CBE27
    2696    2696  0 +  000015A5  B8 00000002                              mov     eax,02h
    2697    2697  0 +  000015AA  E8 00000000:E                            call    Verbose
    2698    2698  0 +
    2699    2699  0 +                                             ; 803   return 0;
    2700    2700  0 +  000015AF  81 C4 000000EC                           add     esp,0ech
    2701    2701  0 +  000015B5  33 C0                                    xor     eax,eax
    2702    2702  0 +  000015B7  5E                                       pop     esi
    2703    2703  0 +  000015B8  5F                                       pop     edi
    2704    2704  0 +  000015B9  5B                                       pop     ebx
    2705    2705  0 +  000015BA  5D                                       pop     ebp
    2706    2706  0 +  000015BB  C3                                       ret
    2707    2707  0 +  000015BC                                   @BLBL66:
    2708    2708  0 +
    2709    2709  0 +                                             ; 806     id = work->pmrDragSource->dsk->queryID();


    File: drvsetup.asm  Pass: 2   ALP: Assembly Language Processor  Ver 4.00.004   Page:   57
    drvsetup.cpp

    xxxx-ii-yyyy-cc-f--oooooooo--gggggggggggggggggggg-zzz-mm-ddd--ssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssss


    2710    2710  0 +  000015BC  8B 5D [0C]                               mov     ebx,[ebp+0ch];  work
    2711    2711  0 +
    2712    2712  0 +                                             ; 812     switch( dest->isArray() )
    2713    2713  0 +  000015BF  8B 45 [E4]                               mov     eax,[ebp-01ch]; dest
    2714    2714  0 +
    2715    2715  0 +                                             ; 806     id = work->pmrDragSource->dsk->queryID();
    2716    2716  0 +  000015C2  8B 5B [20]                               mov     ebx,[ebx+020h]
    2717    2717  0 +  000015C5  8B 5B [1C]                               mov     ebx,[ebx+01ch]
    2718    2718  0 +  000015C8  83 C3 08                                 add     ebx,08h
    2719    2719  0 +  000015CB  89 5D [DC]                               mov     [ebp-024h],ebx; id
    2720    2720  0 +
    2721    2721  0 +                                             ; 812     switch( dest->isArray() )
    2722    2722  0 +  000015CE  8B 18                                    mov     ebx,[eax]
    2723    2723  0 +  000015D0  8B 4B [64]                               mov     ecx,[ebx+064h]
    2724    2724  0 +  000015D3  03 C1                                    add     eax,ecx
    2725    2725  0 +  000015D5  FF 53 [60]                               call    dword ptr [ebx+060h]
    2726    2726  0 +  000015D8  0F B6 C0                                 movzx   eax,al
    2727    2727  0 +  000015DB  83 F8 02                                 cmp     eax,02h
    2728    2728  0 +  000015DE  0F 84 000015ED:R                         je      @BLBL192
    2729    2729  0 +  000015E4  83 F8 04                                 cmp     eax,04h
    2730    2730  0 +  000015E7  0F 85 000016FA:R                         jne     @BLBL191
    2731    2731  0 +  000015ED                                   @BLBL192:
    2732    2732  0 +
    2733    2733  0 +                                             ; 816   sprintf(str, "This will destroy all data on the"
    2734    2734  0 +  000015ED  8B 4D [DC]                               mov     ecx,[ebp-024h]; id
    2735    2735  0 +  000015F0  8D 9D [FFFFFF14]                         lea     ebx,[ebp-0ech]; str
    2736    2736  0 +  000015F6  0F B6 51 [05]                            movzx   edx,byte ptr [ecx+05h]
    2737    2737  0 +  000015FA  52                                       push    edx
    2738    2738  0 +  000015FB  0F B6 51 [04]                            movzx   edx,byte ptr [ecx+04h]
    2739    2739  0 +  000015FF  52                                       push    edx
    2740    2740  0 +  00001600  0F B6 51 [03]                            movzx   edx,byte ptr [ecx+03h]
    2741    2741  0 +  00001604  52                                       push    edx
    2742    2742  0 +  00001605  0F B6 51 [02]                            movzx   edx,byte ptr [ecx+02h]
    2743    2743  0 +  00001609  52                                       push    edx
    2744    2744  0 +  0000160A  0F B6 51 [01]                            movzx   edx,byte ptr [ecx+01h]
    2745    2745  0 +  0000160E  52                                       push    edx
    2746    2746  0 +  0000160F  0F B6 09                                 movzx   ecx,byte ptr [ecx]
    2747    2747  0 +  00001612  51                                       push    ecx
    2748    2748  0 +  00001613  BA 00000300:R                            mov     edx,offset FLAT:@CBE28
    2749    2749  0 +  00001618  83 EC 08                                 sub     esp,08h
    2750    2750  0 +  0000161B  8B C3                                    mov     eax,ebx
    2751    2751  0 +  0000161D  E8 00000000:E                            call    _sprintfieee
    2752    2752  0 +
    2753    2753  0 +                                             ; 820   response = WinMessageBox(HWND_DESKTOP, hwndClient,
    2754    2754  0 +  00001622  68 00004014                              push    04014h
    2755    2755  0 +  00001627  6A FF                                    push    0ffffffffh
    2756    2756  0 +  00001629  68 00000374:R                            push    offset FLAT:@CBE29
    2757    2757  0 +  0000162E  53                                       push    ebx
    2758    2758  0 +  0000162F  FF 75 [08]                               push    dword ptr [ebp+08h];    hwndClient
    2759    2759  0 +  00001632  6A 01                                    push    01h
    2760    2760  0 +  00001634  E8 00000000:E                            call    WinMessageBox
    2761    2761  0 +  00001639  83 C4 38                                 add     esp,038h
    2762    2762  0 +
    2763    2763  0 +                                             ; 823   if( response == MBID_YES )


    File: drvsetup.asm  Pass: 2   ALP: Assembly Language Processor  Ver 4.00.004   Page:   58
    drvsetup.cpp

    xxxx-ii-yyyy-cc-f--oooooooo--gggggggggggggggggggg-zzz-mm-ddd--ssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssss


    2764    2764  0 +  0000163C  83 F8 06                                 cmp     eax,06h
    2765    2765  0 +  0000163F  0F 85 000016FA:R                         jne     @BLBL67
    2766    2766  0 +
    2767    2767  0 +                                             ; 828       ((VRDrive *)dest)->addChild(work->pmrDragSource->dsk, False, False);
    2768    2768  0 +  00001645  6A 00                                    push    0h
    2769    2769  0 +
    2770    2770  0 +                                             ; 826       PMYRECORD           myrcd = (PMYRECORD)drag->pRecord;
    2771    2771  0 +  00001647  8B 5D [10]                               mov     ebx,[ebp+010h]; drag
    2772    2772  0 +
    2773    2773  0 +                                             ; 828       ((VRDrive *)dest)->addChild(work->pmrDragSource->dsk, False, False);
    2774    2774  0 +  0000164A  83 EC 0C                                 sub     esp,0ch
    2775    2775  0 +  0000164D  8B 7D [E4]                               mov     edi,[ebp-01ch]; dest
    2776    2776  0 +  00001650  8B 55 [0C]                               mov     edx,[ebp+0ch];  work
    2777    2777  0 +
    2778    2778  0 +                                             ; 826       PMYRECORD           myrcd = (PMYRECORD)drag->pRecord;
    2779    2779  0 +  00001653  8B 5B [04]                               mov     ebx,[ebx+04h]
    2780    2780  0 +  00001656  89 5D [F0]                               mov     [ebp-010h],ebx; myrcd
    2781    2781  0 +
    2782    2782  0 +                                             ; 828       ((VRDrive *)dest)->addChild(work->pmrDragSource->dsk, False, False);
    2783    2783  0 +  00001659  8B 1F                                    mov     ebx,[edi]
    2784    2784  0 +  0000165B  8B 52 [20]                               mov     edx,[edx+020h]
    2785    2785  0 +  0000165E  8B 83 [0000008C]                         mov     eax,[ebx+08ch]
    2786    2786  0 +  00001664  8B 52 [1C]                               mov     edx,[edx+01ch]
    2787    2787  0 +  00001667  33 C9                                    xor     ecx,ecx
    2788    2788  0 +  00001669  03 C7                                    add     eax,edi
    2789    2789  0 +  0000166B  FF 93 [00000088]                         call    dword ptr [ebx+088h]
    2790    2790  0 +  00001671  83 C4 10                                 add     esp,010h
    2791    2791  0 +
    2792    2792  0 +                                             ; 834       VRDev *     highest = dest;
    2793    2793  0 +  00001674  89 7D [E0]                               mov     [ebp-020h],edi; highest
    2794    2794  0 +
    2795    2795  0 +                                             ; 835       while( highest->getParent() = 0 )
    2796    2796  0 +  00001677  83 7F [04] 00                            cmp     dword ptr [edi+04h],0h
    2797    2797  0 +  0000167B  0F 84 0000168D:R                         je      @BLBL68
    2798    2798  0 +  00001681                                   @BLBL69:
    2799    2799  0 +
    2800    2800  0 +                                             ; 836           highest = highest->getParent();
    2801    2801  0 +  00001681  8B 7F [04]                               mov     edi,[edi+04h]
    2802    2802  0 +
    2803    2803  0 +                                             ; 835       while( highest->getParent() = 0 )
    2804    2804  0 +  00001684  83 7F [04] 00                            cmp     dword ptr [edi+04h],0h
    2805    2805  0 +  00001688  75 F7                                    jne     @BLBL69
    2806    2806  0 +  0000168A  89 7D [E0]                               mov     [ebp-020h],edi; highest
    2807    2807  0 +  0000168D                                   @BLBL68:
    2808    2808  0 +
    2809    2809  0 +                                             ; 837       SearchCnr(work->hwndCnr, (PFNSRCH)LookupDisk, highest,
    2810    2810  0 +                                             ; 837 &myrcd, NULL);
    2811    2811  0 +  0000168D  6A 00                                    push    0h
    2812    2812  0 +  0000168F  8D 4D [F0]                               lea     ecx,[ebp-010h]; myrcd
    2813    2813  0 +  00001692  51                                       push    ecx
    2814    2814  0 +  00001693  8B 7D [0C]                               mov     edi,[ebp+0ch];  work
    2815    2815  0 +  00001696  8B 5D [E0]                               mov     ebx,[ebp-020h]; highest
    2816    2816  0 +  00001699  83 EC 0C                                 sub     esp,0ch
    2817    2817  0 +  0000169C  8B 47 [08]                               mov     eax,[edi+08h]


    File: drvsetup.asm  Pass: 2   ALP: Assembly Language Processor  Ver 4.00.004   Page:   59
    drvsetup.cpp

    xxxx-ii-yyyy-cc-f--oooooooo--gggggggggggggggggggg-zzz-mm-ddd--ssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssss


    2818    2818  0 +  0000169F  8B CB                                    mov     ecx,ebx
    2819    2819  0 +  000016A1  BA 00000000:E                            mov     edx,offset FLAT: LookupDisk__FUlP9_MYRECORDP5VRDevPP9_MYRECORD
    2820    2820  0 +  000016A6  E8 00000000:E                            call    SearchCnr__FUlPFUlPvT2PUl_UlPvN23
    2821    2821  0 +
    2822    2822  0 +                                             ; 838       Verbose(2, "DrvSetup", "DragDrop: found as record %lu", myrcd);
    2823    2823  0 +  000016AB  FF 75 [F0]                               push    dword ptr [ebp-010h];   myrcd
    2824    2824  0 +  000016AE  B9 00000384:R                            mov     ecx,offset FLAT:@CBE30
    2825    2825  0 +  000016B3  83 EC 0C                                 sub     esp,0ch
    2826    2826  0 +  000016B6  BA 00000018:R                            mov     edx,offset FLAT:@CBE3
    2827    2827  0 +  000016BB  B8 00000002                              mov     eax,02h
    2828    2828  0 +  000016C0  E8 00000000:E                            call    Verbose
    2829    2829  0 +
    2830    2830  0 +                                             ; 842       WinSendMsg(work->hwndCnr, CM_REMOVERECORD,
    2831    2831  0 +  000016C5  68 00030002                              push    030002h
    2832    2832  0 +
    2833    2833  0 +                                             ; 840       ap[0] = (PMINIRECORDCORE)work->pmrDragSource;
    2834    2834  0 +  000016CA  8B 47 [20]                               mov     eax,[edi+020h]
    2835    2835  0 +  000016CD  89 45 [E8]                               mov     [ebp-018h],eax; ap
    2836    2836  0 +
    2837    2837  0 +                                             ; 841       ap[1] = (PMINIRECORDCORE)myrcd;
    2838    2838  0 +  000016D0  8B 45 [F0]                               mov     eax,[ebp-010h]; myrcd
    2839    2839  0 +  000016D3  89 45 [EC]                               mov     [ebp-014h],eax; ap
    2840    2840  0 +
    2841    2841  0 +                                             ; 842       WinSendMsg(work->hwndCnr, CM_REMOVERECORD,
    2842    2842  0 +  000016D6  8D 45 [E8]                               lea     eax,[ebp-018h]; ap
    2843    2843  0 +  000016D9  50                                       push    eax
    2844    2844  0 +  000016DA  68 00000346                              push    0346h
    2845    2845  0 +  000016DF  FF 77 [08]                               push    dword ptr [edi+08h]
    2846    2846  0 +  000016E2  E8 00000000:E                            call    WinSendMsg
    2847    2847  0 +
    2848    2848  0 +                                             ; 850       WinPostMsg(work->hwndScanner, WUM_DEVTREE, highest, NULL);
    2849    2849  0 +  000016E7  6A 00                                    push    0h
    2850    2850  0 +  000016E9  53                                       push    ebx
    2851    2851  0 +  000016EA  68 0000100A                              push    0100ah
    2852    2852  0 +  000016EF  FF 77 [0C]                               push    dword ptr [edi+0ch]
    2853    2853  0 +  000016F2  E8 00000000:E                            call    WinPostMsg
    2854    2854  0 +  000016F7  83 C4 44                                 add     esp,044h
    2855    2855  0 +
    2856    2856  0 +                                             ; 851   }
    2857    2857  0 +  000016FA                                   @BLBL67:
    2858    2858  0 +
    2859    2859  0 +                                             ; 857   break;
    2860    2860  0 +  000016FA                                   @BLBL191:
    2861    2861  0 +
    2862    2862  0 +                                             ; 863     work->pmrDragSource = NULL;
    2863    2863  0 +  000016FA  8B 5D [0C]                               mov     ebx,[ebp+0ch];  work
    2864    2864  0 +
    2865    2865  0 +                                             ; 865     return 0;
    2866    2866  0 +  000016FD  33 C0                                    xor     eax,eax
    2867    2867  0 +
    2868    2868  0 +                                             ; 863     work->pmrDragSource = NULL;
    2869    2869  0 +  000016FF  C7 43 [20] 00000000                      mov     dword ptr [ebx+020h],0h
    2870    2870  0 +
    2871    2871  0 +                                             ; 864     work->pmrDragDestination = NULL;


    File: drvsetup.asm  Pass: 2   ALP: Assembly Language Processor  Ver 4.00.004   Page:   60
    drvsetup.cpp

    xxxx-ii-yyyy-cc-f--oooooooo--gggggggggggggggggggg-zzz-mm-ddd--ssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssss


    2872    2872  0 +  00001706  C7 43 [24] 00000000                      mov     dword ptr [ebx+024h],0h
    2873    2873  0 +
    2874    2874  0 +                                             ; 865     return 0;
    2875    2875  0 +  0000170D  81 C4 000000EC                           add     esp,0ech
    2876    2876  0 +  00001713  5E                                       pop     esi
    2877    2877  0 +  00001714  5F                                       pop     edi
    2878    2878  0 +  00001715  5B                                       pop     ebx
    2879    2879  0 +  00001716  5D                                       pop     ebp
    2880    2880  0 +  00001717  C3                                       ret
    2881    2881  0 +  00001718                                   DragDrop__FUlCP5_WORKP12_CNRDRAGINFO    endp
    2882    2882  0 +
    2883    2883  0 +                                             ; 659 DragOver(HWND hwndClient,PWORK const work,PCNRDRAGINFO drag)
    2884    2884  0 +
    2885    2885  0 +  00001718                                   DragOver__FUlCP5_WORKP12_CNRDRAGINFO    proc
    2886    2886  0 +  00001718  55                                       push    ebp
    2887    2887  0 +  00001719  8B EC                                    mov     ebp,esp
    2888    2888  0 +  0000171B  53                                       push    ebx
    2889    2889  0 +  0000171C  8B D9                                    mov     ebx,ecx
    2890    2890  0 +  0000171E  57                                       push    edi
    2891    2891  0 +  0000171F  89 45 [08]                               mov     [ebp+08h],eax;  hwndClient
    2892    2892  0 +  00001722  56                                       push    esi
    2893    2893  0 +  00001723  89 5D [10]                               mov     [ebp+010h],ebx; drag
    2894    2894  0 +  00001726  83 EC 34                                 sub     esp,034h
    2895    2895  0 +  00001729  89 55 [0C]                               mov     [ebp+0ch],edx;  work
    2896    2896  0 +
    2897    2897  0 +                                             ; 661     Verbose(2, "DrvSetup", "DragOver, record %#x", drag->pRecord);
    2898    2898  0 +  0000172C  FF 73 [04]                               push    dword ptr [ebx+04h]
    2899    2899  0 +  0000172F  BF 00000018:R                            mov     edi,offset FLAT:@CBE3
    2900    2900  0 +  00001734  83 EC 0C                                 sub     esp,0ch
    2901    2901  0 +  00001737  B9 00000194:R                            mov     ecx,offset FLAT:@CBE16
    2902    2902  0 +  0000173C  8B D7                                    mov     edx,edi
    2903    2903  0 +  0000173E  B8 00000002                              mov     eax,02h
    2904    2904  0 +  00001743  E8 00000000:E                            call    Verbose
    2905    2905  0 +  00001748  8B CB                                    mov     ecx,ebx
    2906    2906  0 +  0000174A  83 C4 10                                 add     esp,010h
    2907    2907  0 +
    2908    2908  0 +                                             ; 668     if( drag->pRecord == NULL )
    2909    2909  0 +  0000174D  83 79 [04] 00                            cmp     dword ptr [ecx+04h],0h
    2910    2910  0 +
    2911    2911  0 +                                             ; 661     Verbose(2, "DrvSetup", "DragOver, record %#x", drag->pRecord);
    2912    2912  0 +  00001751  8B D7                                    mov     edx,edi
    2913    2913  0 +
    2914    2914  0 +                                             ; 668     if( drag->pRecord == NULL )
    2915    2915  0 +  00001753  0F 85 00001775:R                         jne     @BLBL58
    2916    2916  0 +
    2917    2917  0 +                                             ; 670   Verbose(2, "DrvSetup", "DragOver, no target");
    2918    2918  0 +  00001759  B9 000001AC:R                            mov     ecx,offset FLAT:@CBE17
    2919    2919  0 +  0000175E  B8 00000002                              mov     eax,02h
    2920    2920  0 +  00001763  E8 00000000:E                            call    Verbose
    2921    2921  0 +
    2922    2922  0 +                                             ; 671   return MRFROM2SHORT(DOR_NODROP,DO_DEFAULT);
    2923    2923  0 +  00001768  83 C4 34                                 add     esp,034h
    2924    2924  0 +  0000176B  B8 BFFE0000                              mov     eax,0bffe0000h
    2925    2925  0 +  00001770  5E                                       pop     esi


    File: drvsetup.asm  Pass: 2   ALP: Assembly Language Processor  Ver 4.00.004   Page:   61
    drvsetup.cpp

    xxxx-ii-yyyy-cc-f--oooooooo--gggggggggggggggggggg-zzz-mm-ddd--ssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssss


    2926    2926  0 +  00001771  5F                                       pop     edi
    2927    2927  0 +  00001772  5B                                       pop     ebx
    2928    2928  0 +  00001773  5D                                       pop     ebp
    2929    2929  0 +  00001774  C3                                       ret
    2930    2930  0 +  00001775                                   @BLBL58:
    2931    2931  0 +
    2932    2932  0 +                                             ; 678     WinQueryPointerPos(HWND_DESKTOP, &ptlMouse);
    2933    2933  0 +  00001775  8D 5D [EC]                               lea     ebx,[ebp-014h]; ptlMouse
    2934    2934  0 +  00001778  53                                       push    ebx
    2935    2935  0 +  00001779  6A 01                                    push    01h
    2936    2936  0 +  0000177B  E8 00000000:E                            call    WinQueryPointerPos
    2937    2937  0 +
    2938    2938  0 +                                             ; 686     WinMapWindowPoints(HWND_DESKTOP, hwndClient, (PPOINTL)&qrfrQuery.rect, 2);
    2939    2939  0 +  00001780  6A 02                                    push    02h
    2940    2940  0 +
    2941    2941  0 +                                             ; 682     qrfrQuery.rect.xLeft = ptlMouse.x;
    2942    2942  0 +  00001782  8B 5D [EC]                               mov     ebx,[ebp-014h]; ptlMouse
    2943    2943  0 +  00001785  89 5D [D0]                               mov     [ebp-030h],ebx; qrfrQuery
    2944    2944  0 +
    2945    2945  0 +                                             ; 683     qrfrQuery.rect.xRight = ptlMouse.x+1;
    2946    2946  0 +  00001788  43                                       inc     ebx
    2947    2947  0 +  00001789  89 5D [D8]                               mov     [ebp-028h],ebx; qrfrQuery
    2948    2948  0 +
    2949    2949  0 +                                             ; 684     qrfrQuery.rect.yBottom = ptlMouse.y;
    2950    2950  0 +  0000178C  8B 5D [F0]                               mov     ebx,[ebp-010h]; ptlMouse
    2951    2951  0 +  0000178F  89 5D [D4]                               mov     [ebp-02ch],ebx; qrfrQuery
    2952    2952  0 +
    2953    2953  0 +                                             ; 685     qrfrQuery.rect.yTop = ptlMouse.y+1;
    2954    2954  0 +  00001792  43                                       inc     ebx
    2955    2955  0 +  00001793  89 5D [DC]                               mov     [ebp-024h],ebx; qrfrQuery
    2956    2956  0 +
    2957    2957  0 +                                             ; 686     WinMapWindowPoints(HWND_DESKTOP, hwndClient, (PPOINTL)&qrfrQuery.rect, 2);
    2958    2958  0 +  00001796  8D 5D [D0]                               lea     ebx,[ebp-030h]; qrfrQuery
    2959    2959  0 +  00001799  53                                       push    ebx
    2960    2960  0 +
    2961    2961  0 +                                             ; 681     qrfrQuery.cb = sizeof(QUERYRECFROMRECT);
    2962    2962  0 +  0000179A  C7 45 [CC] 00000018                      mov     dword ptr [ebp-034h],018h;      qrfrQuery
    2963    2963  0 +
    2964    2964  0 +                                             ; 686     WinMapWindowPoints(HWND_DESKTOP, hwndClient, (PPOINTL)&qrfrQuery.rect, 2);
    2965    2965  0 +  000017A1  FF 75 [08]                               push    dword ptr [ebp+08h];    hwndClient
    2966    2966  0 +
    2967    2967  0 +                                             ; 693     work->pmrDragDestination
    2968    2968  0 +  000017A4  8D 5D [CC]                               lea     ebx,[ebp-034h]; qrfrQuery
    2969    2969  0 +
    2970    2970  0 +                                             ; 686     WinMapWindowPoints(HWND_DESKTOP, hwndClient, (PPOINTL)&qrfrQuery.rect, 2);
    2971    2971  0 +  000017A7  6A 01                                    push    01h
    2972    2972  0 +  000017A9  E8 00000000:E                            call    WinMapWindowPoints
    2973    2973  0 +
    2974    2974  0 +                                             ; 693     work->pmrDragDestination
    2975    2975  0 +  000017AE  53                                       push    ebx
    2976    2976  0 +  000017AF  8B 5D [0C]                               mov     ebx,[ebp+0ch];  work
    2977    2977  0 +  000017B2  6A 10                                    push    010h
    2978    2978  0 +
    2979    2979  0 +                                             ; 688     qrfrQuery.fsSearch = CMA_PARTIAL|CMA_ITEMORDER;


    File: drvsetup.asm  Pass: 2   ALP: Assembly Language Processor  Ver 4.00.004   Page:   62
    drvsetup.cpp

    xxxx-ii-yyyy-cc-f--oooooooo--gggggggggggggggggggg-zzz-mm-ddd--ssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssss


    2980    2980  0 +  000017B4  C7 45 [E0] 00002001                      mov     dword ptr [ebp-020h],02001h;    qrfrQuery
    2981    2981  0 +
    2982    2982  0 +                                             ; 693     work->pmrDragDestination
    2983    2983  0 +  000017BB  68 00000342                              push    0342h
    2984    2984  0 +  000017C0  FF 73 [08]                               push    dword ptr [ebx+08h]
    2985    2985  0 +  000017C3  E8 00000000:E                            call    WinSendMsg
    2986    2986  0 +  000017C8  83 C4 28                                 add     esp,028h
    2987    2987  0 +  000017CB  89 43 [24]                               mov     [ebx+024h],eax
    2988    2988  0 +
    2989    2989  0 +                                             ; 696     if( work->pmrDragDestination == NULL )
    2990    2990  0 +  000017CE  85 C0                                    test    eax,eax
    2991    2991  0 +  000017D0  0F 85 000017F7:R                         jne     @BLBL59
    2992    2992  0 +
    2993    2993  0 +                                             ; 698   Verbose(2, "DrvSetup", "DragOver, no destination");
    2994    2994  0 +  000017D6  B9 000001C0:R                            mov     ecx,offset FLAT:@CBE18
    2995    2995  0 +  000017DB  BA 00000018:R                            mov     edx,offset FLAT:@CBE3
    2996    2996  0 +  000017E0  B8 00000002                              mov     eax,02h
    2997    2997  0 +  000017E5  E8 00000000:E                            call    Verbose
    2998    2998  0 +
    2999    2999  0 +                                             ; 699   return MRFROM2SHORT(DOR_NODROP,DO_DEFAULT);
    3000    3000  0 +  000017EA  83 C4 34                                 add     esp,034h
    3001    3001  0 +  000017ED  B8 BFFE0000                              mov     eax,0bffe0000h
    3002    3002  0 +  000017F2  5E                                       pop     esi
    3003    3003  0 +  000017F3  5F                                       pop     edi
    3004    3004  0 +  000017F4  5B                                       pop     ebx
    3005    3005  0 +  000017F5  5D                                       pop     ebp
    3006    3006  0 +  000017F6  C3                                       ret
    3007    3007  0 +  000017F7                                   @BLBL59:
    3008    3008  0 +
    3009    3009  0 +                                             ; 702     if( work->pmrDragDestination = (PMYRECORD)drag->pRecord )
    3010    3010  0 +  000017F7  8B 4D [10]                               mov     ecx,[ebp+010h]; drag
    3011    3011  0 +  000017FA  8B 5D [0C]                               mov     ebx,[ebp+0ch];  work
    3012    3012  0 +  000017FD  8B 49 [04]                               mov     ecx,[ecx+04h]
    3013    3013  0 +  00001800  39 4B [24]                               cmp     [ebx+024h],ecx
    3014    3014  0 +  00001803  0F 84 0000182A:R                         je      @BLBL60
    3015    3015  0 +
    3016    3016  0 +                                             ; 704   Verbose(1, "DrvSetup", "DragOver, pRecord = pmrDragDestination");
    3017    3017  0 +  00001809  B9 000001DC:R                            mov     ecx,offset FLAT:@CBE19
    3018    3018  0 +  0000180E  BA 00000018:R                            mov     edx,offset FLAT:@CBE3
    3019    3019  0 +  00001813  B8 00000001                              mov     eax,01h
    3020    3020  0 +  00001818  E8 00000000:E                            call    Verbose
    3021    3021  0 +
    3022    3022  0 +                                             ; 705   return MRFROM2SHORT(DOR_NODROP,DO_DEFAULT);
    3023    3023  0 +  0000181D  83 C4 34                                 add     esp,034h
    3024    3024  0 +  00001820  B8 BFFE0000                              mov     eax,0bffe0000h
    3025    3025  0 +  00001825  5E                                       pop     esi
    3026    3026  0 +  00001826  5F                                       pop     edi
    3027    3027  0 +  00001827  5B                                       pop     ebx
    3028    3028  0 +  00001828  5D                                       pop     ebp
    3029    3029  0 +  00001829  C3                                       ret
    3030    3030  0 +  0000182A                                   @BLBL60:
    3031    3031  0 +
    3032    3032  0 +                                             ; 712     VRDev * const rdev = work->pmrDragDestination->dsk;
    3033    3033  0 +  0000182A  8B 5D [0C]                               mov     ebx,[ebp+0ch];  work


    File: drvsetup.asm  Pass: 2   ALP: Assembly Language Processor  Ver 4.00.004   Page:   63
    drvsetup.cpp

    xxxx-ii-yyyy-cc-f--oooooooo--gggggggggggggggggggg-zzz-mm-ddd--ssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssss


    3034    3034  0 +
    3035    3035  0 +                                             ; 715     Verbose(2, "DrvSetup", "DragOver, destination %#x", rdev);
    3036    3036  0 +  0000182D  BE 00000018:R                            mov     esi,offset FLAT:@CBE3
    3037    3037  0 +
    3038    3038  0 +                                             ; 712     VRDev * const rdev = work->pmrDragDestination->dsk;
    3039    3039  0 +  00001832  8B 7B [24]                               mov     edi,[ebx+024h]
    3040    3040  0 +  00001835  8B 7F [1C]                               mov     edi,[edi+01ch]
    3041    3041  0 +  00001838  89 7D [E8]                               mov     [ebp-018h],edi; rdev
    3042    3042  0 +
    3043    3043  0 +                                             ; 713     UCHAR const   rdtype = rdev->isArray();
    3044    3044  0 +  0000183B  8B 0F                                    mov     ecx,[edi]
    3045    3045  0 +  0000183D  8B 41 [64]                               mov     eax,[ecx+064h]
    3046    3046  0 +  00001840  03 C7                                    add     eax,edi
    3047    3047  0 +  00001842  FF 51 [60]                               call    dword ptr [ecx+060h]
    3048    3048  0 +
    3049    3049  0 +                                             ; 715     Verbose(2, "DrvSetup", "DragOver, destination %#x", rdev);
    3050    3050  0 +  00001845  57                                       push    edi
    3051    3051  0 +  00001846  B9 00000208:R                            mov     ecx,offset FLAT:@CBE20
    3052    3052  0 +  0000184B  83 EC 0C                                 sub     esp,0ch
    3053    3053  0 +
    3054    3054  0 +                                             ; 713     UCHAR const   rdtype = rdev->isArray();
    3055    3055  0 +  0000184E  88 45 [E7]                               mov     [ebp-019h],al;  rdtype
    3056    3056  0 +
    3057    3057  0 +                                             ; 715     Verbose(2, "DrvSetup", "DragOver, destination %#x", rdev);
    3058    3058  0 +  00001851  8B D6                                    mov     edx,esi
    3059    3059  0 +  00001853  B8 00000002                              mov     eax,02h
    3060    3060  0 +  00001858  E8 00000000:E                            call    Verbose
    3061    3061  0 +
    3062    3062  0 +                                             ; 716     if( work->pmrDragSource->dsk == rdev )
    3063    3063  0 +  0000185D  8B 43 [20]                               mov     eax,[ebx+020h]
    3064    3064  0 +
    3065    3065  0 +                                             ; 715     Verbose(2, "DrvSetup", "DragOver, destination %#x", rdev);
    3066    3066  0 +  00001860  83 C4 10                                 add     esp,010h
    3067    3067  0 +
    3068    3068  0 +                                             ; 716     if( work->pmrDragSource->dsk == rdev )
    3069    3069  0 +  00001863  39 78 [1C]                               cmp     [eax+01ch],edi
    3070    3070  0 +
    3071    3071  0 +                                             ; 715     Verbose(2, "DrvSetup", "DragOver, destination %#x", rdev);
    3072    3072  0 +  00001866  8B D6                                    mov     edx,esi
    3073    3073  0 +
    3074    3074  0 +                                             ; 716     if( work->pmrDragSource->dsk == rdev )
    3075    3075  0 +  00001868  0F 85 0000188A:R                         jne     @BLBL61
    3076    3076  0 +
    3077    3077  0 +                                             ; 718   Verbose(2, "DrvSetup", "DragOver, source == destination");
    3078    3078  0 +  0000186E  B9 00000224:R                            mov     ecx,offset FLAT:@CBE21
    3079    3079  0 +  00001873  B8 00000002                              mov     eax,02h
    3080    3080  0 +  00001878  E8 00000000:E                            call    Verbose
    3081    3081  0 +
    3082    3082  0 +                                             ; 719   return MRFROM2SHORT(DOR_NODROP,DO_DEFAULT);
    3083    3083  0 +  0000187D  83 C4 34                                 add     esp,034h
    3084    3084  0 +  00001880  B8 BFFE0000                              mov     eax,0bffe0000h
    3085    3085  0 +  00001885  5E                                       pop     esi
    3086    3086  0 +  00001886  5F                                       pop     edi
    3087    3087  0 +  00001887  5B                                       pop     ebx


    File: drvsetup.asm  Pass: 2   ALP: Assembly Language Processor  Ver 4.00.004   Page:   64
    drvsetup.cpp

    xxxx-ii-yyyy-cc-f--oooooooo--gggggggggggggggggggg-zzz-mm-ddd--ssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssss


    3088    3088  0 +  00001888  5D                                       pop     ebp
    3089    3089  0 +  00001889  C3                                       ret
    3090    3090  0 +  0000188A                                   @BLBL61:
    3091    3091  0 +
    3092    3092  0 +                                             ; 723     switch( rdtype )
    3093    3093  0 +  0000188A  0F B6 45 [E7]                            movzx   eax,byte ptr [ebp-019h];        rdtype
    3094    3094  0 +  0000188E  83 F8 02                                 cmp     eax,02h
    3095    3095  0 +  00001891  0F 84 000018F7:R                         je      @BLBL195
    3096    3096  0 +  00001897  83 F8 04                                 cmp     eax,04h
    3097    3097  0 +  0000189A  0F 85 00001934:R                         jne     @BLBL196
    3098    3098  0 +  000018A0                                   @BLBL194:
    3099    3099  0 +
    3100    3100  0 +                                             ; 729   if( work->pmrDragSource->dsk->querySize() < rdev->querySize() )
    3101    3101  0 +  000018A0  8B 5D [0C]                               mov     ebx,[ebp+0ch];  work
    3102    3102  0 +  000018A3  8B 43 [20]                               mov     eax,[ebx+020h]
    3103    3103  0 +  000018A6  8B 40 [1C]                               mov     eax,[eax+01ch]
    3104    3104  0 +  000018A9  8B 08                                    mov     ecx,[eax]
    3105    3105  0 +  000018AB  8B 51 [14]                               mov     edx,[ecx+014h]
    3106    3106  0 +  000018AE  03 C2                                    add     eax,edx
    3107    3107  0 +  000018B0  FF 51 [10]                               call    dword ptr [ecx+010h]
    3108    3108  0 +  000018B3  8B F8                                    mov     edi,eax
    3109    3109  0 +  000018B5  8B 45 [E8]                               mov     eax,[ebp-018h]; rdev
    3110    3110  0 +  000018B8  8B 08                                    mov     ecx,[eax]
    3111    3111  0 +  000018BA  8B 51 [14]                               mov     edx,[ecx+014h]
    3112    3112  0 +  000018BD  03 C2                                    add     eax,edx
    3113    3113  0 +  000018BF  FF 51 [10]                               call    dword ptr [ecx+010h]
    3114    3114  0 +  000018C2  3B F8                                    cmp     edi,eax
    3115    3115  0 +  000018C4  0F 83 000018F2:R                         jae     @BLBL62
    3116    3116  0 +
    3117    3117  0 +                                             ; 731       Verbose(2, "DrvSetup", "DragOver, source too small");
    3118    3118  0 +  000018CA  B9 00000248:R                            mov     ecx,offset FLAT:@CBE22
    3119    3119  0 +  000018CF  BA 00000018:R                            mov     edx,offset FLAT:@CBE3
    3120    3120  0 +  000018D4  B8 00000002                              mov     eax,02h
    3121    3121  0 +  000018D9  E8 00000000:E                            call    Verbose
    3122    3122  0 +
    3123    3123  0 +                                             ; 732       work->pmrDragDestination = NULL;
    3124    3124  0 +  000018DE  C7 43 [24] 00000000                      mov     dword ptr [ebx+024h],0h
    3125    3125  0 +
    3126    3126  0 +                                             ; 733       return MRFROM2SHORT(DOR_NODROP,DO_DEFAULT);
    3127    3127  0 +  000018E5  83 C4 34                                 add     esp,034h
    3128    3128  0 +  000018E8  B8 BFFE0000                              mov     eax,0bffe0000h
    3129    3129  0 +  000018ED  5E                                       pop     esi
    3130    3130  0 +  000018EE  5F                                       pop     edi
    3131    3131  0 +  000018EF  5B                                       pop     ebx
    3132    3132  0 +  000018F0  5D                                       pop     ebp
    3133    3133  0 +  000018F1  C3                                       ret
    3134    3134  0 +  000018F2                                   @BLBL62:
    3135    3135  0 +
    3136    3136  0 +                                             ; 735   break;
    3137    3137  0 +  000018F2  EB 6B 90 90 90                           jmp     @BLBL193
    3138    3138  0 +  000018F7                                   @BLBL195:
    3139    3139  0 +
    3140    3140  0 +                                             ; 741   if( rdev->getParent() = NULL )
    3141    3141  0 +  000018F7  8B 5D [E8]                               mov     ebx,[ebp-018h]; rdev


    File: drvsetup.asm  Pass: 2   ALP: Assembly Language Processor  Ver 4.00.004   Page:   65
    drvsetup.cpp

    xxxx-ii-yyyy-cc-f--oooooooo--gggggggggggggggggggg-zzz-mm-ddd--ssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssss


    3142    3142  0 +  000018FA  83 7B [04] 00                            cmp     dword ptr [ebx+04h],0h
    3143    3143  0 +  000018FE  0F 84 0000192F:R                         je      @BLBL63
    3144    3144  0 +
    3145    3145  0 +                                             ; 747       work->pmrDragDestination = NULL;
    3146    3146  0 +  00001904  8B 5D [0C]                               mov     ebx,[ebp+0ch];  work
    3147    3147  0 +
    3148    3148  0 +                                             ; 746       Verbose(2, "DrvSetup", "DragOver, bad destination");
    3149    3149  0 +  00001907  B9 00000264:R                            mov     ecx,offset FLAT:@CBE23
    3150    3150  0 +  0000190C  BA 00000018:R                            mov     edx,offset FLAT:@CBE3
    3151    3151  0 +  00001911  B8 00000002                              mov     eax,02h
    3152    3152  0 +  00001916  E8 00000000:E                            call    Verbose
    3153    3153  0 +
    3154    3154  0 +                                             ; 747       work->pmrDragDestination = NULL;
    3155    3155  0 +  0000191B  C7 43 [24] 00000000                      mov     dword ptr [ebx+024h],0h
    3156    3156  0 +
    3157    3157  0 +                                             ; 748       return MRFROM2SHORT(DOR_NODROP,DO_DEFAULT);
    3158    3158  0 +  00001922  83 C4 34                                 add     esp,034h
    3159    3159  0 +  00001925  B8 BFFE0000                              mov     eax,0bffe0000h
    3160    3160  0 +  0000192A  5E                                       pop     esi
    3161    3161  0 +  0000192B  5F                                       pop     edi
    3162    3162  0 +  0000192C  5B                                       pop     ebx
    3163    3163  0 +  0000192D  5D                                       pop     ebp
    3164    3164  0 +  0000192E  C3                                       ret
    3165    3165  0 +  0000192F                                   @BLBL63:
    3166    3166  0 +
    3167    3167  0 +                                             ; 750   break;
    3168    3168  0 +  0000192F  EB 2E 90 90 90                           jmp     @BLBL193
    3169    3169  0 +  00001934                                   @BLBL196:
    3170    3170  0 +
    3171    3171  0 +                                             ; 757   work->pmrDragDestination = NULL;
    3172    3172  0 +  00001934  8B 5D [0C]                               mov     ebx,[ebp+0ch];  work
    3173    3173  0 +
    3174    3174  0 +                                             ; 756   Verbose(2, "DrvSetup", "DragOver, bad destination type");
    3175    3175  0 +  00001937  B9 00000280:R                            mov     ecx,offset FLAT:@CBE24
    3176    3176  0 +  0000193C  BA 00000018:R                            mov     edx,offset FLAT:@CBE3
    3177    3177  0 +  00001941  B8 00000002                              mov     eax,02h
    3178    3178  0 +  00001946  E8 00000000:E                            call    Verbose
    3179    3179  0 +
    3180    3180  0 +                                             ; 757   work->pmrDragDestination = NULL;
    3181    3181  0 +  0000194B  C7 43 [24] 00000000                      mov     dword ptr [ebx+024h],0h
    3182    3182  0 +
    3183    3183  0 +                                             ; 758   return MRFROM2SHORT(DOR_NODROP,DO_DEFAULT);
    3184    3184  0 +  00001952  83 C4 34                                 add     esp,034h
    3185    3185  0 +  00001955  B8 BFFE0000                              mov     eax,0bffe0000h
    3186    3186  0 +  0000195A  5E                                       pop     esi
    3187    3187  0 +  0000195B  5F                                       pop     edi
    3188    3188  0 +  0000195C  5B                                       pop     ebx
    3189    3189  0 +  0000195D  5D                                       pop     ebp
    3190    3190  0 +  0000195E  C3                                       ret
    3191    3191  0 +  0000195F                                   @BLBL193:
    3192    3192  0 +
    3193    3193  0 +                                             ; 761     Verbose(3, "DrvSetup", "DragOver, destination is acceptable");
    3194    3194  0 +  0000195F  B9 000002A0:R                            mov     ecx,offset FLAT:@CBE25
    3195    3195  0 +  00001964  BA 00000018:R                            mov     edx,offset FLAT:@CBE3


    File: drvsetup.asm  Pass: 2   ALP: Assembly Language Processor  Ver 4.00.004   Page:   66
    drvsetup.cpp

    xxxx-ii-yyyy-cc-f--oooooooo--gggggggggggggggggggg-zzz-mm-ddd--ssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssss


    3196    3196  0 +  00001969  B8 00000003                              mov     eax,03h
    3197    3197  0 +  0000196E  E8 00000000:E                            call    Verbose
    3198    3198  0 +
    3199    3199  0 +                                             ; 762     return MRFROM2SHORT(DOR_DROP,DO_MOVE);
    3200    3200  0 +  00001973  83 C4 34                                 add     esp,034h
    3201    3201  0 +  00001976  B8 00200001                              mov     eax,0200001h
    3202    3202  0 +  0000197B  5E                                       pop     esi
    3203    3203  0 +  0000197C  5F                                       pop     edi
    3204    3204  0 +  0000197D  5B                                       pop     ebx
    3205    3205  0 +  0000197E  5D                                       pop     ebp
    3206    3206  0 +  0000197F  C3                                       ret
    3207    3207  0 +  00001980                                   DragOver__FUlCP5_WORKP12_CNRDRAGINFO    endp
    3208    3208  0 +
    3209    3209  0 +                                             ; 623 DragLeave(HWND hwndClient,PWORK const work,PCNRDRAGINFO drag)
    3210    3210  0 +
    3211    3211  0 +  00001980                                   DragLeave__FUlCP5_WORKP12_CNRDRAGINFO   proc
    3212    3212  0 +  00001980  53                                       push    ebx
    3213    3213  0 +  00001981  8B DA                                    mov     ebx,edx
    3214    3214  0 +
    3215    3215  0 +                                             ; 625     Verbose(2, "DrvSetup", "DragLeave, record %#x", drag->pRecord);
    3216    3216  0 +  00001983  FF 71 [04]                               push    dword ptr [ecx+04h]
    3217    3217  0 +  00001986  B9 0000017C:R                            mov     ecx,offset FLAT:@CBE15
    3218    3218  0 +  0000198B  83 EC 0C                                 sub     esp,0ch
    3219    3219  0 +  0000198E  BA 00000018:R                            mov     edx,offset FLAT:@CBE3
    3220    3220  0 +  00001993  B8 00000002                              mov     eax,02h
    3221    3221  0 +  00001998  E8 00000000:E                            call    Verbose
    3222    3222  0 +  0000199D  83 C4 10                                 add     esp,010h
    3223    3223  0 +  000019A0  8B D3                                    mov     edx,ebx
    3224    3224  0 +
    3225    3225  0 +                                             ; 629     return 0;
    3226    3226  0 +  000019A2  5B                                       pop     ebx
    3227    3227  0 +
    3228    3228  0 +                                             ; 627     work->pmrDragSource = NULL;                   /* reflect in work area */
    3229    3229  0 +  000019A3  C7 42 [20] 00000000                      mov     dword ptr [edx+020h],0h
    3230    3230  0 +
    3231    3231  0 +                                             ; 628     work->pmrDragDestination = NULL;
    3232    3232  0 +  000019AA  C7 42 [24] 00000000                      mov     dword ptr [edx+024h],0h
    3233    3233  0 +
    3234    3234  0 +                                             ; 629     return 0;
    3235    3235  0 +  000019B1  33 C0                                    xor     eax,eax
    3236    3236  0 +  000019B3  C3                                       ret
    3237    3237  0 +  000019B4                                   DragLeave__FUlCP5_WORKP12_CNRDRAGINFO   endp
    3238    3238  0 +
    3239    3239  0 +                                             ; 542 DragInit(HWND hwndClient,PWORK const work,PCNRDRAGINIT const drag)
    3240    3240  0 +
    3241    3241  0 +  000019B4                                   DragInit__FUlCP5_WORKCP12_CNRDRAGINIT   proc
    3242    3242  0 +  000019B4  55                                       push    ebp
    3243    3243  0 +  000019B5  8B EC                                    mov     ebp,esp
    3244    3244  0 +  000019B7  53                                       push    ebx
    3245    3245  0 +  000019B8  8B D9                                    mov     ebx,ecx
    3246    3246  0 +  000019BA  57                                       push    edi
    3247    3247  0 +  000019BB  89 55 [0C]                               mov     [ebp+0ch],edx;  work
    3248    3248  0 +  000019BE  56                                       push    esi
    3249    3249  0 +  000019BF  89 45 [08]                               mov     [ebp+08h],eax;  hwndClient


    File: drvsetup.asm  Pass: 2   ALP: Assembly Language Processor  Ver 4.00.004   Page:   67
    drvsetup.cpp

    xxxx-ii-yyyy-cc-f--oooooooo--gggggggggggggggggggg-zzz-mm-ddd--ssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssss


    3250    3250  0 +  000019C2  83 EC 4C                                 sub     esp,04ch
    3251    3251  0 +  000019C5  89 5D [10]                               mov     [ebp+010h],ebx; drag
    3252    3252  0 +
    3253    3253  0 +                                             ; 544     Verbose(2, "DrvSetup", "DragInit: record %#x",drag->pRecord);
    3254    3254  0 +  000019C8  FF 73 [04]                               push    dword ptr [ebx+04h]
    3255    3255  0 +  000019CB  B9 00000118:R                            mov     ecx,offset FLAT:@CBE11
    3256    3256  0 +  000019D0  83 EC 0C                                 sub     esp,0ch
    3257    3257  0 +  000019D3  BA 00000018:R                            mov     edx,offset FLAT:@CBE3
    3258    3258  0 +  000019D8  B8 00000002                              mov     eax,02h
    3259    3259  0 +  000019DD  E8 00000000:E                            call    Verbose
    3260    3260  0 +  000019E2  8B CB                                    mov     ecx,ebx
    3261    3261  0 +  000019E4  83 C4 10                                 add     esp,010h
    3262    3262  0 +
    3263    3263  0 +                                             ; 546     if( drag->pRecord == NULL )
    3264    3264  0 +  000019E7  83 79 [04] 00                            cmp     dword ptr [ecx+04h],0h
    3265    3265  0 +  000019EB  0F 85 000019FB:R                         jne     @BLBL49
    3266    3266  0 +
    3267    3267  0 +                                             ; 547   return 0;                               /* no record selected */
    3268    3268  0 +  000019F1  33 C0                                    xor     eax,eax
    3269    3269  0 +  000019F3  83 C4 4C                                 add     esp,04ch
    3270    3270  0 +  000019F6  5E                                       pop     esi
    3271    3271  0 +  000019F7  5F                                       pop     edi
    3272    3272  0 +  000019F8  5B                                       pop     ebx
    3273    3273  0 +  000019F9  5D                                       pop     ebp
    3274    3274  0 +  000019FA  C3                                       ret
    3275    3275  0 +  000019FB                                   @BLBL49:
    3276    3276  0 +
    3277    3277  0 +                                             ; 548     if( work->pmrDragSource = NULL )
    3278    3278  0 +  000019FB  8B 4D [0C]                               mov     ecx,[ebp+0ch];  work
    3279    3279  0 +  000019FE  83 79 [20] 00                            cmp     dword ptr [ecx+020h],0h
    3280    3280  0 +  00001A02  0F 84 00001A12:R                         je      @BLBL50
    3281    3281  0 +
    3282    3282  0 +                                             ; 549   return 0;                               /* already active drag */
    3283    3283  0 +  00001A08  33 C0                                    xor     eax,eax
    3284    3284  0 +  00001A0A  83 C4 4C                                 add     esp,04ch
    3285    3285  0 +  00001A0D  5E                                       pop     esi
    3286    3286  0 +  00001A0E  5F                                       pop     edi
    3287    3287  0 +  00001A0F  5B                                       pop     ebx
    3288    3288  0 +  00001A10  5D                                       pop     ebp
    3289    3289  0 +  00001A11  C3                                       ret
    3290    3290  0 +  00001A12                                   @BLBL50:
    3291    3291  0 +
    3292    3292  0 +                                             ; 555     VRDev * const rdev = ((PMYRECORD)drag->pRecord)->dsk;
    3293    3293  0 +  00001A12  8B 4D [10]                               mov     ecx,[ebp+010h]; drag
    3294    3294  0 +  00001A15  8B 49 [04]                               mov     ecx,[ecx+04h]
    3295    3295  0 +  00001A18  8B 49 [1C]                               mov     ecx,[ecx+01ch]
    3296    3296  0 +  00001A1B  89 4D [F0]                               mov     [ebp-010h],ecx; rdev
    3297    3297  0 +
    3298    3298  0 +                                             ; 556     if( rdev->getParent() = NULL )
    3299    3299  0 +  00001A1E  83 79 [04] 00                            cmp     dword ptr [ecx+04h],0h
    3300    3300  0 +  00001A22  0F 84 00001A32:R                         je      @BLBL51
    3301    3301  0 +
    3302    3302  0 +                                             ; 557   return 0;                               /* sorry, no dragging of children */
    3303    3303  0 +  00001A28  33 C0                                    xor     eax,eax


    File: drvsetup.asm  Pass: 2   ALP: Assembly Language Processor  Ver 4.00.004   Page:   68
    drvsetup.cpp

    xxxx-ii-yyyy-cc-f--oooooooo--gggggggggggggggggggg-zzz-mm-ddd--ssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssss


    3304    3304  0 +  00001A2A  83 C4 4C                                 add     esp,04ch
    3305    3305  0 +  00001A2D  5E                                       pop     esi
    3306    3306  0 +  00001A2E  5F                                       pop     edi
    3307    3307  0 +  00001A2F  5B                                       pop     ebx
    3308    3308  0 +  00001A30  5D                                       pop     ebp
    3309    3309  0 +  00001A31  C3                                       ret
    3310    3310  0 +  00001A32                                   @BLBL51:
    3311    3311  0 +
    3312    3312  0 +                                             ; 558     if( rdev->isWritable() == False )
    3313    3313  0 +  00001A32  8B 45 [F0]                               mov     eax,[ebp-010h]; rdev
    3314    3314  0 +  00001A35  8B 08                                    mov     ecx,[eax]
    3315    3315  0 +  00001A37  8B 51 [0C]                               mov     edx,[ecx+0ch]
    3316    3316  0 +  00001A3A  03 C2                                    add     eax,edx
    3317    3317  0 +  00001A3C  FF 51 [08]                               call    dword ptr [ecx+08h]
    3318    3318  0 +  00001A3F  84 C0                                    test    al,al
    3319    3319  0 +  00001A41  0F 85 00001A51:R                         jne     @BLBL52
    3320    3320  0 +
    3321    3321  0 +                                             ; 559   return 0;                               /* can't write = no drag */
    3322    3322  0 +  00001A47  33 C0                                    xor     eax,eax
    3323    3323  0 +  00001A49  83 C4 4C                                 add     esp,04ch
    3324    3324  0 +  00001A4C  5E                                       pop     esi
    3325    3325  0 +  00001A4D  5F                                       pop     edi
    3326    3326  0 +  00001A4E  5B                                       pop     ebx
    3327    3327  0 +  00001A4F  5D                                       pop     ebp
    3328    3328  0 +  00001A50  C3                                       ret
    3329    3329  0 +  00001A51                                   @BLBL52:
    3330    3330  0 +
    3331    3331  0 +                                             ; 560     if( rdev->isHostdrive() == True  &&  rdev->isArray() == 0 )
    3332    3332  0 +  00001A51  8B 5D [F0]                               mov     ebx,[ebp-010h]; rdev
    3333    3333  0 +  00001A54  8B 0B                                    mov     ecx,[ebx]
    3334    3334  0 +  00001A56  8B 41 [6C]                               mov     eax,[ecx+06ch]
    3335    3335  0 +  00001A59  03 C3                                    add     eax,ebx
    3336    3336  0 +  00001A5B  FF 51 [68]                               call    dword ptr [ecx+068h]
    3337    3337  0 +  00001A5E  3C 01                                    cmp     al,01h
    3338    3338  0 +  00001A60  8B C3                                    mov     eax,ebx
    3339    3339  0 +  00001A62  0F 85 00001A84:R                         jne     @BLBL53
    3340    3340  0 +  00001A68  8B 08                                    mov     ecx,[eax]
    3341    3341  0 +  00001A6A  8B 51 [64]                               mov     edx,[ecx+064h]
    3342    3342  0 +  00001A6D  03 C2                                    add     eax,edx
    3343    3343  0 +  00001A6F  FF 51 [60]                               call    dword ptr [ecx+060h]
    3344    3344  0 +  00001A72  84 C0                                    test    al,al
    3345    3345  0 +  00001A74  0F 85 00001A84:R                         jne     @BLBL53
    3346    3346  0 +
    3347    3347  0 +                                             ; 561   return 0;                               /* not even PHYSDEVICE */
    3348    3348  0 +  00001A7A  33 C0                                    xor     eax,eax
    3349    3349  0 +  00001A7C  83 C4 4C                                 add     esp,04ch
    3350    3350  0 +  00001A7F  5E                                       pop     esi
    3351    3351  0 +  00001A80  5F                                       pop     edi
    3352    3352  0 +  00001A81  5B                                       pop     ebx
    3353    3353  0 +  00001A82  5D                                       pop     ebp
    3354    3354  0 +  00001A83  C3                                       ret
    3355    3355  0 +  00001A84                                   @BLBL53:
    3356    3356  0 +
    3357    3357  0 +                                             ; 568     work->pmrDragSource


    File: drvsetup.asm  Pass: 2   ALP: Assembly Language Processor  Ver 4.00.004   Page:   69
    drvsetup.cpp

    xxxx-ii-yyyy-cc-f--oooooooo--gggggggggggggggggggg-zzz-mm-ddd--ssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssss


    3358    3358  0 +                                             ; 568 = (PMYRECORD)drag->pRecord;
    3359    3359  0 +  00001A84  8B 5D [10]                               mov     ebx,[ebp+010h]; drag
    3360    3360  0 +
    3361    3361  0 +                                             ; 567     Verbose(2, "DrvSetup", "DragInit: record passed checks");
    3362    3362  0 +  00001A87  B9 00000130:R                            mov     ecx,offset FLAT:@CBE12
    3363    3363  0 +  00001A8C  BA 00000018:R                            mov     edx,offset FLAT:@CBE3
    3364    3364  0 +  00001A91  B8 00000002                              mov     eax,02h
    3365    3365  0 +  00001A96  E8 00000000:E                            call    Verbose
    3366    3366  0 +
    3367    3367  0 +                                             ; 568     work->pmrDragSource
    3368    3368  0 +                                             ; 568 = (PMYRECORD)drag->pRecord;
    3369    3369  0 +  00001A9B  8B 7D [0C]                               mov     edi,[ebp+0ch];  work
    3370    3370  0 +
    3371    3371  0 +                                             ; 570     PDRAGINFO     dinfo = DrgAllocDraginfo(1);
    3372    3372  0 +  00001A9E  6A 01                                    push    01h
    3373    3373  0 +
    3374    3374  0 +                                             ; 568     work->pmrDragSource
    3375    3375  0 +                                             ; 568 = (PMYRECORD)drag->pRecord;
    3376    3376  0 +  00001AA0  8B 4B [04]                               mov     ecx,[ebx+04h]
    3377    3377  0 +  00001AA3  89 4F [20]                               mov     [edi+020h],ecx
    3378    3378  0 +
    3379    3379  0 +                                             ; 570     PDRAGINFO     dinfo = DrgAllocDraginfo(1);
    3380    3380  0 +  00001AA6  E8 00000000:E                            call    DrgAllocDraginfo
    3381    3381  0 +
    3382    3382  0 +                                             ; 574     ditem.hstrType = DrgAddStrHandle("DRT_CUSTOMER");
    3383    3383  0 +  00001AAB  68 00000150:R                            push    offset FLAT:@CBE13
    3384    3384  0 +
    3385    3385  0 +                                             ; 572     ditem.hwndItem = hwndClient;
    3386    3386  0 +  00001AB0  8B 75 [08]                               mov     esi,[ebp+08h];  hwndClient
    3387    3387  0 +  00001AB3  89 75 [CC]                               mov     [ebp-034h],esi; ditem
    3388    3388  0 +
    3389    3389  0 +                                             ; 573     ditem.ulItemID = (ULONG)drag->pRecord;
    3390    3390  0 +  00001AB6  8B 4B [04]                               mov     ecx,[ebx+04h]
    3391    3391  0 +  00001AB9  8B D8                                    mov     ebx,eax
    3392    3392  0 +  00001ABB  89 4D [D0]                               mov     [ebp-030h],ecx; ditem
    3393    3393  0 +
    3394    3394  0 +                                             ; 574     ditem.hstrType = DrgAddStrHandle("DRT_CUSTOMER");
    3395    3395  0 +  00001ABE  E8 00000000:E                            call    DrgAddStrHandle
    3396    3396  0 +
    3397    3397  0 +                                             ; 575     ditem.hstrRMF = DrgAddStrHandle("DRM_SHAREMEM,DRM_UNKNOWN");
    3398    3398  0 +  00001AC3  68 00000160:R                            push    offset FLAT:@CBE14
    3399    3399  0 +
    3400    3400  0 +                                             ; 574     ditem.hstrType = DrgAddStrHandle("DRT_CUSTOMER");
    3401    3401  0 +  00001AC8  89 45 [D4]                               mov     [ebp-02ch],eax; ditem
    3402    3402  0 +
    3403    3403  0 +                                             ; 575     ditem.hstrRMF = DrgAddStrHandle("DRM_SHAREMEM,DRM_UNKNOWN");
    3404    3404  0 +  00001ACB  E8 00000000:E                            call    DrgAddStrHandle
    3405    3405  0 +
    3406    3406  0 +                                             ; 579     DrgSetDragitem(dinfo,                 /* Set item in DRAGINFO */
    3407    3407  0 +  00001AD0  6A 00                                    push    0h
    3408    3408  0 +  00001AD2  8D 4D [CC]                               lea     ecx,[ebp-034h]; ditem
    3409    3409  0 +  00001AD5  6A 24                                    push    024h
    3410    3410  0 +
    3411    3411  0 +                                             ; 575     ditem.hstrRMF = DrgAddStrHandle("DRM_SHAREMEM,DRM_UNKNOWN");


    File: drvsetup.asm  Pass: 2   ALP: Assembly Language Processor  Ver 4.00.004   Page:   70
    drvsetup.cpp

    xxxx-ii-yyyy-cc-f--oooooooo--gggggggggggggggggggg-zzz-mm-ddd--ssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssss


    3412    3412  0 +  00001AD7  89 45 [D8]                               mov     [ebp-028h],eax; ditem
    3413    3413  0 +
    3414    3414  0 +                                             ; 579     DrgSetDragitem(dinfo,                 /* Set item in DRAGINFO */
    3415    3415  0 +  00001ADA  51                                       push    ecx
    3416    3416  0 +
    3417    3417  0 +                                             ; 576     ditem.fsControl = DC_REMOVEABLEMEDIA; /* can't be recovered... */
    3418    3418  0 +  00001ADB  66:C7 45 [EC] 0020                       mov     word ptr [ebp-014h],020h;       ditem
    3419    3419  0 +
    3420    3420  0 +                                             ; 579     DrgSetDragitem(dinfo,                 /* Set item in DRAGINFO */
    3421    3421  0 +  00001AE1  53                                       push    ebx
    3422    3422  0 +
    3423    3423  0 +                                             ; 577     ditem.fsSupportedOps = DO_MOVEABLE;
    3424    3424  0 +  00001AE2  66:C7 45 [EE] 0002                       mov     word ptr [ebp-012h],02h;        ditem
    3425    3425  0 +
    3426    3426  0 +                                             ; 579     DrgSetDragitem(dinfo,                 /* Set item in DRAGINFO */
    3427    3427  0 +  00001AE8  E8 00000000:E                            call    DrgSetDragitem
    3428    3428  0 +
    3429    3429  0 +                                             ; 585     dimage.cb = sizeof(DRAGIMAGE);                /* Initialize DRAGIMAGE */
    3430    3430  0 +  00001AED  66:C7 45 [B4] 0018                       mov     word ptr [ebp-04ch],018h;       dimage
    3431    3431  0 +
    3432    3432  0 +                                             ; 586     dimage.cptl = 0;                              /* Not a polygon */
    3433    3433  0 +  00001AF3  66:C7 45 [B6] 0000                       mov     word ptr [ebp-04ah],0h; dimage
    3434    3434  0 +
    3435    3435  0 +                                             ; 587     dimage.hImage = work->pmrDragSource->dsk->queryIcon();
    3436    3436  0 +  00001AF9  8B 47 [20]                               mov     eax,[edi+020h]
    3437    3437  0 +  00001AFC  8B 40 [1C]                               mov     eax,[eax+01ch]
    3438    3438  0 +  00001AFF  8B 08                                    mov     ecx,[eax]
    3439    3439  0 +  00001B01  8B 51 [7C]                               mov     edx,[ecx+07ch]
    3440    3440  0 +  00001B04  03 C2                                    add     eax,edx
    3441    3441  0 +  00001B06  FF 51 [78]                               call    dword ptr [ecx+078h]
    3442    3442  0 +
    3443    3443  0 +                                             ; 592     /*hDrop =*/ DrgDrag(hwndClient,               /* initiate drag */
    3444    3444  0 +  00001B09  6A 00                                    push    0h
    3445    3445  0 +  00001B0B  8D 4D [B4]                               lea     ecx,[ebp-04ch]; dimage
    3446    3446  0 +  00001B0E  6A 38                                    push    038h
    3447    3447  0 +
    3448    3448  0 +                                             ; 587     dimage.hImage = work->pmrDragSource->dsk->queryIcon();
    3449    3449  0 +  00001B10  89 45 [B8]                               mov     [ebp-048h],eax; dimage
    3450    3450  0 +
    3451    3451  0 +                                             ; 592     /*hDrop =*/ DrgDrag(hwndClient,               /* initiate drag */
    3452    3452  0 +  00001B13  6A 01                                    push    01h
    3453    3453  0 +
    3454    3454  0 +                                             ; 588     dimage.fl = DRG_ICON;                 /* Dragging an icon */
    3455    3455  0 +  00001B15  C7 45 [C4] 00000001                      mov     dword ptr [ebp-03ch],01h;       dimage
    3456    3456  0 +
    3457    3457  0 +                                             ; 592     /*hDrop =*/ DrgDrag(hwndClient,               /* initiate drag */
    3458    3458  0 +  00001B1C  51                                       push    ecx
    3459    3459  0 +
    3460    3460  0 +                                             ; 589     dimage.cxOffset = 0;                  /* No hotspot */
    3461    3461  0 +  00001B1D  66:C7 45 [C8] 0000                       mov     word ptr [ebp-038h],0h; dimage
    3462    3462  0 +
    3463    3463  0 +                                             ; 592     /*hDrop =*/ DrgDrag(hwndClient,               /* initiate drag */
    3464    3464  0 +  00001B23  53                                       push    ebx
    3465    3465  0 +


    File: drvsetup.asm  Pass: 2   ALP: Assembly Language Processor  Ver 4.00.004   Page:   71
    drvsetup.cpp

    xxxx-ii-yyyy-cc-f--oooooooo--gggggggggggggggggggg-zzz-mm-ddd--ssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssss


    3466    3466  0 +                                             ; 590     dimage.cyOffset = 0;
    3467    3467  0 +  00001B24  66:C7 45 [CA] 0000                       mov     word ptr [ebp-036h],0h; dimage
    3468    3468  0 +
    3469    3469  0 +                                             ; 592     /*hDrop =*/ DrgDrag(hwndClient,               /* initiate drag */
    3470    3470  0 +  00001B2A  56                                       push    esi
    3471    3471  0 +  00001B2B  E8 00000000:E                            call    DrgDrag
    3472    3472  0 +
    3473    3473  0 +                                             ; 599     DrgFreeDraginfo(dinfo);                       /* Free DRAGINFO struct */
    3474    3474  0 +  00001B30  53                                       push    ebx
    3475    3475  0 +  00001B31  E8 00000000:E                            call    DrgFreeDraginfo
    3476    3476  0 +  00001B36  83 C4 38                                 add     esp,038h
    3477    3477  0 +
    3478    3478  0 +                                             ; 601     return 0;
    3479    3479  0 +  00001B39  83 C4 4C                                 add     esp,04ch
    3480    3480  0 +  00001B3C  33 C0                                    xor     eax,eax
    3481    3481  0 +  00001B3E  5E                                       pop     esi
    3482    3482  0 +  00001B3F  5F                                       pop     edi
    3483    3483  0 +  00001B40  5B                                       pop     ebx
    3484    3484  0 +  00001B41  5D                                       pop     ebp
    3485    3485  0 +  00001B42  C3                                       ret
    3486    3486  0 +  00001B43                                   DragInit__FUlCP5_WORKCP12_CNRDRAGINIT   endp
    3487    3487  0 +
    3488    3488  0 +                                             ; 478 DisplayDisk(PWORK work,PMYRECORD parent,VRDev * dsk)
    3489    3489  0 +
    3490    3490  0 +  00001B43                                   DisplayDisk__FP5_WORKP9_MYRECORDP5VRDev proc
    3491    3491  0 +  00001B43  55                                       push    ebp
    3492    3492  0 +  00001B44  8B EC                                    mov     ebp,esp
    3493    3493  0 +  00001B46  53                                       push    ebx
    3494    3494  0 +  00001B47  8B D9                                    mov     ebx,ecx
    3495    3495  0 +  00001B49  57                                       push    edi
    3496    3496  0 +  00001B4A  8B F8                                    mov     edi,eax
    3497    3497  0 +  00001B4C  56                                       push    esi
    3498    3498  0 +  00001B4D  89 5D [10]                               mov     [ebp+010h],ebx; dsk
    3499    3499  0 +  00001B50  83 EC 30                                 sub     esp,030h
    3500    3500  0 +  00001B53  89 55 [D0]                               mov     [ebp-030h],edx; @CBE90
    3501    3501  0 +
    3502    3502  0 +                                             ; 486     address = (PMYRECORD)WinSendMsg(work->hwndCnr, CM_ALLOCRECORD,
    3503    3503  0 +  00001B56  6A 01                                    push    01h
    3504    3504  0 +
    3505    3505  0 +                                             ; 478 DisplayDisk(PWORK work,PMYRECORD parent,VRDev * dsk)
    3506    3506  0 +  00001B58  89 7D [08]                               mov     [ebp+08h],edi;  work
    3507    3507  0 +
    3508    3508  0 +                                             ; 486     address = (PMYRECORD)WinSendMsg(work->hwndCnr, CM_ALLOCRECORD,
    3509    3509  0 +  00001B5B  6A 04                                    push    04h
    3510    3510  0 +  00001B5D  68 00000331                              push    0331h
    3511    3511  0 +  00001B62  FF 77 [08]                               push    dword ptr [edi+08h]
    3512    3512  0 +  00001B65  E8 00000000:E                            call    WinSendMsg
    3513    3513  0 +  00001B6A  8B F0                                    mov     esi,eax
    3514    3514  0 +
    3515    3515  0 +                                             ; 488     Verbose(3, "DrvSetup", "CM_ALLOCRECORD: %#x",address);
    3516    3516  0 +  00001B6C  56                                       push    esi
    3517    3517  0 +
    3518    3518  0 +                                             ; 486     address = (PMYRECORD)WinSendMsg(work->hwndCnr, CM_ALLOCRECORD,
    3519    3519  0 +  00001B6D  89 75 [F0]                               mov     [ebp-010h],esi; address


    File: drvsetup.asm  Pass: 2   ALP: Assembly Language Processor  Ver 4.00.004   Page:   72
    drvsetup.cpp

    xxxx-ii-yyyy-cc-f--oooooooo--gggggggggggggggggggg-zzz-mm-ddd--ssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssss


    3520    3520  0 +
    3521    3521  0 +                                             ; 488     Verbose(3, "DrvSetup", "CM_ALLOCRECORD: %#x",address);
    3522    3522  0 +  00001B70  83 EC 0C                                 sub     esp,0ch
    3523    3523  0 +  00001B73  B8 00000018:R                            mov     eax,offset FLAT:@CBE3
    3524    3524  0 +  00001B78  8B D0                                    mov     edx,eax
    3525    3525  0 +  00001B7A  B9 000000D0:R                            mov     ecx,offset FLAT:@CBE9
    3526    3526  0 +  00001B7F  B8 00000003                              mov     eax,03h
    3527    3527  0 +  00001B84  E8 00000000:E                            call    Verbose
    3528    3528  0 +
    3529    3529  0 +                                             ; 490     address->dsk = dsk;
    3530    3530  0 +  00001B89  89 5E [1C]                               mov     [esi+01ch],ebx
    3531    3531  0 +
    3532    3532  0 +                                             ; 491     descr = dsk->allocateDescription();
    3533    3533  0 +  00001B8C  8B 0B                                    mov     ecx,[ebx]
    3534    3534  0 +  00001B8E  8B 41 [74]                               mov     eax,[ecx+074h]
    3535    3535  0 +  00001B91  03 C3                                    add     eax,ebx
    3536    3536  0 +  00001B93  FF 51 [70]                               call    dword ptr [ecx+070h]
    3537    3537  0 +  00001B96  8B D3                                    mov     edx,ebx
    3538    3538  0 +  00001B98  8B D8                                    mov     ebx,eax
    3539    3539  0 +
    3540    3540  0 +                                             ; 492     address->record.hptrIcon = dsk->queryIcon();
    3541    3541  0 +  00001B9A  8B 0A                                    mov     ecx,[edx]
    3542    3542  0 +  00001B9C  8B 41 [7C]                               mov     eax,[ecx+07ch]
    3543    3543  0 +  00001B9F  03 D0                                    add     edx,eax
    3544    3544  0 +  00001BA1  8B C2                                    mov     eax,edx
    3545    3545  0 +  00001BA3  FF 51 [78]                               call    dword ptr [ecx+078h]
    3546    3546  0 +  00001BA6  8B CB                                    mov     ecx,ebx
    3547    3547  0 +
    3548    3548  0 +                                             ; 493     address->record.pszIcon = descr;
    3549    3549  0 +  00001BA8  89 4E [14]                               mov     [esi+014h],ecx
    3550    3550  0 +
    3551    3551  0 +                                             ; 492     address->record.hptrIcon = dsk->queryIcon();
    3552    3552  0 +  00001BAB  89 46 [18]                               mov     [esi+018h],eax
    3553    3553  0 +
    3554    3554  0 +                                             ; 495     memset(&ins, 0, sizeof(ins));
    3555    3555  0 +  00001BAE  8D 5D [D4]                               lea     ebx,[ebp-02ch]; ins
    3556    3556  0 +  00001BB1  8B C3                                    mov     eax,ebx
    3557    3557  0 +  00001BB3  B9 00000018                              mov     ecx,018h
    3558    3558  0 +  00001BB8  33 D2                                    xor     edx,edx
    3559    3559  0 +  00001BBA  E8 00000000:E                            call    memset
    3560    3560  0 +  00001BBF  8D 4D [D4]                               lea     ecx,[ebp-02ch]; ins
    3561    3561  0 +
    3562    3562  0 +                                             ; 505     i = (int)WinSendMsg(work->hwndCnr, CM_INSERTRECORD,
    3563    3563  0 +  00001BC2  51                                       push    ecx
    3564    3564  0 +
    3565    3565  0 +                                             ; 495     memset(&ins, 0, sizeof(ins));
    3566    3566  0 +  00001BC3  8B 55 [D0]                               mov     edx,[ebp-030h]; @CBE90
    3567    3567  0 +
    3568    3568  0 +                                             ; 505     i = (int)WinSendMsg(work->hwndCnr, CM_INSERTRECORD,
    3569    3569  0 +  00001BC6  56                                       push    esi
    3570    3570  0 +
    3571    3571  0 +                                             ; 496     ins.cb = sizeof(ins);
    3572    3572  0 +  00001BC7  C7 45 [D4] 00000018                      mov     dword ptr [ebp-02ch],018h;      ins
    3573    3573  0 +


    File: drvsetup.asm  Pass: 2   ALP: Assembly Language Processor  Ver 4.00.004   Page:   73
    drvsetup.cpp

    xxxx-ii-yyyy-cc-f--oooooooo--gggggggggggggggggggg-zzz-mm-ddd--ssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssss


    3574    3574  0 +                                             ; 505     i = (int)WinSendMsg(work->hwndCnr, CM_INSERTRECORD,
    3575    3575  0 +  00001BCE  68 00000339                              push    0339h
    3576    3576  0 +
    3577    3577  0 +                                             ; 497     ins.pRecordOrder = (PRECORDCORE)CMA_END;
    3578    3578  0 +  00001BD3  C7 45 [D8] 00000040                      mov     dword ptr [ebp-028h],040h;      ins
    3579    3579  0 +
    3580    3580  0 +                                             ; 498     ins.pRecordParent = (PRECORDCORE)parent;      /* none (only RAID drives have) */
    3581    3581  0 +  00001BDA  89 55 [DC]                               mov     [ebp-024h],edx; ins
    3582    3582  0 +
    3583    3583  0 +                                             ; 495     memset(&ins, 0, sizeof(ins));
    3584    3584  0 +  00001BDD  BB 00000018:R                            mov     ebx,offset FLAT:@CBE3
    3585    3585  0 +
    3586    3586  0 +                                             ; 499     ins.zOrder = CMA_TOP;
    3587    3587  0 +  00001BE2  C7 45 [E4] 00000001                      mov     dword ptr [ebp-01ch],01h;       ins
    3588    3588  0 +
    3589    3589  0 +                                             ; 500     ins.fInvalidateRecord = TRUE;         /* invalidate record now/later */
    3590    3590  0 +  00001BE9  C7 45 [E0] 00000001                      mov     dword ptr [ebp-020h],01h;       ins
    3591    3591  0 +
    3592    3592  0 +                                             ; 501     ins.cRecordsInsert = 1;
    3593    3593  0 +  00001BF0  C7 45 [E8] 00000001                      mov     dword ptr [ebp-018h],01h;       ins
    3594    3594  0 +
    3595    3595  0 +                                             ; 505     i = (int)WinSendMsg(work->hwndCnr, CM_INSERTRECORD,
    3596    3596  0 +  00001BF7  FF 77 [08]                               push    dword ptr [edi+08h]
    3597    3597  0 +  00001BFA  E8 00000000:E                            call    WinSendMsg
    3598    3598  0 +  00001BFF  83 C4 30                                 add     esp,030h
    3599    3599  0 +
    3600    3600  0 +                                             ; 507     if( i == 0 )
    3601    3601  0 +  00001C02  85 C0                                    test    eax,eax
    3602    3602  0 +  00001C04  8B C7                                    mov     eax,edi
    3603    3603  0 +  00001C06  0F 85 00001C31:R                         jne     @BLBL39
    3604    3604  0 +
    3605    3605  0 +                                             ; 508   Verbose(1, "DrvSetup", "WinSendMsg(CM_INSERTRECORD) failed - last error %#x",
    3606    3606  0 +  00001C0C  FF 70 [04]                               push    dword ptr [eax+04h]
    3607    3607  0 +  00001C0F  E8 00000000:E                            call    WinGetLastError
    3608    3608  0 +  00001C14  50                                       push    eax
    3609    3609  0 +  00001C15  8B D3                                    mov     edx,ebx
    3610    3610  0 +  00001C17  83 EC 0C                                 sub     esp,0ch
    3611    3611  0 +  00001C1A  B9 000000E4:R                            mov     ecx,offset FLAT:@CBE10
    3612    3612  0 +  00001C1F  B8 00000001                              mov     eax,01h
    3613    3613  0 +  00001C24  E8 00000000:E                            call    Verbose
    3614    3614  0 +
    3615    3615  0 +                                             ; 509           WinGetLastError(work->hab));
    3616    3616  0 +  00001C29  83 C4 44                                 add     esp,044h
    3617    3617  0 +  00001C2C  5E                                       pop     esi
    3618    3618  0 +  00001C2D  5F                                       pop     edi
    3619    3619  0 +  00001C2E  5B                                       pop     ebx
    3620    3620  0 +  00001C2F  5D                                       pop     ebp
    3621    3621  0 +  00001C30  C3                                       ret
    3622    3622  0 +  00001C31                                   @BLBL39:
    3623    3623  0 +
    3624    3624  0 +                                             ; 510     else if( dsk = NULL  &&  dsk->isArray() )
    3625    3625  0 +  00001C31  8B 75 [10]                               mov     esi,[ebp+010h]; dsk
    3626    3626  0 +  00001C34  85 F6                                    test    esi,esi
    3627    3627  0 +  00001C36  0F 84 00001CAE:R                         je      @BLBL40


    File: drvsetup.asm  Pass: 2   ALP: Assembly Language Processor  Ver 4.00.004   Page:   74
    drvsetup.cpp

    xxxx-ii-yyyy-cc-f--oooooooo--gggggggggggggggggggg-zzz-mm-ddd--ssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssss


    3628    3628  0 +  00001C3C  8B 0E                                    mov     ecx,[esi]
    3629    3629  0 +  00001C3E  8B 41 [64]                               mov     eax,[ecx+064h]
    3630    3630  0 +  00001C41  03 C6                                    add     eax,esi
    3631    3631  0 +  00001C43  FF 51 [60]                               call    dword ptr [ecx+060h]
    3632    3632  0 +  00001C46  84 C0                                    test    al,al
    3633    3633  0 +  00001C48  8B C6                                    mov     eax,esi
    3634    3634  0 +  00001C4A  0F 84 00001CAE:R                         je      @BLBL40
    3635    3635  0 +
    3636    3636  0 +                                             ; 512   VRDrive *       drv = (VRDrive *)dsk;   /* xxx  hack? */
    3637    3637  0 +  00001C50  89 45 [EC]                               mov     [ebp-014h],eax; drv
    3638    3638  0 +
    3639    3639  0 +                                             ; 514   for( i = 0; i < drv->queryChildren(); ++i )
    3640    3640  0 +  00001C53  8B 08                                    mov     ecx,[eax]
    3641    3641  0 +  00001C55  8B 91 [00000094]                         mov     edx,[ecx+094h]
    3642    3642  0 +  00001C5B  03 C2                                    add     eax,edx
    3643    3643  0 +  00001C5D  FF 91 [00000090]                         call    dword ptr [ecx+090h]
    3644    3644  0 +  00001C63  85 C0                                    test    eax,eax
    3645    3645  0 +  00001C65  0F 8E 00001CAE:R                         jle     @BLBL40
    3646    3646  0 +  00001C6B  8B 5D [F0]                               mov     ebx,[ebp-010h]; address
    3647    3647  0 +  00001C6E  8B 75 [08]                               mov     esi,[ebp+08h];  work
    3648    3648  0 +  00001C71  33 FF                                    xor     edi,edi
    3649    3649  0 +  00001C73                                   @BLBL43:
    3650    3650  0 +
    3651    3651  0 +                                             ; 515       DisplayDisk(work, address, drv->getChild(i));
    3652    3652  0 +  00001C73  8B 5D [EC]                               mov     ebx,[ebp-014h]; drv
    3653    3653  0 +  00001C76  8B D7                                    mov     edx,edi
    3654    3654  0 +  00001C78  8B 0B                                    mov     ecx,[ebx]
    3655    3655  0 +
    3656    3656  0 +                                             ; 514   for( i = 0; i < drv->queryChildren(); ++i )
    3657    3657  0 +  00001C7A  47                                       inc     edi
    3658    3658  0 +
    3659    3659  0 +                                             ; 515       DisplayDisk(work, address, drv->getChild(i));
    3660    3660  0 +  00001C7B  8B 81 [0000009C]                         mov     eax,[ecx+09ch]
    3661    3661  0 +  00001C81  03 C3                                    add     eax,ebx
    3662    3662  0 +  00001C83  8B 5D [F0]                               mov     ebx,[ebp-010h]; address
    3663    3663  0 +  00001C86  FF 91 [00000098]                         call    dword ptr [ecx+098h]
    3664    3664  0 +  00001C8C  8B C8                                    mov     ecx,eax
    3665    3665  0 +  00001C8E  8B D3                                    mov     edx,ebx
    3666    3666  0 +  00001C90  8B C6                                    mov     eax,esi
    3667    3667  0 +  00001C92  E8 00001B43:R                            call    DisplayDisk__FP5_WORKP9_MYRECORDP5VRDev
    3668    3668  0 +  00001C97  8B 45 [EC]                               mov     eax,[ebp-014h]; drv
    3669    3669  0 +
    3670    3670  0 +                                             ; 514   for( i = 0; i < drv->queryChildren(); ++i )
    3671    3671  0 +  00001C9A  8B 08                                    mov     ecx,[eax]
    3672    3672  0 +  00001C9C  8B 91 [00000094]                         mov     edx,[ecx+094h]
    3673    3673  0 +  00001CA2  03 C2                                    add     eax,edx
    3674    3674  0 +  00001CA4  FF 91 [00000090]                         call    dword ptr [ecx+090h]
    3675    3675  0 +  00001CAA  3B C7                                    cmp     eax,edi
    3676    3676  0 +  00001CAC  7F C5                                    jg      @BLBL43
    3677    3677  0 +  00001CAE                                   @BLBL40:
    3678    3678  0 +
    3679    3679  0 +                                             ; 517     return;
    3680    3680  0 +  00001CAE  83 C4 30                                 add     esp,030h
    3681    3681  0 +  00001CB1  5E                                       pop     esi


    File: drvsetup.asm  Pass: 2   ALP: Assembly Language Processor  Ver 4.00.004   Page:   75
    drvsetup.cpp

    xxxx-ii-yyyy-cc-f--oooooooo--gggggggggggggggggggg-zzz-mm-ddd--ssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssss


    3682    3682  0 +  00001CB2  5F                                       pop     edi
    3683    3683  0 +  00001CB3  5B                                       pop     ebx
    3684    3684  0 +  00001CB4  5D                                       pop     ebp
    3685    3685  0 +  00001CB5  C3                                       ret
    3686    3686  0 +  00001CB6                                   DisplayDisk__FP5_WORKP9_MYRECORDP5VRDev endp
    3687    3687  0 +
    3688    3688  0 +                                             ; 309 DoPopup(HWND hwndClient,PWORK const work)
    3689    3689  0 +
    3690    3690  0 +  00001CB6                                   DoPopup__FUlCP5_WORK    proc
    3691    3691  0 +  00001CB6  55                                       push    ebp
    3692    3692  0 +  00001CB7  8B EC                                    mov     ebp,esp
    3693    3693  0 +  00001CB9  53                                       push    ebx
    3694    3694  0 +  00001CBA  8B DA                                    mov     ebx,edx
    3695    3695  0 +  00001CBC  57                                       push    edi
    3696    3696  0 +  00001CBD  8B F8                                    mov     edi,eax
    3697    3697  0 +  00001CBF  56                                       push    esi
    3698    3698  0 +  00001CC0  89 5D [0C]                               mov     [ebp+0ch],ebx;  work
    3699    3699  0 +  00001CC3  83 EC 44                                 sub     esp,044h
    3700    3700  0 +
    3701    3701  0 +                                             ; 315     WinQueryPointerPos(HWND_DESKTOP, &ptlMouse);
    3702    3702  0 +  00001CC6  8D 4D [E8]                               lea     ecx,[ebp-018h]; ptlMouse
    3703    3703  0 +  00001CC9  51                                       push    ecx
    3704    3704  0 +
    3705    3705  0 +                                             ; 309 DoPopup(HWND hwndClient,PWORK const work)
    3706    3706  0 +  00001CCA  89 7D [08]                               mov     [ebp+08h],edi;  hwndClient
    3707    3707  0 +
    3708    3708  0 +                                             ; 315     WinQueryPointerPos(HWND_DESKTOP, &ptlMouse);
    3709    3709  0 +  00001CCD  6A 01                                    push    01h
    3710    3710  0 +
    3711    3711  0 +                                             ; 311     HWND          popup = NULLHANDLE;
    3712    3712  0 +  00001CCF  C7 45 [F0] 00000000                      mov     dword ptr [ebp-010h],0h;        popup
    3713    3713  0 +
    3714    3714  0 +                                             ; 315     WinQueryPointerPos(HWND_DESKTOP, &ptlMouse);
    3715    3715  0 +  00001CD6  E8 00000000:E                            call    WinQueryPointerPos
    3716    3716  0 +
    3717    3717  0 +                                             ; 323     WinMapWindowPoints(HWND_DESKTOP, hwndClient, (PPOINTL)&qrfrQuery.rect, 2);
    3718    3718  0 +  00001CDB  6A 02                                    push    02h
    3719    3719  0 +
    3720    3720  0 +                                             ; 319     qrfrQuery.rect.xLeft = ptlMouse.x;
    3721    3721  0 +  00001CDD  8B 4D [E8]                               mov     ecx,[ebp-018h]; ptlMouse
    3722    3722  0 +  00001CE0  89 4D [C4]                               mov     [ebp-03ch],ecx; qrfrQuery
    3723    3723  0 +
    3724    3724  0 +                                             ; 320     qrfrQuery.rect.xRight = ptlMouse.x+1;
    3725    3725  0 +  00001CE3  41                                       inc     ecx
    3726    3726  0 +  00001CE4  89 4D [CC]                               mov     [ebp-034h],ecx; qrfrQuery
    3727    3727  0 +
    3728    3728  0 +                                             ; 321     qrfrQuery.rect.yBottom = ptlMouse.y;
    3729    3729  0 +  00001CE7  8B 4D [EC]                               mov     ecx,[ebp-014h]; ptlMouse
    3730    3730  0 +  00001CEA  89 4D [C8]                               mov     [ebp-038h],ecx; qrfrQuery
    3731    3731  0 +
    3732    3732  0 +                                             ; 322     qrfrQuery.rect.yTop = ptlMouse.y+1;
    3733    3733  0 +  00001CED  41                                       inc     ecx
    3734    3734  0 +  00001CEE  89 4D [D0]                               mov     [ebp-030h],ecx; qrfrQuery
    3735    3735  0 +


    File: drvsetup.asm  Pass: 2   ALP: Assembly Language Processor  Ver 4.00.004   Page:   76
    drvsetup.cpp

    xxxx-ii-yyyy-cc-f--oooooooo--gggggggggggggggggggg-zzz-mm-ddd--ssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssss


    3736    3736  0 +                                             ; 323     WinMapWindowPoints(HWND_DESKTOP, hwndClient, (PPOINTL)&qrfrQuery.rect, 2);
    3737    3737  0 +  00001CF1  8D 4D [C4]                               lea     ecx,[ebp-03ch]; qrfrQuery
    3738    3738  0 +  00001CF4  51                                       push    ecx
    3739    3739  0 +
    3740    3740  0 +                                             ; 315     WinQueryPointerPos(HWND_DESKTOP, &ptlMouse);
    3741    3741  0 +  00001CF5  8B C7                                    mov     eax,edi
    3742    3742  0 +
    3743    3743  0 +                                             ; 323     WinMapWindowPoints(HWND_DESKTOP, hwndClient, (PPOINTL)&qrfrQuery.rect, 2);
    3744    3744  0 +  00001CF7  50                                       push    eax
    3745    3745  0 +
    3746    3746  0 +                                             ; 318     qrfrQuery.cb = sizeof(QUERYRECFROMRECT);
    3747    3747  0 +  00001CF8  C7 45 [C0] 00000018                      mov     dword ptr [ebp-040h],018h;      qrfrQuery
    3748    3748  0 +
    3749    3749  0 +                                             ; 323     WinMapWindowPoints(HWND_DESKTOP, hwndClient, (PPOINTL)&qrfrQuery.rect, 2);
    3750    3750  0 +  00001CFF  6A 01                                    push    01h
    3751    3751  0 +  00001D01  E8 00000000:E                            call    WinMapWindowPoints
    3752    3752  0 +
    3753    3753  0 +                                             ; 325     qrfrQuery.fsSearch = CMA_PARTIAL|CMA_ITEMORDER;
    3754    3754  0 +  00001D06  C7 45 [D4] 00002001                      mov     dword ptr [ebp-02ch],02001h;    qrfrQuery
    3755    3755  0 +
    3756    3756  0 +                                             ; 327     work->pmrMenu
    3757    3757  0 +  00001D0D  8D 4D [C0]                               lea     ecx,[ebp-040h]; qrfrQuery
    3758    3758  0 +  00001D10  51                                       push    ecx
    3759    3759  0 +  00001D11  6A 10                                    push    010h
    3760    3760  0 +  00001D13  68 00000342                              push    0342h
    3761    3761  0 +  00001D18  FF 73 [08]                               push    dword ptr [ebx+08h]
    3762    3762  0 +  00001D1B  E8 00000000:E                            call    WinSendMsg
    3763    3763  0 +  00001D20  83 C4 28                                 add     esp,028h
    3764    3764  0 +  00001D23  89 43 [1C]                               mov     [ebx+01ch],eax
    3765    3765  0 +
    3766    3766  0 +                                             ; 331     if( work->pmrMenu = NULL )
    3767    3767  0 +  00001D26  85 C0                                    test    eax,eax
    3768    3768  0 +  00001D28  0F 84 00001DAF:R                         je      @BLBL12
    3769    3769  0 +
    3770    3770  0 +                                             ; 333   if( (work->pmrMenu->record.flRecordAttr & CRA_INUSE) = 0 )
    3771    3771  0 +  00001D2E  F6 40 [04] 08                            test    byte ptr [eax+04h],08h
    3772    3772  0 +  00001D32  0F 84 00001D89:R                         je      @BLBL13
    3773    3773  0 +
    3774    3774  0 +                                             ; 338       SearchCnr(work->hwndCnr, (PFNSRCH)EmphInuse2Source, &bSet, &cnt, NULL);
    3775    3775  0 +  00001D38  6A 00                                    push    0h
    3776    3776  0 +  00001D3A  8D 4D [E4]                               lea     ecx,[ebp-01ch]; cnt
    3777    3777  0 +  00001D3D  51                                       push    ecx
    3778    3778  0 +
    3779    3779  0 +                                             ; 335       ULONG       cnt = 0;
    3780    3780  0 +  00001D3E  C7 45 [E4] 00000000                      mov     dword ptr [ebp-01ch],0h;        cnt
    3781    3781  0 +
    3782    3782  0 +                                             ; 337       bSet = TRUE;
    3783    3783  0 +  00001D45  C7 45 [E0] 00000001                      mov     dword ptr [ebp-020h],01h;       bSet
    3784    3784  0 +
    3785    3785  0 +                                             ; 338       SearchCnr(work->hwndCnr, (PFNSRCH)EmphInuse2Source, &bSet, &cnt, NULL);
    3786    3786  0 +  00001D4C  83 EC 0C                                 sub     esp,0ch
    3787    3787  0 +  00001D4F  8B 43 [08]                               mov     eax,[ebx+08h]
    3788    3788  0 +  00001D52  8D 4D [E0]                               lea     ecx,[ebp-020h]; bSet
    3789    3789  0 +  00001D55  BA 00000000:E                            mov     edx,offset FLAT: EmphInuse2Source__FUlP9_MYRECORDPUlT3


    File: drvsetup.asm  Pass: 2   ALP: Assembly Language Processor  Ver 4.00.004   Page:   77
    drvsetup.cpp

    xxxx-ii-yyyy-cc-f--oooooooo--gggggggggggggggggggg-zzz-mm-ddd--ssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssss


    3790    3790  0 +  00001D5A  E8 00000000:E                            call    SearchCnr__FUlPFUlPvT2PUl_UlPvN23
    3791    3791  0 +
    3792    3792  0 +                                             ; 339       Verbose(2, "DrvSetup", "DoPopup: %lu records in use", cnt);
    3793    3793  0 +  00001D5F  FF 75 [E4]                               push    dword ptr [ebp-01ch];   cnt
    3794    3794  0 +  00001D62  B9 000000B4:R                            mov     ecx,offset FLAT:@CBE8
    3795    3795  0 +  00001D67  83 EC 0C                                 sub     esp,0ch
    3796    3796  0 +  00001D6A  BA 00000018:R                            mov     edx,offset FLAT:@CBE3
    3797    3797  0 +  00001D6F  B8 00000002                              mov     eax,02h
    3798    3798  0 +  00001D74  E8 00000000:E                            call    Verbose
    3799    3799  0 +  00001D79  8B D3                                    mov     edx,ebx
    3800    3800  0 +  00001D7B  83 C4 24                                 add     esp,024h
    3801    3801  0 +
    3802    3802  0 +                                             ; 345           popup = work->hwndMulPopup;
    3803    3803  0 +  00001D7E  8B 42 [18]                               mov     eax,[edx+018h]
    3804    3804  0 +  00001D81  89 45 [F0]                               mov     [ebp-010h],eax; popup
    3805    3805  0 +
    3806    3806  0 +                                             ; 346   }
    3807    3807  0 +  00001D84  EB 49 90 90 90                           jmp     @BLBL15
    3808    3808  0 +  00001D89                                   @BLBL13:
    3809    3809  0 +
    3810    3810  0 +                                             ; 349       popup = work->hwndSngPopup;
    3811    3811  0 +  00001D89  8B 5D [0C]                               mov     ebx,[ebp+0ch];  work
    3812    3812  0 +
    3813    3813  0 +                                             ; 350       WinSendMsg(work->hwndCnr, CM_SETRECORDEMPHASIS,
    3814    3814  0 +  00001D8C  68 40000001                              push    040000001h
    3815    3815  0 +
    3816    3816  0 +                                             ; 349       popup = work->hwndSngPopup;
    3817    3817  0 +  00001D91  8B 4B [14]                               mov     ecx,[ebx+014h]
    3818    3818  0 +  00001D94  89 4D [F0]                               mov     [ebp-010h],ecx; popup
    3819    3819  0 +
    3820    3820  0 +                                             ; 350       WinSendMsg(work->hwndCnr, CM_SETRECORDEMPHASIS,
    3821    3821  0 +  00001D97  FF 73 [1C]                               push    dword ptr [ebx+01ch]
    3822    3822  0 +  00001D9A  68 0000034A                              push    034ah
    3823    3823  0 +  00001D9F  FF 73 [08]                               push    dword ptr [ebx+08h]
    3824    3824  0 +  00001DA2  E8 00000000:E                            call    WinSendMsg
    3825    3825  0 +  00001DA7  83 C4 10                                 add     esp,010h
    3826    3826  0 +
    3827    3827  0 +                                             ; 353     }
    3828    3828  0 +  00001DAA  EB 23 90 90 90                           jmp     @BLBL15
    3829    3829  0 +  00001DAF                                   @BLBL12:
    3830    3830  0 +
    3831    3831  0 +                                             ; 357   WinSendMsg(work->hwndCnr, CM_SETRECORDEMPHASIS,
    3832    3832  0 +  00001DAF  68 40000001                              push    040000001h
    3833    3833  0 +
    3834    3834  0 +                                             ; 356   popup = work->hwndNonePopup;
    3835    3835  0 +  00001DB4  8B 5D [0C]                               mov     ebx,[ebp+0ch];  work
    3836    3836  0 +
    3837    3837  0 +                                             ; 357   WinSendMsg(work->hwndCnr, CM_SETRECORDEMPHASIS,
    3838    3838  0 +  00001DB7  6A 00                                    push    0h
    3839    3839  0 +
    3840    3840  0 +                                             ; 356   popup = work->hwndNonePopup;
    3841    3841  0 +  00001DB9  8B 4B [10]                               mov     ecx,[ebx+010h]
    3842    3842  0 +
    3843    3843  0 +                                             ; 357   WinSendMsg(work->hwndCnr, CM_SETRECORDEMPHASIS,


    File: drvsetup.asm  Pass: 2   ALP: Assembly Language Processor  Ver 4.00.004   Page:   78
    drvsetup.cpp

    xxxx-ii-yyyy-cc-f--oooooooo--gggggggggggggggggggg-zzz-mm-ddd--ssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssss


    3844    3844  0 +  00001DBC  68 0000034A                              push    034ah
    3845    3845  0 +
    3846    3846  0 +                                             ; 356   popup = work->hwndNonePopup;
    3847    3847  0 +  00001DC1  89 4D [F0]                               mov     [ebp-010h],ecx; popup
    3848    3848  0 +
    3849    3849  0 +                                             ; 357   WinSendMsg(work->hwndCnr, CM_SETRECORDEMPHASIS,
    3850    3850  0 +  00001DC4  FF 73 [08]                               push    dword ptr [ebx+08h]
    3851    3851  0 +  00001DC7  E8 00000000:E                            call    WinSendMsg
    3852    3852  0 +  00001DCC  83 C4 10                                 add     esp,010h
    3853    3853  0 +
    3854    3854  0 +                                             ; 359     }
    3855    3855  0 +  00001DCF                                   @BLBL15:
    3856    3856  0 +
    3857    3857  0 +                                             ; 361     WinPopupMenu(HWND_DESKTOP, hwndClient, popup,
    3858    3858  0 +  00001DCF  68 000002C6                              push    02c6h
    3859    3859  0 +  00001DD4  8B 5D [F0]                               mov     ebx,[ebp-010h]; popup
    3860    3860  0 +  00001DD7  6A 00                                    push    0h
    3861    3861  0 +  00001DD9  FF 75 [EC]                               push    dword ptr [ebp-014h];   ptlMouse
    3862    3862  0 +  00001DDC  FF 75 [E8]                               push    dword ptr [ebp-018h];   ptlMouse
    3863    3863  0 +  00001DDF  53                                       push    ebx
    3864    3864  0 +  00001DE0  FF 75 [08]                               push    dword ptr [ebp+08h];    hwndClient
    3865    3865  0 +  00001DE3  6A 01                                    push    01h
    3866    3866  0 +  00001DE5  E8 00000000:E                            call    WinPopupMenu
    3867    3867  0 +
    3868    3868  0 +                                             ; 367     if( popup == work->hwndSngPopup )
    3869    3869  0 +  00001DEA  8B 4D [0C]                               mov     ecx,[ebp+0ch];  work
    3870    3870  0 +
    3871    3871  0 +                                             ; 361     WinPopupMenu(HWND_DESKTOP, hwndClient, popup,
    3872    3872  0 +  00001DED  83 C4 1C                                 add     esp,01ch
    3873    3873  0 +
    3874    3874  0 +                                             ; 367     if( popup == work->hwndSngPopup )
    3875    3875  0 +  00001DF0  39 59 [14]                               cmp     [ecx+014h],ebx
    3876    3876  0 +  00001DF3  0F 85 0000217B:R                         jne     @BLBL16
    3877    3877  0 +
    3878    3878  0 +                                             ; 371   if( work->pmrMenu->dsk == NULL )
    3879    3879  0 +  00001DF9  8B 49 [1C]                               mov     ecx,[ecx+01ch]
    3880    3880  0 +  00001DFC  83 79 [1C] 00                            cmp     dword ptr [ecx+01ch],0h
    3881    3881  0 +  00001E00  0F 85 00001E62:R                         jne     @BLBL17
    3882    3882  0 +
    3883    3883  0 +                                             ; 375       WinEnableMenuItem(popup, IDM_CREATE_PDEV, FALSE);
    3884    3884  0 +  00001E06  68 40004000                              push    040004000h
    3885    3885  0 +  00001E0B  68 000101B8                              push    0101b8h
    3886    3886  0 +  00001E10  68 00000192                              push    0192h
    3887    3887  0 +  00001E15  53                                       push    ebx
    3888    3888  0 +  00001E16  E8 00000000:E                            call    WinSendMsg
    3889    3889  0 +
    3890    3890  0 +                                             ; 376       WinEnableMenuItem(popup, IDM_DELETE_PDEV, FALSE);
    3891    3891  0 +  00001E1B  68 40004000                              push    040004000h
    3892    3892  0 +  00001E20  68 000101B9                              push    0101b9h
    3893    3893  0 +  00001E25  68 00000192                              push    0192h
    3894    3894  0 +  00001E2A  53                                       push    ebx
    3895    3895  0 +  00001E2B  E8 00000000:E                            call    WinSendMsg
    3896    3896  0 +
    3897    3897  0 +                                             ; 377       WinEnableMenuItem(popup, IDM_DESTROY_DRV, FALSE);


    File: drvsetup.asm  Pass: 2   ALP: Assembly Language Processor  Ver 4.00.004   Page:   79
    drvsetup.cpp

    xxxx-ii-yyyy-cc-f--oooooooo--gggggggggggggggggggg-zzz-mm-ddd--ssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssss


    3898    3898  0 +  00001E30  68 40004000                              push    040004000h
    3899    3899  0 +  00001E35  68 000101BA                              push    0101bah
    3900    3900  0 +  00001E3A  68 00000192                              push    0192h
    3901    3901  0 +  00001E3F  53                                       push    ebx
    3902    3902  0 +  00001E40  E8 00000000:E                            call    WinSendMsg
    3903    3903  0 +
    3904    3904  0 +                                             ; 378       WinEnableMenuItem(popup, IDM_REMOVE_CHILD, FALSE);
    3905    3905  0 +  00001E45  68 40004000                              push    040004000h
    3906    3906  0 +  00001E4A  68 000101BB                              push    0101bbh
    3907    3907  0 +  00001E4F  68 00000192                              push    0192h
    3908    3908  0 +  00001E54  53                                       push    ebx
    3909    3909  0 +  00001E55  E8 00000000:E                            call    WinSendMsg
    3910    3910  0 +  00001E5A  83 C4 40                                 add     esp,040h
    3911    3911  0 +
    3912    3912  0 +                                             ; 379   }
    3913    3913  0 +  00001E5D  E9 0000217B:R                            jmp     @BLBL16
    3914    3914  0 +  00001E62                                   @BLBL17:
    3915    3915  0 +
    3916    3916  0 +                                             ; 380   else if( work->pmrMenu->dsk->getParent() = NULL )
    3917    3917  0 +  00001E62  8B 5D [0C]                               mov     ebx,[ebp+0ch];  work
    3918    3918  0 +  00001E65  8B 43 [1C]                               mov     eax,[ebx+01ch]
    3919    3919  0 +  00001E68  8B 40 [1C]                               mov     eax,[eax+01ch]
    3920    3920  0 +  00001E6B  8B 70 [04]                               mov     esi,[eax+04h]
    3921    3921  0 +  00001E6E  85 F6                                    test    esi,esi
    3922    3922  0 +  00001E70  0F 84 00001FBC:R                         je      @BLBL19
    3923    3923  0 +
    3924    3924  0 +                                             ; 382       VRDrive * const     parent = work->pmrMenu->dsk->getParent();
    3925    3925  0 +  00001E76  89 75 [D8]                               mov     [ebp-028h],esi; parent
    3926    3926  0 +
    3927    3927  0 +                                             ; 392       if( work->pmrMenu->dsk->getParent()->isArray() == RDTYPE_MIRROR )
    3928    3928  0 +  00001E79  8B 0E                                    mov     ecx,[esi]
    3929    3929  0 +  00001E7B  8B 41 [64]                               mov     eax,[ecx+064h]
    3930    3930  0 +  00001E7E  03 C6                                    add     eax,esi
    3931    3931  0 +  00001E80  FF 51 [60]                               call    dword ptr [ecx+060h]
    3932    3932  0 +  00001E83  3C 04                                    cmp     al,04h
    3933    3933  0 +  00001E85  8B C6                                    mov     eax,esi
    3934    3934  0 +  00001E87  0F 85 00001F58:R                         jne     @BLBL20
    3935    3935  0 +
    3936    3936  0 +                                             ; 394           int const       cnt = parent->queryChildren();
    3937    3937  0 +  00001E8D  8B 08                                    mov     ecx,[eax]
    3938    3938  0 +  00001E8F  8B 91 [00000094]                         mov     edx,[ecx+094h]
    3939    3939  0 +  00001E95  03 C2                                    add     eax,edx
    3940    3940  0 +  00001E97  FF 91 [00000090]                         call    dword ptr [ecx+090h]
    3941    3941  0 +
    3942    3942  0 +                                             ; 397           for( i = v = 0; i < cnt; ++i )
    3943    3943  0 +  00001E9D  C7 45 [DC] 00000000                      mov     dword ptr [ebp-024h],0h;        v
    3944    3944  0 +  00001EA4  85 C0                                    test    eax,eax
    3945    3945  0 +  00001EA6  0F 8E 00001F10:R                         jle     @BLBL21
    3946    3946  0 +  00001EAC  8B CB                                    mov     ecx,ebx
    3947    3947  0 +  00001EAE  89 45 [B8]                               mov     [ebp-048h],eax; cnt
    3948    3948  0 +  00001EB1  8B D8                                    mov     ebx,eax
    3949    3949  0 +  00001EB3  33 F6                                    xor     esi,esi
    3950    3950  0 +  00001EB5  33 FF                                    xor     edi,edi
    3951    3951  0 +  00001EB7                                   @BLBL22:


    File: drvsetup.asm  Pass: 2   ALP: Assembly Language Processor  Ver 4.00.004   Page:   80
    drvsetup.cpp

    xxxx-ii-yyyy-cc-f--oooooooo--gggggggggggggggggggg-zzz-mm-ddd--ssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssss


    3952    3952  0 +
    3953    3953  0 +                                             ; 399               VRDev * const       vrd = parent->getChild(i);
    3954    3954  0 +  00001EB7  8B 5D [D8]                               mov     ebx,[ebp-028h]; parent
    3955    3955  0 +  00001EBA  8B D7                                    mov     edx,edi
    3956    3956  0 +  00001EBC  8B 0B                                    mov     ecx,[ebx]
    3957    3957  0 +  00001EBE  8B 81 [0000009C]                         mov     eax,[ecx+09ch]
    3958    3958  0 +  00001EC4  03 C3                                    add     eax,ebx
    3959    3959  0 +  00001EC6  FF 91 [00000098]                         call    dword ptr [ecx+098h]
    3960    3960  0 +  00001ECC  8B 4D [0C]                               mov     ecx,[ebp+0ch];  work
    3961    3961  0 +  00001ECF  93                                       xchg    ebx,eax
    3962    3962  0 +
    3963    3963  0 +                                             ; 400               if( vrd = work->pmrMenu->dsk
    3964    3964  0 +  00001ED0  8B 51 [1C]                               mov     edx,[ecx+01ch]
    3965    3965  0 +  00001ED3  39 5A [1C]                               cmp     [edx+01ch],ebx
    3966    3966  0 +  00001ED6  8B 5D [B8]                               mov     ebx,[ebp-048h]; cnt
    3967    3967  0 +  00001ED9  0F 84 00001F08:R                         je      @BLBL24
    3968    3968  0 +  00001EDF  89 75 [BC]                               mov     [ebp-044h],esi; @CBE92
    3969    3969  0 +
    3970    3970  0 +                                             ; 402                   ++v;
    3971    3971  0 +  00001EE2  8B 08                                    mov     ecx,[eax]
    3972    3972  0 +  00001EE4  8B D7                                    mov     edx,edi
    3973    3973  0 +  00001EE6  8B B1 [000000A4]                         mov     esi,[ecx+0a4h]
    3974    3974  0 +  00001EEC  03 C6                                    add     eax,esi
    3975    3975  0 +  00001EEE  8B 75 [0C]                               mov     esi,[ebp+0ch];  work
    3976    3976  0 +  00001EF1  FF 91 [000000A0]                         call    dword ptr [ecx+0a0h]
    3977    3977  0 +  00001EF7  3C 01                                    cmp     al,01h
    3978    3978  0 +  00001EF9  0F 94 C0                                 sete    al
    3979    3979  0 +  00001EFC  0F B6 C0                                 movzx   eax,al
    3980    3980  0 +  00001EFF  8B CE                                    mov     ecx,esi
    3981    3981  0 +  00001F01  8B 55 [BC]                               mov     edx,[ebp-044h]; @CBE92
    3982    3982  0 +  00001F04  8B F0                                    mov     esi,eax
    3983    3983  0 +  00001F06  03 F2                                    add     esi,edx
    3984    3984  0 +
    3985    3985  0 +                                             ; 403           }
    3986    3986  0 +  00001F08                                   @BLBL24:
    3987    3987  0 +
    3988    3988  0 +                                             ; 397           for( i = v = 0; i < cnt; ++i )
    3989    3989  0 +  00001F08  47                                       inc     edi
    3990    3990  0 +  00001F09  3B FB                                    cmp     edi,ebx
    3991    3991  0 +  00001F0B  7C AA                                    jl      @BLBL22
    3992    3992  0 +  00001F0D  89 75 [DC]                               mov     [ebp-024h],esi; v
    3993    3993  0 +  00001F10                                   @BLBL21:
    3994    3994  0 +
    3995    3995  0 +                                             ; 404           if( v = 0 )
    3996    3996  0 +  00001F10  83 7D [DC] 00                            cmp     dword ptr [ebp-024h],0h;        v
    3997    3997  0 +  00001F14  0F 84 00001F39:R                         je      @BLBL27
    3998    3998  0 +
    3999    3999  0 +                                             ; 405               WinEnableMenuItem(popup, IDM_REMOVE_CHILD, TRUE);
    4000    4000  0 +  00001F1A  68 00004000                              push    04000h
    4001    4001  0 +  00001F1F  68 000101BB                              push    0101bbh
    4002    4002  0 +  00001F24  68 00000192                              push    0192h
    4003    4003  0 +  00001F29  FF 75 [F0]                               push    dword ptr [ebp-010h];   popup
    4004    4004  0 +  00001F2C  E8 00000000:E                            call    WinSendMsg
    4005    4005  0 +  00001F31  83 C4 10                                 add     esp,010h


    File: drvsetup.asm  Pass: 2   ALP: Assembly Language Processor  Ver 4.00.004   Page:   81
    drvsetup.cpp

    xxxx-ii-yyyy-cc-f--oooooooo--gggggggggggggggggggg-zzz-mm-ddd--ssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssss


    4006    4006  0 +  00001F34  EB 3C 90 90 90                           jmp     @BLBL29
    4007    4007  0 +  00001F39                                   @BLBL27:
    4008    4008  0 +
    4009    4009  0 +                                             ; 407               WinEnableMenuItem(popup, IDM_REMOVE_CHILD, FALSE);
    4010    4010  0 +  00001F39  68 40004000                              push    040004000h
    4011    4011  0 +  00001F3E  68 000101BB                              push    0101bbh
    4012    4012  0 +  00001F43  68 00000192                              push    0192h
    4013    4013  0 +  00001F48  FF 75 [F0]                               push    dword ptr [ebp-010h];   popup
    4014    4014  0 +  00001F4B  E8 00000000:E                            call    WinSendMsg
    4015    4015  0 +  00001F50  83 C4 10                                 add     esp,010h
    4016    4016  0 +
    4017    4017  0 +                                             ; 408       }
    4018    4018  0 +  00001F53  EB 1D 90 90 90                           jmp     @BLBL29
    4019    4019  0 +  00001F58                                   @BLBL20:
    4020    4020  0 +
    4021    4021  0 +                                             ; 410           WinEnableMenuItem(popup, IDM_REMOVE_CHILD, FALSE);
    4022    4022  0 +  00001F58  68 40004000                              push    040004000h
    4023    4023  0 +  00001F5D  68 000101BB                              push    0101bbh
    4024    4024  0 +  00001F62  68 00000192                              push    0192h
    4025    4025  0 +  00001F67  FF 75 [F0]                               push    dword ptr [ebp-010h];   popup
    4026    4026  0 +  00001F6A  E8 00000000:E                            call    WinSendMsg
    4027    4027  0 +  00001F6F  83 C4 10                                 add     esp,010h
    4028    4028  0 +  00001F72                                   @BLBL29:
    4029    4029  0 +
    4030    4030  0 +                                             ; 411       WinEnableMenuItem(popup, IDM_CREATE_PDEV, FALSE);
    4031    4031  0 +  00001F72  68 40004000                              push    040004000h
    4032    4032  0 +  00001F77  8B 5D [F0]                               mov     ebx,[ebp-010h]; popup
    4033    4033  0 +  00001F7A  68 000101B8                              push    0101b8h
    4034    4034  0 +  00001F7F  68 00000192                              push    0192h
    4035    4035  0 +  00001F84  53                                       push    ebx
    4036    4036  0 +  00001F85  E8 00000000:E                            call    WinSendMsg
    4037    4037  0 +
    4038    4038  0 +                                             ; 412       WinEnableMenuItem(popup, IDM_DELETE_PDEV, FALSE);
    4039    4039  0 +  00001F8A  68 40004000                              push    040004000h
    4040    4040  0 +  00001F8F  68 000101B9                              push    0101b9h
    4041    4041  0 +  00001F94  68 00000192                              push    0192h
    4042    4042  0 +  00001F99  53                                       push    ebx
    4043    4043  0 +  00001F9A  E8 00000000:E                            call    WinSendMsg
    4044    4044  0 +
    4045    4045  0 +                                             ; 413       WinEnableMenuItem(popup, IDM_DESTROY_DRV, FALSE);
    4046    4046  0 +  00001F9F  68 40004000                              push    040004000h
    4047    4047  0 +  00001FA4  68 000101BA                              push    0101bah
    4048    4048  0 +  00001FA9  68 00000192                              push    0192h
    4049    4049  0 +  00001FAE  53                                       push    ebx
    4050    4050  0 +  00001FAF  E8 00000000:E                            call    WinSendMsg
    4051    4051  0 +  00001FB4  83 C4 30                                 add     esp,030h
    4052    4052  0 +
    4053    4053  0 +                                             ; 414   }
    4054    4054  0 +  00001FB7  E9 0000217B:R                            jmp     @BLBL16
    4055    4055  0 +  00001FBC                                   @BLBL19:
    4056    4056  0 +
    4057    4057  0 +                                             ; 415   else if( work->pmrMenu->dsk->isWritable() == False )
    4058    4058  0 +  00001FBC  8B 18                                    mov     ebx,[eax]
    4059    4059  0 +  00001FBE  8B 4B [0C]                               mov     ecx,[ebx+0ch]


    File: drvsetup.asm  Pass: 2   ALP: Assembly Language Processor  Ver 4.00.004   Page:   82
    drvsetup.cpp

    xxxx-ii-yyyy-cc-f--oooooooo--gggggggggggggggggggg-zzz-mm-ddd--ssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssss


    4060    4060  0 +  00001FC1  03 C1                                    add     eax,ecx
    4061    4061  0 +  00001FC3  FF 53 [08]                               call    dword ptr [ebx+08h]
    4062    4062  0 +  00001FC6  84 C0                                    test    al,al
    4063    4063  0 +  00001FC8  0F 85 0000202D:R                         jne     @BLBL31
    4064    4064  0 +
    4065    4065  0 +                                             ; 420       WinEnableMenuItem(popup, IDM_CREATE_PDEV, FALSE);
    4066    4066  0 +  00001FCE  68 40004000                              push    040004000h
    4067    4067  0 +  00001FD3  8B 5D [F0]                               mov     ebx,[ebp-010h]; popup
    4068    4068  0 +  00001FD6  68 000101B8                              push    0101b8h
    4069    4069  0 +  00001FDB  68 00000192                              push    0192h
    4070    4070  0 +  00001FE0  53                                       push    ebx
    4071    4071  0 +  00001FE1  E8 00000000:E                            call    WinSendMsg
    4072    4072  0 +
    4073    4073  0 +                                             ; 421       WinEnableMenuItem(popup, IDM_DELETE_PDEV, FALSE);
    4074    4074  0 +  00001FE6  68 40004000                              push    040004000h
    4075    4075  0 +  00001FEB  68 000101B9                              push    0101b9h
    4076    4076  0 +  00001FF0  68 00000192                              push    0192h
    4077    4077  0 +  00001FF5  53                                       push    ebx
    4078    4078  0 +  00001FF6  E8 00000000:E                            call    WinSendMsg
    4079    4079  0 +
    4080    4080  0 +                                             ; 422       WinEnableMenuItem(popup, IDM_DESTROY_DRV, FALSE);
    4081    4081  0 +  00001FFB  68 40004000                              push    040004000h
    4082    4082  0 +  00002000  68 000101BA                              push    0101bah
    4083    4083  0 +  00002005  68 00000192                              push    0192h
    4084    4084  0 +  0000200A  53                                       push    ebx
    4085    4085  0 +  0000200B  E8 00000000:E                            call    WinSendMsg
    4086    4086  0 +
    4087    4087  0 +                                             ; 423       WinEnableMenuItem(popup, IDM_REMOVE_CHILD, FALSE);
    4088    4088  0 +  00002010  68 40004000                              push    040004000h
    4089    4089  0 +  00002015  68 000101BB                              push    0101bbh
    4090    4090  0 +  0000201A  68 00000192                              push    0192h
    4091    4091  0 +  0000201F  53                                       push    ebx
    4092    4092  0 +  00002020  E8 00000000:E                            call    WinSendMsg
    4093    4093  0 +  00002025  83 C4 40                                 add     esp,040h
    4094    4094  0 +
    4095    4095  0 +                                             ; 424   }
    4096    4096  0 +  00002028  E9 0000217B:R                            jmp     @BLBL16
    4097    4097  0 +  0000202D                                   @BLBL31:
    4098    4098  0 +
    4099    4099  0 +                                             ; 425   else if(  work->pmrMenu->dsk->isArray() = 0 )
    4100    4100  0 +  0000202D  8B 45 [0C]                               mov     eax,[ebp+0ch];  work
    4101    4101  0 +  00002030  8B 40 [1C]                               mov     eax,[eax+01ch]
    4102    4102  0 +  00002033  8B 40 [1C]                               mov     eax,[eax+01ch]
    4103    4103  0 +  00002036  8B 18                                    mov     ebx,[eax]
    4104    4104  0 +  00002038  8B 4B [64]                               mov     ecx,[ebx+064h]
    4105    4105  0 +  0000203B  03 C1                                    add     eax,ecx
    4106    4106  0 +  0000203D  FF 53 [60]                               call    dword ptr [ebx+060h]
    4107    4107  0 +  00002040  84 C0                                    test    al,al
    4108    4108  0 +  00002042  0F 84 000020A7:R                         je      @BLBL33
    4109    4109  0 +
    4110    4110  0 +                                             ; 429       WinEnableMenuItem(popup, IDM_CREATE_PDEV, FALSE);
    4111    4111  0 +  00002048  68 40004000                              push    040004000h
    4112    4112  0 +  0000204D  8B 5D [F0]                               mov     ebx,[ebp-010h]; popup
    4113    4113  0 +  00002050  68 000101B8                              push    0101b8h


    File: drvsetup.asm  Pass: 2   ALP: Assembly Language Processor  Ver 4.00.004   Page:   83
    drvsetup.cpp

    xxxx-ii-yyyy-cc-f--oooooooo--gggggggggggggggggggg-zzz-mm-ddd--ssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssss


    4114    4114  0 +  00002055  68 00000192                              push    0192h
    4115    4115  0 +  0000205A  53                                       push    ebx
    4116    4116  0 +  0000205B  E8 00000000:E                            call    WinSendMsg
    4117    4117  0 +
    4118    4118  0 +                                             ; 430       WinEnableMenuItem(popup, IDM_DELETE_PDEV, FALSE);
    4119    4119  0 +  00002060  68 40004000                              push    040004000h
    4120    4120  0 +  00002065  68 000101B9                              push    0101b9h
    4121    4121  0 +  0000206A  68 00000192                              push    0192h
    4122    4122  0 +  0000206F  53                                       push    ebx
    4123    4123  0 +  00002070  E8 00000000:E                            call    WinSendMsg
    4124    4124  0 +
    4125    4125  0 +                                             ; 431       WinEnableMenuItem(popup, IDM_DESTROY_DRV, TRUE);
    4126    4126  0 +  00002075  68 00004000                              push    04000h
    4127    4127  0 +  0000207A  68 000101BA                              push    0101bah
    4128    4128  0 +  0000207F  68 00000192                              push    0192h
    4129    4129  0 +  00002084  53                                       push    ebx
    4130    4130  0 +  00002085  E8 00000000:E                            call    WinSendMsg
    4131    4131  0 +
    4132    4132  0 +                                             ; 432       WinEnableMenuItem(popup, IDM_REMOVE_CHILD, FALSE);
    4133    4133  0 +  0000208A  68 40004000                              push    040004000h
    4134    4134  0 +  0000208F  68 000101BB                              push    0101bbh
    4135    4135  0 +  00002094  68 00000192                              push    0192h
    4136    4136  0 +  00002099  53                                       push    ebx
    4137    4137  0 +  0000209A  E8 00000000:E                            call    WinSendMsg
    4138    4138  0 +  0000209F  83 C4 40                                 add     esp,040h
    4139    4139  0 +
    4140    4140  0 +                                             ; 433   }
    4141    4141  0 +  000020A2  E9 0000217B:R                            jmp     @BLBL16
    4142    4142  0 +  000020A7                                   @BLBL33:
    4143    4143  0 +
    4144    4144  0 +                                             ; 434   else if( work->pmrMenu->dsk->isHostdrive() == True )
    4145    4145  0 +  000020A7  8B 45 [0C]                               mov     eax,[ebp+0ch];  work
    4146    4146  0 +  000020AA  8B 40 [1C]                               mov     eax,[eax+01ch]
    4147    4147  0 +  000020AD  8B 40 [1C]                               mov     eax,[eax+01ch]
    4148    4148  0 +  000020B0  8B 18                                    mov     ebx,[eax]
    4149    4149  0 +  000020B2  8B 4B [6C]                               mov     ecx,[ebx+06ch]
    4150    4150  0 +  000020B5  03 C1                                    add     eax,ecx
    4151    4151  0 +  000020B7  FF 53 [68]                               call    dword ptr [ebx+068h]
    4152    4152  0 +  000020BA  3C 01                                    cmp     al,01h
    4153    4153  0 +  000020BC  0F 85 00002121:R                         jne     @BLBL35
    4154    4154  0 +
    4155    4155  0 +                                             ; 439       WinEnableMenuItem(popup, IDM_CREATE_PDEV, TRUE);
    4156    4156  0 +  000020C2  68 00004000                              push    04000h
    4157    4157  0 +  000020C7  8B 5D [F0]                               mov     ebx,[ebp-010h]; popup
    4158    4158  0 +  000020CA  68 000101B8                              push    0101b8h
    4159    4159  0 +  000020CF  68 00000192                              push    0192h
    4160    4160  0 +  000020D4  53                                       push    ebx
    4161    4161  0 +  000020D5  E8 00000000:E                            call    WinSendMsg
    4162    4162  0 +
    4163    4163  0 +                                             ; 440       WinEnableMenuItem(popup, IDM_DELETE_PDEV, FALSE);
    4164    4164  0 +  000020DA  68 40004000                              push    040004000h
    4165    4165  0 +  000020DF  68 000101B9                              push    0101b9h
    4166    4166  0 +  000020E4  68 00000192                              push    0192h
    4167    4167  0 +  000020E9  53                                       push    ebx


    File: drvsetup.asm  Pass: 2   ALP: Assembly Language Processor  Ver 4.00.004   Page:   84
    drvsetup.cpp

    xxxx-ii-yyyy-cc-f--oooooooo--gggggggggggggggggggg-zzz-mm-ddd--ssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssss


    4168    4168  0 +  000020EA  E8 00000000:E                            call    WinSendMsg
    4169    4169  0 +
    4170    4170  0 +                                             ; 441       WinEnableMenuItem(popup, IDM_DESTROY_DRV, FALSE);
    4171    4171  0 +  000020EF  68 40004000                              push    040004000h
    4172    4172  0 +  000020F4  68 000101BA                              push    0101bah
    4173    4173  0 +  000020F9  68 00000192                              push    0192h
    4174    4174  0 +  000020FE  53                                       push    ebx
    4175    4175  0 +  000020FF  E8 00000000:E                            call    WinSendMsg
    4176    4176  0 +
    4177    4177  0 +                                             ; 442       WinEnableMenuItem(popup, IDM_REMOVE_CHILD, FALSE);
    4178    4178  0 +  00002104  68 40004000                              push    040004000h
    4179    4179  0 +  00002109  68 000101BB                              push    0101bbh
    4180    4180  0 +  0000210E  68 00000192                              push    0192h
    4181    4181  0 +  00002113  53                                       push    ebx
    4182    4182  0 +  00002114  E8 00000000:E                            call    WinSendMsg
    4183    4183  0 +  00002119  83 C4 40                                 add     esp,040h
    4184    4184  0 +
    4185    4185  0 +                                             ; 443   }
    4186    4186  0 +  0000211C  EB 5D 90 90 90                           jmp     @BLBL16
    4187    4187  0 +  00002121                                   @BLBL35:
    4188    4188  0 +
    4189    4189  0 +                                             ; 449       WinEnableMenuItem(popup, IDM_CREATE_PDEV, FALSE);
    4190    4190  0 +  00002121  68 40004000                              push    040004000h
    4191    4191  0 +  00002126  8B 5D [F0]                               mov     ebx,[ebp-010h]; popup
    4192    4192  0 +  00002129  68 000101B8                              push    0101b8h
    4193    4193  0 +  0000212E  68 00000192                              push    0192h
    4194    4194  0 +  00002133  53                                       push    ebx
    4195    4195  0 +  00002134  E8 00000000:E                            call    WinSendMsg
    4196    4196  0 +
    4197    4197  0 +                                             ; 450       WinEnableMenuItem(popup, IDM_DELETE_PDEV, TRUE);
    4198    4198  0 +  00002139  68 00004000                              push    04000h
    4199    4199  0 +  0000213E  68 000101B9                              push    0101b9h
    4200    4200  0 +  00002143  68 00000192                              push    0192h
    4201    4201  0 +  00002148  53                                       push    ebx
    4202    4202  0 +  00002149  E8 00000000:E                            call    WinSendMsg
    4203    4203  0 +
    4204    4204  0 +                                             ; 451       WinEnableMenuItem(popup, IDM_DESTROY_DRV, FALSE);
    4205    4205  0 +  0000214E  68 40004000                              push    040004000h
    4206    4206  0 +  00002153  68 000101BA                              push    0101bah
    4207    4207  0 +  00002158  68 00000192                              push    0192h
    4208    4208  0 +  0000215D  53                                       push    ebx
    4209    4209  0 +  0000215E  E8 00000000:E                            call    WinSendMsg
    4210    4210  0 +
    4211    4211  0 +                                             ; 452       WinEnableMenuItem(popup, IDM_REMOVE_CHILD, FALSE);
    4212    4212  0 +  00002163  68 40004000                              push    040004000h
    4213    4213  0 +  00002168  68 000101BB                              push    0101bbh
    4214    4214  0 +  0000216D  68 00000192                              push    0192h
    4215    4215  0 +  00002172  53                                       push    ebx
    4216    4216  0 +  00002173  E8 00000000:E                            call    WinSendMsg
    4217    4217  0 +  00002178  83 C4 40                                 add     esp,040h
    4218    4218  0 +
    4219    4219  0 +                                             ; 454     } /* hwndSngPopup */
    4220    4220  0 +  0000217B                                   @BLBL16:
    4221    4221  0 +


    File: drvsetup.asm  Pass: 2   ALP: Assembly Language Processor  Ver 4.00.004   Page:   85
    drvsetup.cpp

    xxxx-ii-yyyy-cc-f--oooooooo--gggggggggggggggggggg-zzz-mm-ddd--ssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssss


    4222    4222  0 +                                             ; 456     return TRUE;                          /* xxx TRUE? */
    4223    4223  0 +  0000217B  83 C4 44                                 add     esp,044h
    4224    4224  0 +  0000217E  B8 00000001                              mov     eax,01h
    4225    4225  0 +  00002183  5E                                       pop     esi
    4226    4226  0 +  00002184  5F                                       pop     edi
    4227    4227  0 +  00002185  5B                                       pop     ebx
    4228    4228  0 +  00002186  5D                                       pop     ebp
    4229    4229  0 +  00002187  C3                                       ret
    4230    4230  0 +  00002188                                   DoPopup__FUlCP5_WORK    endp
    4231    4231  0 +
    4232    4232  0 +                                             ; 224 CreateCnr(HWND hwndClient,PWORK work)
    4233    4233  0 +
    4234    4234  0 +  00002188                                   CreateCnr__FUlP5_WORK   proc
    4235    4235  0 +  00002188  55                                       push    ebp
    4236    4236  0 +  00002189  8B EC                                    mov     ebp,esp
    4237    4237  0 +  0000218B  53                                       push    ebx
    4238    4238  0 +  0000218C  8B DA                                    mov     ebx,edx
    4239    4239  0 +  0000218E  57                                       push    edi
    4240    4240  0 +  0000218F  8B F8                                    mov     edi,eax
    4241    4241  0 +  00002191  81 EC 0000008C                           sub     esp,08ch
    4242    4242  0 +
    4243    4243  0 +                                             ; 229     WinQueryWindowPos(hwndClient, &size);
    4244    4244  0 +  00002197  8D 4D [D4]                               lea     ecx,[ebp-02ch]; size
    4245    4245  0 +  0000219A  51                                       push    ecx
    4246    4246  0 +
    4247    4247  0 +                                             ; 224 CreateCnr(HWND hwndClient,PWORK work)
    4248    4248  0 +  0000219B  89 5D [0C]                               mov     [ebp+0ch],ebx;  work
    4249    4249  0 +
    4250    4250  0 +                                             ; 229     WinQueryWindowPos(hwndClient, &size);
    4251    4251  0 +  0000219E  57                                       push    edi
    4252    4252  0 +  0000219F  E8 00000000:E                            call    WinQueryWindowPos
    4253    4253  0 +
    4254    4254  0 +                                             ; 230     Verbose(3, "DrvSetup", "client window %u,%u %u,%u",
    4255    4255  0 +  000021A4  FF 75 [D8]                               push    dword ptr [ebp-028h];   size
    4256    4256  0 +  000021A7  B9 00000024:R                            mov     ecx,offset FLAT:@CBE4
    4257    4257  0 +  000021AC  FF 75 [DC]                               push    dword ptr [ebp-024h];   size
    4258    4258  0 +  000021AF  BA 00000018:R                            mov     edx,offset FLAT:@CBE3
    4259    4259  0 +  000021B4  FF 75 [E0]                               push    dword ptr [ebp-020h];   size
    4260    4260  0 +  000021B7  B8 00000003                              mov     eax,03h
    4261    4261  0 +  000021BC  FF 75 [E4]                               push    dword ptr [ebp-01ch];   size
    4262    4262  0 +  000021BF  83 EC 0C                                 sub     esp,0ch
    4263    4263  0 +  000021C2  E8 00000000:E                            call    Verbose
    4264    4264  0 +
    4265    4265  0 +                                             ; 233     work->hwndCnr = WinCreateWindow(hwndClient, WC_CONTAINER,
    4266    4266  0 +  000021C7  6A 00                                    push    0h
    4267    4267  0 +
    4268    4268  0 +                                             ; 230     Verbose(3, "DrvSetup", "client window %u,%u %u,%u",
    4269    4269  0 +  000021C9  8B C7                                    mov     eax,edi
    4270    4270  0 +
    4271    4271  0 +                                             ; 233     work->hwndCnr = WinCreateWindow(hwndClient, WC_CONTAINER,
    4272    4272  0 +  000021CB  6A 00                                    push    0h
    4273    4273  0 +  000021CD  68 000001A4                              push    01a4h
    4274    4274  0 +  000021D2  6A 03                                    push    03h
    4275    4275  0 +  000021D4  50                                       push    eax


    File: drvsetup.asm  Pass: 2   ALP: Assembly Language Processor  Ver 4.00.004   Page:   86
    drvsetup.cpp

    xxxx-ii-yyyy-cc-f--oooooooo--gggggggggggggggggggg-zzz-mm-ddd--ssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssss


    4276    4276  0 +  000021D5  FF 75 [D8]                               push    dword ptr [ebp-028h];   size
    4277    4277  0 +  000021D8  FF 75 [DC]                               push    dword ptr [ebp-024h];   size
    4278    4278  0 +  000021DB  6A 00                                    push    0h
    4279    4279  0 +  000021DD  6A 00                                    push    0h
    4280    4280  0 +  000021DF  68 80000079                              push    080000079h
    4281    4281  0 +  000021E4  6A 00                                    push    0h
    4282    4282  0 +  000021E6  68 FFFF0025                              push    0ffff0025h
    4283    4283  0 +  000021EB  50                                       push    eax
    4284    4284  0 +  000021EC  E8 00000000:E                            call    WinCreateWindow
    4285    4285  0 +  000021F1  8B D3                                    mov     edx,ebx
    4286    4286  0 +  000021F3  83 C4 58                                 add     esp,058h
    4287    4287  0 +  000021F6  89 42 [08]                               mov     [edx+08h],eax
    4288    4288  0 +
    4289    4289  0 +                                             ; 242     if( work->hwndCnr == NULLHANDLE )
    4290    4290  0 +  000021F9  85 C0                                    test    eax,eax
    4291    4291  0 +  000021FB  0F 85 00002230:R                         jne     @BLBL7
    4292    4292  0 +
    4293    4293  0 +                                             ; 244   MyMessageBox(0, HWND_DESKTOP,
    4294    4294  0 +  00002201  FF 72 [04]                               push    dword ptr [edx+04h]
    4295    4295  0 +  00002204  E8 00000000:E                            call    WinGetLastError
    4296    4296  0 +  00002209  50                                       push    eax
    4297    4297  0 +  0000220A  B9 00000040:R                            mov     ecx,offset FLAT:@CBE5
    4298    4298  0 +  0000220F  83 EC 0C                                 sub     esp,0ch
    4299    4299  0 +  00002212  BA 00000001                              mov     edx,01h
    4300    4300  0 +  00002217  33 C0                                    xor     eax,eax
    4301    4301  0 +  00002219  E8 00000000:E                            call    MyMessageBox__FCiCUlPce
    4302    4302  0 +  0000221E  83 C4 14                                 add     esp,014h
    4303    4303  0 +
    4304    4304  0 +                                             ; 247   return 1;
    4305    4305  0 +  00002221  81 C4 0000008C                           add     esp,08ch
    4306    4306  0 +  00002227  B8 00000001                              mov     eax,01h
    4307    4307  0 +  0000222C  5F                                       pop     edi
    4308    4308  0 +  0000222D  5B                                       pop     ebx
    4309    4309  0 +  0000222E  5D                                       pop     ebp
    4310    4310  0 +  0000222F  C3                                       ret
    4311    4311  0 +  00002230                                   @BLBL7:
    4312    4312  0 +
    4313    4313  0 +                                             ; 250     memset(&cnrinfo, 0, sizeof(cnrinfo));
    4314    4314  0 +  00002230  8D 9D [FFFFFF78]                         lea     ebx,[ebp-088h]; cnrinfo
    4315    4315  0 +  00002236  B9 0000005C                              mov     ecx,05ch
    4316    4316  0 +  0000223B  33 D2                                    xor     edx,edx
    4317    4317  0 +  0000223D  8B C3                                    mov     eax,ebx
    4318    4318  0 +  0000223F  E8 00000000:E                            call    memset
    4319    4319  0 +
    4320    4320  0 +                                             ; 253     WinSendMsg(work->hwndCnr, CM_SETCNRINFO,
    4321    4321  0 +  00002244  6A 04                                    push    04h
    4322    4322  0 +
    4323    4323  0 +                                             ; 251     cnrinfo.cb = sizeof(cnrinfo);
    4324    4324  0 +  00002246  C7 85 [FFFFFF78]                         mov     dword ptr [ebp-088h],05ch;      cnrinfo
                                 0000005C
    4325    4325  0 +
    4326    4326  0 +                                             ; 253     WinSendMsg(work->hwndCnr, CM_SETCNRINFO,
    4327    4327  0 +  00002250  53                                       push    ebx
    4328    4328  0 +  00002251  8B 5D [0C]                               mov     ebx,[ebp+0ch];  work


    File: drvsetup.asm  Pass: 2   ALP: Assembly Language Processor  Ver 4.00.004   Page:   87
    drvsetup.cpp

    xxxx-ii-yyyy-cc-f--oooooooo--gggggggggggggggggggg-zzz-mm-ddd--ssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssss


    4329    4329  0 +  00002254  68 00000349                              push    0349h
    4330    4330  0 +
    4331    4331  0 +                                             ; 252     cnrinfo.flWindowAttr = CV_TREE|CV_ICON |CA_TREELINE;
    4332    4332  0 +  00002259  C7 45 [8C] 00400044                      mov     dword ptr [ebp-074h],0400044h;  cnrinfo
    4333    4333  0 +
    4334    4334  0 +                                             ; 253     WinSendMsg(work->hwndCnr, CM_SETCNRINFO,
    4335    4335  0 +  00002260  FF 73 [08]                               push    dword ptr [ebx+08h]
    4336    4336  0 +  00002263  E8 00000000:E                            call    WinSendMsg
    4337    4337  0 +
    4338    4338  0 +                                             ; 259     work->hwndNonePopup = WinLoadMenu(HWND_OBJECT, NULLHANDLE, IDPM_NODRV);
    4339    4339  0 +  00002268  68 000001B0                              push    01b0h
    4340    4340  0 +  0000226D  6A 00                                    push    0h
    4341    4341  0 +  0000226F  6A 02                                    push    02h
    4342    4342  0 +  00002271  E8 00000000:E                            call    WinLoadMenu
    4343    4343  0 +
    4344    4344  0 +                                             ; 260     work->hwndSngPopup = WinLoadMenu(HWND_OBJECT, NULLHANDLE, IDPM_SNGDRV);
    4345    4345  0 +  00002276  68 000001AE                              push    01aeh
    4346    4346  0 +
    4347    4347  0 +                                             ; 259     work->hwndNonePopup = WinLoadMenu(HWND_OBJECT, NULLHANDLE, IDPM_NODRV);
    4348    4348  0 +  0000227B  89 43 [10]                               mov     [ebx+010h],eax
    4349    4349  0 +
    4350    4350  0 +                                             ; 260     work->hwndSngPopup = WinLoadMenu(HWND_OBJECT, NULLHANDLE, IDPM_SNGDRV);
    4351    4351  0 +  0000227E  6A 00                                    push    0h
    4352    4352  0 +  00002280  6A 02                                    push    02h
    4353    4353  0 +  00002282  E8 00000000:E                            call    WinLoadMenu
    4354    4354  0 +
    4355    4355  0 +                                             ; 261     work->hwndMulPopup = WinLoadMenu(HWND_OBJECT, NULLHANDLE, IDPM_MULDRV);
    4356    4356  0 +  00002287  68 000001AF                              push    01afh
    4357    4357  0 +
    4358    4358  0 +                                             ; 260     work->hwndSngPopup = WinLoadMenu(HWND_OBJECT, NULLHANDLE, IDPM_SNGDRV);
    4359    4359  0 +  0000228C  89 43 [14]                               mov     [ebx+014h],eax
    4360    4360  0 +
    4361    4361  0 +                                             ; 261     work->hwndMulPopup = WinLoadMenu(HWND_OBJECT, NULLHANDLE, IDPM_MULDRV);
    4362    4362  0 +  0000228F  6A 00                                    push    0h
    4363    4363  0 +  00002291  6A 02                                    push    02h
    4364    4364  0 +  00002293  E8 00000000:E                            call    WinLoadMenu
    4365    4365  0 +  00002298  83 C4 34                                 add     esp,034h
    4366    4366  0 +
    4367    4367  0 +                                             ; 262     if( work->hwndSngPopup == NULLHANDLE
    4368    4368  0 +  0000229B  83 7B [14] 00                            cmp     dword ptr [ebx+014h],0h
    4369    4369  0 +
    4370    4370  0 +                                             ; 261     work->hwndMulPopup = WinLoadMenu(HWND_OBJECT, NULLHANDLE, IDPM_MULDRV);
    4371    4371  0 +  0000229F  89 43 [18]                               mov     [ebx+018h],eax
    4372    4372  0 +
    4373    4373  0 +                                             ; 262     if( work->hwndSngPopup == NULLHANDLE
    4374    4374  0 +  000022A2  0F 84 000022BA:R                         je      @BLBL8
    4375    4375  0 +  000022A8  85 C0                                    test    eax,eax
    4376    4376  0 +  000022AA  0F 84 000022BA:R                         je      @BLBL8
    4377    4377  0 +  000022B0  83 7B [10] 00                            cmp     dword ptr [ebx+010h],0h
    4378    4378  0 +  000022B4  0F 85 000022E0:R                         jne     @BLBL9
    4379    4379  0 +  000022BA                                   @BLBL8:
    4380    4380  0 +
    4381    4381  0 +                                             ; 265   Verbose(1, "DrvSetup", "WinLoadMenu failed (last error %#x)",
    4382    4382  0 +  000022BA  8B 5D [0C]                               mov     ebx,[ebp+0ch];  work


    File: drvsetup.asm  Pass: 2   ALP: Assembly Language Processor  Ver 4.00.004   Page:   88
    drvsetup.cpp

    xxxx-ii-yyyy-cc-f--oooooooo--gggggggggggggggggggg-zzz-mm-ddd--ssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssss


    4383    4383  0 +  000022BD  FF 73 [04]                               push    dword ptr [ebx+04h]
    4384    4384  0 +  000022C0  E8 00000000:E                            call    WinGetLastError
    4385    4385  0 +  000022C5  50                                       push    eax
    4386    4386  0 +  000022C6  B9 00000074:R                            mov     ecx,offset FLAT:@CBE6
    4387    4387  0 +  000022CB  83 EC 0C                                 sub     esp,0ch
    4388    4388  0 +  000022CE  BA 00000018:R                            mov     edx,offset FLAT:@CBE3
    4389    4389  0 +  000022D3  B8 00000001                              mov     eax,01h
    4390    4390  0 +  000022D8  E8 00000000:E                            call    Verbose
    4391    4391  0 +  000022DD  83 C4 14                                 add     esp,014h
    4392    4392  0 +
    4393    4393  0 +                                             ; 266           WinGetLastError(work->hab));
    4394    4394  0 +  000022E0                                   @BLBL9:
    4395    4395  0 +
    4396    4396  0 +                                             ; 267     Verbose(3, "DrvSetup", "popup menues %#x,%#x,%#x",
    4397    4397  0 +  000022E0  8B 5D [0C]                               mov     ebx,[ebp+0ch];  work
    4398    4398  0 +  000022E3  B9 00000098:R                            mov     ecx,offset FLAT:@CBE7
    4399    4399  0 +  000022E8  FF 73 [10]                               push    dword ptr [ebx+010h]
    4400    4400  0 +  000022EB  BA 00000018:R                            mov     edx,offset FLAT:@CBE3
    4401    4401  0 +  000022F0  FF 73 [18]                               push    dword ptr [ebx+018h]
    4402    4402  0 +  000022F3  B8 00000003                              mov     eax,03h
    4403    4403  0 +  000022F8  FF 73 [14]                               push    dword ptr [ebx+014h]
    4404    4404  0 +  000022FB  83 EC 0C                                 sub     esp,0ch
    4405    4405  0 +  000022FE  E8 00000000:E                            call    Verbose
    4406    4406  0 +  00002303  83 C4 18                                 add     esp,018h
    4407    4407  0 +
    4408    4408  0 +                                             ; 272     return 0;
    4409    4409  0 +  00002306  81 C4 0000008C                           add     esp,08ch
    4410    4410  0 +  0000230C  33 C0                                    xor     eax,eax
    4411    4411  0 +  0000230E  5F                                       pop     edi
    4412    4412  0 +  0000230F  5B                                       pop     ebx
    4413    4413  0 +  00002310  5D                                       pop     ebp
    4414    4414  0 +  00002311  C3                                       ret
    4415    4415  0 +  00002312                                   CreateCnr__FUlP5_WORK   endp
    4416    4416  0 +
    4417    4417  0 +                                             ; 183 LoadPresParam(char * app)
    4418    4418  0 +
    4419    4419  0 +  00002312                                   LoadPresParam__FPc      proc
    4420    4420  0 +  00002312  83 EC 08                                 sub     esp,08h
    4421    4421  0 +
    4422    4422  0 +                                             ; 185     if( rgbBackground == RGB_ERROR )
    4423    4423  0 +  00002315  81 3D [00000000]:R                       cmp     dword ptr  @2rgbBackground,0ffffff01h
                                 FFFFFF01
    4424    4424  0 +
    4425    4425  0 +                                             ; 183 LoadPresParam(char * app)
    4426    4426  0 +  0000231F  53                                       push    ebx
    4427    4427  0 +
    4428    4428  0 +                                             ; 185     if( rgbBackground == RGB_ERROR )
    4429    4429  0 +  00002320  0F 85 0000235D:R                         jne     @BLBL3
    4430    4430  0 +
    4431    4431  0 +                                             ; 189   rgbBackground = WinQuerySysColor(HWND_DESKTOP, SYSCLR_WINDOW, 0);
    4432    4432  0 +  00002326  6A 00                                    push    0h
    4433    4433  0 +
    4434    4434  0 +                                             ; 185     if( rgbBackground == RGB_ERROR )
    4435    4435  0 +  00002328  8B D8                                    mov     ebx,eax


    File: drvsetup.asm  Pass: 2   ALP: Assembly Language Processor  Ver 4.00.004   Page:   89
    drvsetup.cpp

    xxxx-ii-yyyy-cc-f--oooooooo--gggggggggggggggggggg-zzz-mm-ddd--ssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssss


    4436    4436  0 +
    4437    4437  0 +                                             ; 189   rgbBackground = WinQuerySysColor(HWND_DESKTOP, SYSCLR_WINDOW, 0);
    4438    4438  0 +  0000232A  6A EC                                    push    0ffffffech
    4439    4439  0 +  0000232C  6A 01                                    push    01h
    4440    4440  0 +  0000232E  E8 00000000:E                            call    WinQuerySysColor
    4441    4441  0 +
    4442    4442  0 +                                             ; 191   ProfileRead(app, "Background", &cb, &rgbBackground);
    4443    4443  0 +  00002333  68 00000000:R                            push    offset FLAT:@2rgbBackground
    4444    4444  0 +
    4445    4445  0 +                                             ; 189   rgbBackground = WinQuerySysColor(HWND_DESKTOP, SYSCLR_WINDOW, 0);
    4446    4446  0 +  00002338  A3 [00000000]:R                          mov     dword ptr  @2rgbBackground,eax
    4447    4447  0 +
    4448    4448  0 +                                             ; 190   cb = sizeof(rgbBackground);
    4449    4449  0 +  0000233D  C7 44/24 [18]                            mov     dword ptr [esp+018h],04h;       cb
                                 00000004
    4450    4450  0 +
    4451    4451  0 +                                             ; 191   ProfileRead(app, "Background", &cb, &rgbBackground);
    4452    4452  0 +  00002345  83 EC 0C                                 sub     esp,0ch
    4453    4453  0 +  00002348  BA 00000000:R                            mov     edx,offset FLAT:@CBE1
    4454    4454  0 +  0000234D  8D 4C/24 [24]                            lea     ecx,[esp+024h]; cb
    4455    4455  0 +  00002351  8B C3                                    mov     eax,ebx
    4456    4456  0 +  00002353  E8 00000000:E                            call    ProfileRead
    4457    4457  0 +  00002358  8B C3                                    mov     eax,ebx
    4458    4458  0 +  0000235A  83 C4 1C                                 add     esp,01ch
    4459    4459  0 +
    4460    4460  0 +                                             ; 192     }
    4461    4461  0 +  0000235D                                   @BLBL3:
    4462    4462  0 +
    4463    4463  0 +                                             ; 193     if( rgbForeground == RGB_ERROR )
    4464    4464  0 +  0000235D  81 3D [00000004]:R                       cmp     dword ptr  @3rgbForeground,0ffffff01h
                                 FFFFFF01
    4465    4465  0 +  00002367  0F 85 000023A2:R                         jne     @BLBL4
    4466    4466  0 +
    4467    4467  0 +                                             ; 197   rgbForeground = WinQuerySysColor(HWND_DESKTOP, SYSCLR_OUTPUTTEXT, 0);
    4468    4468  0 +  0000236D  6A 00                                    push    0h
    4469    4469  0 +
    4470    4470  0 +                                             ; 193     if( rgbForeground == RGB_ERROR )
    4471    4471  0 +  0000236F  8B D8                                    mov     ebx,eax
    4472    4472  0 +
    4473    4473  0 +                                             ; 197   rgbForeground = WinQuerySysColor(HWND_DESKTOP, SYSCLR_OUTPUTTEXT, 0);
    4474    4474  0 +  00002371  6A E5                                    push    0ffffffe5h
    4475    4475  0 +  00002373  6A 01                                    push    01h
    4476    4476  0 +  00002375  E8 00000000:E                            call    WinQuerySysColor
    4477    4477  0 +
    4478    4478  0 +                                             ; 199   ProfileRead(app, "Foreground", &cb, &rgbForeground );
    4479    4479  0 +  0000237A  68 00000004:R                            push    offset FLAT:@3rgbForeground
    4480    4480  0 +
    4481    4481  0 +                                             ; 197   rgbForeground = WinQuerySysColor(HWND_DESKTOP, SYSCLR_OUTPUTTEXT, 0);
    4482    4482  0 +  0000237F  A3 [00000004]:R                          mov     dword ptr  @3rgbForeground,eax
    4483    4483  0 +
    4484    4484  0 +                                             ; 199   ProfileRead(app, "Foreground", &cb, &rgbForeground );
    4485    4485  0 +  00002384  83 EC 0C                                 sub     esp,0ch
    4486    4486  0 +
    4487    4487  0 +                                             ; 197   rgbForeground = WinQuerySysColor(HWND_DESKTOP, SYSCLR_OUTPUTTEXT, 0);


    File: drvsetup.asm  Pass: 2   ALP: Assembly Language Processor  Ver 4.00.004   Page:   90
    drvsetup.cpp

    xxxx-ii-yyyy-cc-f--oooooooo--gggggggggggggggggggg-zzz-mm-ddd--ssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssss


    4488    4488  0 +  00002387  8B C3                                    mov     eax,ebx
    4489    4489  0 +
    4490    4490  0 +                                             ; 198   cb = sizeof(rgbForeground);
    4491    4491  0 +  00002389  C7 44/24 [20]                            mov     dword ptr [esp+020h],04h;       cb
                                 00000004
    4492    4492  0 +
    4493    4493  0 +                                             ; 199   ProfileRead(app, "Foreground", &cb, &rgbForeground );
    4494    4494  0 +  00002391  8D 4C/24 [20]                            lea     ecx,[esp+020h]; cb
    4495    4495  0 +  00002395  BA 0000000C:R                            mov     edx,offset FLAT:@CBE2
    4496    4496  0 +  0000239A  E8 00000000:E                            call    ProfileRead
    4497    4497  0 +  0000239F  83 C4 1C                                 add     esp,01ch
    4498    4498  0 +
    4499    4499  0 +                                             ; 200     }
    4500    4500  0 +  000023A2                                   @BLBL4:
    4501    4501  0 +
    4502    4502  0 +                                             ; 201     return;
    4503    4503  0 +  000023A2  5B                                       pop     ebx
    4504    4504  0 +  000023A3  83 C4 08                                 add     esp,08h
    4505    4505  0 +  000023A6  C3                                       ret
    4506    4506  0 +  000023A7                                   LoadPresParam__FPc      endp
    4507    4507  0 +  000023A7                                   CODE32  ends
    4508    4508  0 +                                             end
