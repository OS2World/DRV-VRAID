;	Static Name Aliases
;
;	$S170_id	EQU	id
	TITLE   Iorb.c
	.286p
	.287
_TEXT	SEGMENT  WORD PUBLIC 'CODE'
_TEXT	ENDS
_DATA	SEGMENT  WORD PUBLIC 'DATA'
_DATA	ENDS
CONST	SEGMENT  WORD PUBLIC 'CONST'
CONST	ENDS
_BSS	SEGMENT  WORD PUBLIC 'BSS'
_BSS	ENDS
DGROUP	GROUP	CONST, _BSS, _DATA
	ASSUME DS: DGROUP
	ASSUME  SS: NOTHING
EXTRN	DEVHELP_BEEP:FAR
EXTRN	_CallADD:NEAR
EXTRN	_ulTimer:DWORD
EXTRN	_hdThisDriver:WORD
EXTRN	_cUnit:WORD
EXTRN	_anpUnit:BYTE
EXTRN	_fDriverFlags:WORD
EXTRN	_fAPMSuspended:BYTE
_DATA      SEGMENT
$S170_id	DB	'$Id: iorb.c,v 1.16 2001/02/27 22:36:36 vitus Exp vitus $',  00H
_DATA      ENDS
_TEXT      SEGMENT
	ASSUME	CS: _TEXT

AllocateIorb	PROC NEAR
; Line 89
	*** 000000	c8 02 00 00 		enter	2,0
;	np = -2
;	device = 4
; Line 90
	*** 000004	c7 46 fe 00 00 		mov	WORD PTR [bp-2],0	;np
; Line 92
	*** 000009	9c 			pushf	
; Line 93
	*** 00000a	fa 			cli	
; Line 94
	*** 00000b	8b 5e 04 		mov	bx,WORD PTR [bp+4]	;device
	*** 00000e	f6 07 01 		test	BYTE PTR [bx],1
	*** 000011	75 0a 			jne	$I1184
; Line 95
; Line 96
	*** 000013	80 0f 01 		or	BYTE PTR [bx],1
; Line 97
	*** 000016	8d 87 e5 00 		lea	ax,WORD PTR [bx+229]
	*** 00001a	89 46 fe 		mov	WORD PTR [bp-2],ax	;np
; Line 98
; Line 99
					$I1184:
	*** 00001d	9d 			popf	
; Line 100
	*** 00001e	8b 46 fe 		mov	ax,WORD PTR [bp-2]	;np
; Line 101
	*** 000021	c9 			leave	
	*** 000022	c3 			ret	
	*** 000023	90 			nop	

AllocateIorb	ENDP

FreeIorb	PROC NEAR
; Line 124
	*** 000024	55 			push	bp
	*** 000025	8b ec 			mov	bp,sp
;	device = 4
; Line 125
	*** 000027	8b 5e 04 		mov	bx,WORD PTR [bp+4]	;device
	*** 00002a	80 27 fe 		and	BYTE PTR [bx],254	;00feH
; Line 127
	*** 00002d	c9 			leave	
	*** 00002e	c3 			ret	
	*** 00002f	90 			nop	

FreeIorb	ENDP

NotifyIorb	PROC NEAR
; Line 150
	*** 000030	c8 04 00 00 		enter	4,0
	*** 000034	57 			push	di
	*** 000035	56 			push	si
;	pIorbh = 4
;	ErrorCode = 8
;	p = -4
; Line 158
	*** 000036	8b 46 04 		mov	ax,WORD PTR [bp+4]	;pIorbh
	*** 000039	8b 56 06 		mov	dx,WORD PTR [bp+6]
	*** 00003c	8b f0 			mov	si,ax
	*** 00003e	89 56 fe 		mov	WORD PTR [bp-2],dx
	*** 000041	0b d0 			or	dx,ax
	*** 000043	74 67 			je	$EX1194
	*** 000045	8b 7e 08 		mov	di,WORD PTR [bp+8]	;ErrorCode
					$F1196:
; Line 160
	*** 000048	8e 46 fe 		mov	es,WORD PTR [bp-2]
	*** 00004b	26 89 7c 0c 		mov	WORD PTR es:[si+12],di
; Line 162
	*** 00004f	0b ff 			or	di,di
	*** 000051	74 0f 			je	$L1322
	*** 000053	8e 46 fe 		mov	es,WORD PTR [bp-2]
	*** 000056	26 f6 44 0a 04 		test	BYTE PTR es:[si+10],4
	*** 00005b	75 05 			jne	$L1322
	*** 00005d	b9 02 00 		mov	cx,2
	*** 000060	eb 02 			jmp	SHORT $L1323
					$L1322:
	*** 000062	33 c9 			xor	cx,cx
					$L1323:
	*** 000064	80 c9 01 		or	cl,1
	*** 000067	8e 46 fe 		mov	es,WORD PTR [bp-2]
	*** 00006a	26 09 4c 0a 		or	WORD PTR es:[si+10],cx
; Line 163
	*** 00006e	26 f6 44 08 01 		test	BYTE PTR es:[si+8],1
	*** 000073	74 15 			je	$FC1197
; Line 164
	*** 000075	ff 76 fe 		push	WORD PTR [bp-2]
	*** 000078	56 			push	si
	*** 000079	8e 46 fe 		mov	es,WORD PTR [bp-2]
	*** 00007c	26 ff 74 1e 		push	WORD PTR es:[si+30]
	*** 000080	26 ff 74 1c 		push	WORD PTR es:[si+28]
	*** 000084	e8 00 00 		call	_CallADD
	*** 000087	83 c4 08 		add	sp,8
; Line 158
					$FC1197:
	*** 00008a	8e 46 fe 		mov	es,WORD PTR [bp-2]
	*** 00008d	26 f6 44 08 02 		test	BYTE PTR es:[si+8],2
	*** 000092	74 0a 			je	$L1320
	*** 000094	26 8b 44 18 		mov	ax,WORD PTR es:[si+24]
	*** 000098	26 8b 54 1a 		mov	dx,WORD PTR es:[si+26]
	*** 00009c	eb 03 			jmp	SHORT $L1330
					$L1320:
	*** 00009e	33 c0 			xor	ax,ax
	*** 0000a0	99 			cwd	
					$L1330:
	*** 0000a1	8b f0 			mov	si,ax
	*** 0000a3	89 56 fe 		mov	WORD PTR [bp-2],dx
	*** 0000a6	8b c2 			mov	ax,dx
	*** 0000a8	0b c6 			or	ax,si
	*** 0000aa	75 9c 			jne	$F1196
; Line 167
					$EX1194:
	*** 0000ac	5e 			pop	si
	*** 0000ad	5f 			pop	di
	*** 0000ae	c9 			leave	
	*** 0000af	c3 			ret	

NotifyIorb	ENDP

QueueIorb	PROC NEAR
; Line 208
	*** 0000b0	c8 04 00 00 		enter	4,0
	*** 0000b4	57 			push	di
;	iorb = 6
;	device = 4
; Line 210
	*** 0000b5	33 c0 			xor	ax,ax
	*** 0000b7	c4 5e 06 		les	bx,DWORD PTR [bp+6]	;iorb
	*** 0000ba	b9 10 00 		mov	cx,16	;0010H
	*** 0000bd	8d 7f 34 		lea	di,WORD PTR [bx+52]
	*** 0000c0	f3 			rep
	*** 0000c1	aa 			stosb
; Line 212
	*** 0000c2	9c 			pushf	
; Line 213
	*** 0000c3	fa 			cli	
; Line 214
	*** 0000c4	8b 5e 04 		mov	bx,WORD PTR [bp+4]	;device
	*** 0000c7	8b 87 67 01 		mov	ax,WORD PTR [bx+359]
	*** 0000cb	0b 87 65 01 		or	ax,WORD PTR [bx+357]
	*** 0000cf	75 11 			jne	$I1209
; Line 215
	*** 0000d1	8b 46 06 		mov	ax,WORD PTR [bp+6]	;iorb
	*** 0000d4	8b 56 08 		mov	dx,WORD PTR [bp+8]
	*** 0000d7	89 87 65 01 		mov	WORD PTR [bx+357],ax
	*** 0000db	89 97 67 01 		mov	WORD PTR [bx+359],dx
; Line 216
	*** 0000df	eb 1b 			jmp	SHORT $I1210
	*** 0000e1	90 			nop	
					$I1209:
; Line 217
;	ws = -4
; Line 219
	*** 0000e2	8b 46 06 		mov	ax,WORD PTR [bp+6]	;iorb
	*** 0000e5	8b 56 08 		mov	dx,WORD PTR [bp+8]
	*** 0000e8	c4 9f 69 01 		les	bx,DWORD PTR [bx+361]
	*** 0000ec	83 c3 34 		add	bx,52	;0034H
	*** 0000ef	89 5e fc 		mov	WORD PTR [bp-4],bx	;ws
	*** 0000f2	8c 46 fe 		mov	WORD PTR [bp-2],es
	*** 0000f5	26 89 07 		mov	WORD PTR es:[bx],ax
	*** 0000f8	26 89 57 02 		mov	WORD PTR es:[bx+2],dx
; Line 220
					$I1210:
; Line 221
	*** 0000fc	8b 46 06 		mov	ax,WORD PTR [bp+6]	;iorb
	*** 0000ff	8b 56 08 		mov	dx,WORD PTR [bp+8]
	*** 000102	8b 5e 04 		mov	bx,WORD PTR [bp+4]	;device
	*** 000105	89 87 69 01 		mov	WORD PTR [bx+361],ax
	*** 000109	89 97 6b 01 		mov	WORD PTR [bx+363],dx
; Line 222
	*** 00010d	9d 			popf	
; Line 224
	*** 00010e	5f 			pop	di
	*** 00010f	c9 			leave	
	*** 000110	c3 			ret	
	*** 000111	90 			nop	

QueueIorb	ENDP

YankQueue	PROC NEAR
; Line 253
	*** 000112	c8 0c 00 00 		enter	12,0
	*** 000116	57 			push	di
	*** 000117	56 			push	si
;	iorb = -4
;	device = 4
; Line 257
	*** 000118	9c 			pushf	
; Line 258
					$L1331:
	*** 000119	fa 			cli	
; Line 259
	*** 00011a	8b 5e 04 		mov	bx,WORD PTR [bp+4]	;device
	*** 00011d	8b 87 65 01 		mov	ax,WORD PTR [bx+357]
	*** 000121	8b 97 67 01 		mov	dx,WORD PTR [bx+359]
	*** 000125	89 46 fc 		mov	WORD PTR [bp-4],ax	;iorb
	*** 000128	89 56 fe 		mov	WORD PTR [bp-2],dx
	*** 00012b	8b c8 			mov	cx,ax
	*** 00012d	8b f2 			mov	si,dx
	*** 00012f	0b d0 			or	dx,ax
	*** 000131	75 03 			jne	$JCC305
	*** 000133	e9 96 00 		jmp	$FB1219
					$JCC305:
; Line 260
;	ws = -8
;	p = -12
; Line 267
	*** 000136	bf 34 00 		mov	di,52	;0034H
	*** 000139	03 f9 			add	di,cx
	*** 00013b	8e c6 			mov	es,si
	*** 00013d	89 7e f8 		mov	WORD PTR [bp-8],di	;ws
	*** 000140	8c 46 fa 		mov	WORD PTR [bp-6],es
	*** 000143	26 8b 05 		mov	ax,WORD PTR es:[di]
	*** 000146	26 8b 55 02 		mov	dx,WORD PTR es:[di+2]
	*** 00014a	89 87 65 01 		mov	WORD PTR [bx+357],ax
	*** 00014e	89 97 67 01 		mov	WORD PTR [bx+359],dx
	*** 000152	0b d0 			or	dx,ax
	*** 000154	75 0a 			jne	$I1222
; Line 268
	*** 000156	2b c0 			sub	ax,ax
	*** 000158	89 87 6b 01 		mov	WORD PTR [bx+363],ax
	*** 00015c	89 87 69 01 		mov	WORD PTR [bx+361],ax
; Line 269
					$I1222:
	*** 000160	c4 5e f8 		les	bx,DWORD PTR [bp-8]	;ws
	*** 000163	2b c0 			sub	ax,ax
	*** 000165	26 89 47 02 		mov	WORD PTR es:[bx+2],ax
	*** 000169	26 89 07 		mov	WORD PTR es:[bx],ax
; Line 275
	*** 00016c	8b 46 fc 		mov	ax,WORD PTR [bp-4]	;iorb
	*** 00016f	8b 56 fe 		mov	dx,WORD PTR [bp-2]
					$L1332:
	*** 000172	89 46 f4 		mov	WORD PTR [bp-12],ax	;p
	*** 000175	89 56 f6 		mov	WORD PTR [bp-10],dx
	*** 000178	eb 08 			jmp	SHORT $L1327
					$L1326:
	*** 00017a	2b c0 			sub	ax,ax
	*** 00017c	89 46 f6 		mov	WORD PTR [bp-10],ax
	*** 00017f	89 46 f4 		mov	WORD PTR [bp-12],ax	;p
					$L1327:
	*** 000182	8b 46 f6 		mov	ax,WORD PTR [bp-10]
	*** 000185	0b 46 f4 		or	ax,WORD PTR [bp-12]	;p
	*** 000188	74 22 			je	$FB1225
; Line 276
	*** 00018a	8b 5e 04 		mov	bx,WORD PTR [bp+4]	;device
	*** 00018d	8b 87 88 00 		mov	ax,WORD PTR [bx+136]
	*** 000191	c4 5e f4 		les	bx,DWORD PTR [bp-12]	;p
	*** 000194	26 89 47 02 		mov	WORD PTR es:[bx+2],ax
	*** 000198	c4 5e f4 		les	bx,DWORD PTR [bp-12]	;p
	*** 00019b	26 f6 47 08 02 		test	BYTE PTR es:[bx+8],2
	*** 0001a0	74 d8 			je	$L1326
	*** 0001a2	26 8b 47 18 		mov	ax,WORD PTR es:[bx+24]
	*** 0001a6	26 8b 57 1a 		mov	dx,WORD PTR es:[bx+26]
	*** 0001aa	eb c6 			jmp	SHORT $L1332
					$FB1225:
; Line 277
	*** 0001ac	8b 5e 04 		mov	bx,WORD PTR [bp+4]	;device
	*** 0001af	c7 47 02 00 00 		mov	WORD PTR [bx+2],0
; Line 279
	*** 0001b4	ff 76 fe 		push	WORD PTR [bp-2]
	*** 0001b7	ff 76 fc 		push	WORD PTR [bp-4]	;iorb
	*** 0001ba	ff b7 86 00 		push	WORD PTR [bx+134]
	*** 0001be	ff b7 84 00 		push	WORD PTR [bx+132]
	*** 0001c2	e8 00 00 		call	_CallADD
	*** 0001c5	83 c4 08 		add	sp,8
	*** 0001c8	e9 4e ff 		jmp	$L1331
	*** 0001cb	90 			nop	
					$FB1219:
; Line 283
	*** 0001cc	9d 			popf	
; Line 286
	*** 0001cd	5e 			pop	si
	*** 0001ce	5f 			pop	di
	*** 0001cf	c9 			leave	
	*** 0001d0	c3 			ret	
	*** 0001d1	90 			nop	

YankQueue	ENDP

APMSuspend	PROC NEAR
; Line 318
; Line 320
	*** 0001d2	c6 06 00 00 01 		mov	BYTE PTR _fAPMSuspended,1
; Line 335
	*** 0001d7	33 c0 			xor	ax,ax
; Line 336
	*** 0001d9	c3 			ret	

APMSuspend	ENDP

APMResume	PROC NEAR
; Line 362
; Line 365
	*** 0001da	33 c0 			xor	ax,ax
	*** 0001dc	a2 00 00 		mov	BYTE PTR _fAPMSuspended,al
; Line 367
	*** 0001df	c3 			ret	

APMResume	ENDP

StartComplete	PROC FAR
; Line 396
	*** 0001e0	c8 0a 00 00 		enter	10,0
	*** 0001e4	57 			push	di
	*** 0001e5	56 			push	si
	*** 0001e6	1e 			push	ds
	*** 0001e7	b8 00 00 		mov	ax,DGROUP
	*** 0001ea	8e d8 			mov	ds,ax
	ASSUME DS: DGROUP
;	device = -2
;	ioadp = -6
;	iorb = 6
; Line 397
	*** 0001ec	c4 5e 06 		les	bx,DWORD PTR [bp+6]	;iorb
	*** 0001ef	26 8b 47 20 		mov	ax,WORD PTR es:[bx+32]
	*** 0001f3	89 46 fe 		mov	WORD PTR [bp-2],ax	;device
; Line 398
	*** 0001f6	89 5e fa 		mov	WORD PTR [bp-6],bx	;ioadp
	*** 0001f9	8c 46 fc 		mov	WORD PTR [bp-4],es
; Line 402
	*** 0001fc	26 c4 77 50 		les	si,DWORD PTR es:[bx+80]
	*** 000200	26 80 3c 1b 		cmp	BYTE PTR es:[si],27	;001bH
	*** 000204	74 03 			je	$JCC516
	*** 000206	e9 c3 00 		jmp	$I1236
					$JCC516:
; Line 403
; Line 406
	*** 000209	8b d8 			mov	bx,ax
	*** 00020b	c7 87 b6 00 04 00 	mov	WORD PTR [bx+182],4
; Line 407
	*** 000211	c4 5e 06 		les	bx,DWORD PTR [bp+6]	;iorb
	*** 000214	26 8b 47 0a 		mov	ax,WORD PTR es:[bx+10]
	*** 000218	8b 76 fe 		mov	si,WORD PTR [bp-2]	;device
	*** 00021b	89 84 b8 00 		mov	WORD PTR [si+184],ax
; Line 408
	*** 00021f	26 8b 47 0c 		mov	ax,WORD PTR es:[bx+12]
	*** 000223	89 84 ba 00 		mov	WORD PTR [si+186],ax
; Line 411
; Line 413
; Line 418
	*** 000227	33 c0 			xor	ax,ax
	*** 000229	8b 56 fe 		mov	dx,WORD PTR [bp-2]	;device
	*** 00022c	81 c2 d3 00 		add	dx,211	;00d3H
	*** 000230	b9 12 00 		mov	cx,18	;0012H
	*** 000233	8b fa 			mov	di,dx
	*** 000235	1e 			push	ds
	*** 000236	07 			pop	es
	*** 000237	f3 			rep
	*** 000238	aa 			stosb
; Line 419
	*** 000239	8b 5e fe 		mov	bx,WORD PTR [bp-2]	;device
	*** 00023c	81 c3 bc 00 		add	bx,188	;00bcH
	*** 000240	b9 17 00 		mov	cx,23	;0017H
	*** 000243	8b fb 			mov	di,bx
	*** 000245	f3 			rep
	*** 000246	aa 			stosb
; Line 420
	*** 000247	8b 76 fe 		mov	si,WORD PTR [bp-2]	;device
	*** 00024a	c7 84 cd 00 12 00 	mov	WORD PTR [si+205],18	;0012H
; Line 421
	*** 000250	89 94 cf 00 		mov	WORD PTR [si+207],dx
	*** 000254	8c 9c d1 00 		mov	WORD PTR [si+209],ds
; Line 423
	*** 000258	b9 80 00 		mov	cx,128	;0080H
	*** 00025b	c4 7e fa 		les	di,DWORD PTR [bp-6]	;ioadp
	*** 00025e	f3 			rep
	*** 00025f	aa 			stosb
; Line 424
	*** 000260	8b 7e fa 		mov	di,WORD PTR [bp-6]	;ioadp
	*** 000263	26 c7 05 5a 00 		mov	WORD PTR es:[di],90	;005aH
; Line 425
	*** 000268	8b 84 88 00 		mov	ax,WORD PTR [si+136]
	*** 00026c	26 89 45 02 		mov	WORD PTR es:[di+2],ax
; Line 426
	*** 000270	26 c7 45 04 08 00 	mov	WORD PTR es:[di+4],8
; Line 427
	*** 000276	26 c7 45 06 02 00 	mov	WORD PTR es:[di+6],2
; Line 428
	*** 00027c	26 c7 45 08 09 00 	mov	WORD PTR es:[di+8],9
; Line 429
	*** 000282	26 c7 45 1c 00 00 	mov	WORD PTR es:[di+28],OFFSET StartComplete
	*** 000288	26 c7 45 1e 00 00 	mov	WORD PTR es:[di+30],SEG StartComplete
; Line 431
	*** 00028e	26 c7 45 12 17 00 	mov	WORD PTR es:[di+18],23	;0017H
; Line 432
	*** 000294	26 89 5d 14 		mov	WORD PTR es:[di+20],bx
; Line 434
	*** 000298	8d 84 b0 00 		lea	ax,WORD PTR [si+176]
	*** 00029c	26 89 45 50 		mov	WORD PTR es:[di+80],ax
	*** 0002a0	26 8c 5d 52 		mov	WORD PTR es:[di+82],ds
; Line 435
	*** 0002a4	26 c7 45 4e 06 00 	mov	WORD PTR es:[di+78],6
; Line 437
	*** 0002aa	26 89 75 20 		mov	WORD PTR es:[di+32],si
; Line 439
;	p = -10
; Line 440
	*** 0002ae	89 7e f6 		mov	WORD PTR [bp-10],di	;p
	*** 0002b1	8c 46 f8 		mov	WORD PTR [bp-8],es
; Line 442
	*** 0002b4	ff 76 f8 		push	WORD PTR [bp-8]
	*** 0002b7	ff 76 f6 		push	WORD PTR [bp-10]	;p
	*** 0002ba	ff b4 86 00 		push	WORD PTR [si+134]
	*** 0002be	ff b4 84 00 		push	WORD PTR [si+132]
	*** 0002c2	e8 00 00 		call	_CallADD
	*** 0002c5	83 c4 08 		add	sp,8
; Line 443
; Line 447
; Line 448
	*** 0002c8	eb 7f 			jmp	SHORT $I1244
	*** 0002ca	90 			nop	
	*** 0002cb	90 			nop	
					$I1236:
; Line 449
; Line 452
	*** 0002cc	8b d8 			mov	bx,ax
	*** 0002ce	c7 87 b6 00 07 00 	mov	WORD PTR [bx+182],7
; Line 453
	*** 0002d4	c4 76 fa 		les	si,DWORD PTR [bp-6]	;ioadp
	*** 0002d7	26 8b 44 0a 		mov	ax,WORD PTR es:[si+10]
	*** 0002db	89 87 b8 00 		mov	WORD PTR [bx+184],ax
; Line 454
	*** 0002df	26 8b 44 0c 		mov	ax,WORD PTR es:[si+12]
	*** 0002e3	89 87 ba 00 		mov	WORD PTR [bx+186],ax
; Line 456
	*** 0002e7	26 f6 44 0a 02 		test	BYTE PTR es:[si+10],2
	*** 0002ec	74 3c 			je	$I1240
; Line 457
; Line 463
	*** 0002ee	68 b8 01 		push	440	;01b8H
	*** 0002f1	68 f4 01 		push	500	;01f4H
	*** 0002f4	9a 00 00 00 00 		call	FAR PTR DEVHELP_BEEP
; Line 464
	*** 0002f9	68 2c 01 		push	300	;012cH
	*** 0002fc	68 e8 03 		push	1000	;03e8H
	*** 0002ff	9a 00 00 00 00 		call	FAR PTR DEVHELP_BEEP
; Line 466
	*** 000304	ff 76 fe 		push	WORD PTR [bp-2]	;device
	*** 000307	e8 1a fd 		call	FreeIorb
	*** 00030a	83 c4 02 		add	sp,2
; Line 467
	*** 00030d	f6 06 01 00 01 		test	BYTE PTR _fDriverFlags+1,1
	*** 000312	74 0d 			je	$L1333
; Line 468
; Line 473
	*** 000314	ff 76 fe 		push	WORD PTR [bp-2]	;device
	*** 000317	e8 00 00 		call	_IssueStart
	*** 00031a	83 c4 02 		add	sp,2
	*** 00031d	0b c0 			or	ax,ax
	*** 00031f	74 28 			je	$I1244
; Line 474
					$L1333:
	*** 000321	8b 5e fe 		mov	bx,WORD PTR [bp-2]	;device
	*** 000324	80 27 fb 		and	BYTE PTR [bx],251	;00fbH
; Line 475
; Line 476
	*** 000327	eb 20 			jmp	SHORT $I1244
	*** 000329	90 			nop	
					$I1240:
; Line 480
; Line 486
	*** 00032a	8b 5e fe 		mov	bx,WORD PTR [bp-2]	;device
	*** 00032d	c7 47 02 00 00 		mov	WORD PTR [bx+2],0
; Line 487
	*** 000332	80 27 fd 		and	BYTE PTR [bx],253	;00fdH
; Line 488
	*** 000335	53 			push	bx
	*** 000336	e8 eb fc 		call	FreeIorb
	*** 000339	83 c4 02 		add	sp,2
; Line 489
	*** 00033c	8b 5e fe 		mov	bx,WORD PTR [bp-2]	;device
	*** 00033f	80 27 fb 		and	BYTE PTR [bx],251	;00fbH
; Line 490
	*** 000342	53 			push	bx
	*** 000343	e8 cc fd 		call	YankQueue
	*** 000346	83 c4 02 		add	sp,2
; Line 491
					$I1244:
; Line 492
; Line 496
	*** 000349	1f 			pop	ds
	*** 00034a	5e 			pop	si
	*** 00034b	5f 			pop	di
	*** 00034c	c9 			leave	
	*** 00034d	cb 			ret	

StartComplete	ENDP
	PUBLIC	_IssueStart
_IssueStart	PROC NEAR
; Line 528
	*** 00034e	c8 02 00 00 		enter	2,0
	*** 000352	57 			push	di
	*** 000353	56 			push	si
;	ioadp = -2
;	device = 4
; Line 532
	*** 000354	ff 76 04 		push	WORD PTR [bp+4]	;device
	*** 000357	e8 a6 fc 		call	AllocateIorb
	*** 00035a	83 c4 02 		add	sp,2
	*** 00035d	89 46 fe 		mov	WORD PTR [bp-2],ax	;ioadp
	*** 000360	0b c0 			or	ax,ax
	*** 000362	75 06 			jne	$I1249
; Line 533
; Line 535
	*** 000364	b8 ff ff 		mov	ax,-1	;ffffH
	*** 000367	e9 93 00 		jmp	$EX1247
; Line 536
; Line 538
					$I1249:
	*** 00036a	8b 5e 04 		mov	bx,WORD PTR [bp+4]	;device
	*** 00036d	80 0f 04 		or	BYTE PTR [bx],4
; Line 540
	*** 000370	33 c0 			xor	ax,ax
	*** 000372	8d 97 d3 00 		lea	dx,WORD PTR [bx+211]
	*** 000376	b9 12 00 		mov	cx,18	;0012H
	*** 000379	8b fa 			mov	di,dx
	*** 00037b	1e 			push	ds
	*** 00037c	07 			pop	es
	*** 00037d	f3 			rep
	*** 00037e	aa 			stosb
; Line 541
	*** 00037f	8d b7 bc 00 		lea	si,WORD PTR [bx+188]
	*** 000383	b9 17 00 		mov	cx,23	;0017H
	*** 000386	8b fe 			mov	di,si
	*** 000388	f3 			rep
	*** 000389	aa 			stosb
; Line 542
	*** 00038a	c7 87 cd 00 12 00 	mov	WORD PTR [bx+205],18	;0012H
; Line 543
	*** 000390	89 97 cf 00 		mov	WORD PTR [bx+207],dx
	*** 000394	8c 9f d1 00 		mov	WORD PTR [bx+209],ds
; Line 545
	*** 000398	b9 80 00 		mov	cx,128	;0080H
	*** 00039b	8b 7e fe 		mov	di,WORD PTR [bp-2]	;ioadp
	*** 00039e	f3 			rep
	*** 00039f	aa 			stosb
; Line 546
	*** 0003a0	8b 7e fe 		mov	di,WORD PTR [bp-2]	;ioadp
	*** 0003a3	c7 05 5a 00 		mov	WORD PTR [di],90	;005aH
; Line 547
	*** 0003a7	8b 87 88 00 		mov	ax,WORD PTR [bx+136]
	*** 0003ab	89 45 02 		mov	WORD PTR [di+2],ax
; Line 548
	*** 0003ae	c7 45 04 08 00 		mov	WORD PTR [di+4],8
; Line 549
	*** 0003b3	c7 45 06 02 00 		mov	WORD PTR [di+6],2
; Line 550
	*** 0003b8	c7 45 0e 1e 00 		mov	WORD PTR [di+14],30	;001eH
	*** 0003bd	c7 45 10 00 00 		mov	WORD PTR [di+16],0
; Line 551
	*** 0003c2	c7 45 08 09 00 		mov	WORD PTR [di+8],9
; Line 552
	*** 0003c7	c7 45 1c 00 00 		mov	WORD PTR [di+28],OFFSET StartComplete
	*** 0003cc	c7 45 1e 00 00 		mov	WORD PTR [di+30],SEG StartComplete
; Line 554
	*** 0003d1	c7 45 12 17 00 		mov	WORD PTR [di+18],23	;0017H
; Line 555
	*** 0003d6	89 75 14 		mov	WORD PTR [di+20],si
; Line 557
	*** 0003d9	8d 87 aa 00 		lea	ax,WORD PTR [bx+170]
	*** 0003dd	89 45 50 		mov	WORD PTR [di+80],ax
	*** 0003e0	8c 5d 52 		mov	WORD PTR [di+82],ds
; Line 558
	*** 0003e3	c7 45 4e 06 00 		mov	WORD PTR [di+78],6
; Line 565
	*** 0003e8	89 5d 20 		mov	WORD PTR [di+32],bx
; Line 567
	*** 0003eb	1e 			push	ds
	*** 0003ec	57 			push	di
	*** 0003ed	ff b7 86 00 		push	WORD PTR [bx+134]
	*** 0003f1	ff b7 84 00 		push	WORD PTR [bx+132]
	*** 0003f5	e8 00 00 		call	_CallADD
	*** 0003f8	83 c4 08 		add	sp,8
; Line 570
	*** 0003fb	33 c0 			xor	ax,ax
; Line 571
					$EX1247:
	*** 0003fd	5e 			pop	si
	*** 0003fe	5f 			pop	di
	*** 0003ff	c9 			leave	
	*** 000400	c3 			ret	
	*** 000401	90 			nop	

_IssueStart	ENDP
	PUBLIC	_APMEventHandler
_APMEventHandler	PROC FAR
; Line 593
	*** 000402	60 			pusha	
	*** 000403	1e 			push	ds
	*** 000404	06 			push	es
	*** 000405	8b ec 			mov	bp,sp
;	event = 24
;	register bx = SubId
;	pwrstate = -4
	*** 000407	8b 76 18 		mov	si,WORD PTR [bp+24]	;event
; Line 598
	*** 00040a	8e 46 1a 		mov	es,WORD PTR [bp+26]
	*** 00040d	26 8b 5c 02 		mov	bx,WORD PTR es:[si+2]
	*** 000411	83 fb 06 		cmp	bx,6
	*** 000414	75 12 			jne	$I1254
; Line 602
	*** 000416	26 8b 44 08 		mov	ax,WORD PTR es:[si+8]
; Line 613
	*** 00041a	0b c0 			or	ax,ax
	*** 00041c	74 18 			je	$I1265
	*** 00041e	48 			dec	ax
	*** 00041f	48 			dec	ax
	*** 000420	75 10 			jne	$I1263
; Line 605
	*** 000422	e8 ad fd 		call	APMSuspend
	*** 000425	eb 12 			jmp	SHORT $EX1252
	*** 000427	90 			nop	
; Line 615
					$I1254:
; Line 617
	*** 000428	83 fb 08 		cmp	bx,8
	*** 00042b	74 09 			je	$I1265
	*** 00042d	83 fb 09 		cmp	bx,9
	*** 000430	74 04 			je	$I1265
; Line 621
					$I1263:
	*** 000432	33 c0 			xor	ax,ax
	*** 000434	eb 03 			jmp	SHORT $EX1252
; Line 617
					$I1265:
; Line 619
	*** 000436	e8 a1 fd 		call	APMResume
; Line 622
					$EX1252:
	*** 000439	89 46 12 		mov	WORD PTR [bp+18],ax
	*** 00043c	8b e5 			mov	sp,bp
	*** 00043e	07 			pop	es
	*** 00043f	1f 			pop	ds
	ASSUME DS: DGROUP
	*** 000440	61 			popa	
	*** 000441	cb 			ret	

_APMEventHandler	ENDP
	PUBLIC	_FilterFunction
_FilterFunction	PROC FAR
; Line 652
	*** 000442	60 			pusha	
	*** 000443	1e 			push	ds
	*** 000444	06 			push	es
	*** 000445	8b ec 			mov	bp,sp
	*** 000447	83 ec 0a 		sub	sp,10	;000aH
	*** 00044a	b8 00 00 		mov	ax,DGROUP
	*** 00044d	8e d8 			mov	ds,ax
	ASSUME DS: DGROUP
;	device = -2
;	iorb = 24
; Line 653
	*** 00044f	c7 46 fe 00 00 		mov	WORD PTR [bp-2],0	;device
; Line 658
	*** 000454	80 3e 00 00 00 		cmp	BYTE PTR _fAPMSuspended,0
	*** 000459	74 0b 			je	$I1270
; Line 659
; Line 660
	*** 00045b	68 dc 00 		push	220	;00dcH
	*** 00045e	68 d0 07 		push	2000	;07d0H
	*** 000461	9a 00 00 00 00 		call	FAR PTR DEVHELP_BEEP
; Line 666
; Line 672
					$I1270:
	*** 000466	c4 5e 18 		les	bx,DWORD PTR [bp+24]	;iorb
	*** 000469	26 83 7f 04 01 		cmp	WORD PTR es:[bx+4],1
	*** 00046e	75 52 			jne	$I1271
; Line 673
;	p = -6
; Line 674
	*** 000470	89 5e fa 		mov	WORD PTR [bp-6],bx	;p
	*** 000473	8c 46 fc 		mov	WORD PTR [bp-4],es
; Line 677
	*** 000476	26 8b 47 06 		mov	ax,WORD PTR es:[bx+6]
	*** 00047a	48 			dec	ax
	*** 00047b	74 05 			je	$SC1277
; Line 689
	*** 00047d	68 01 01 		push	257	;0101H
	*** 000480	eb 31 			jmp	SHORT $L1337
; Line 678
; Line 679
					$SC1277:
; Line 681
	*** 000482	26 c4 77 44 		les	si,DWORD PTR es:[bx+68]
	*** 000486	26 c6 04 01 		mov	BYTE PTR es:[si],1
; Line 682
	*** 00048a	c4 5e 18 		les	bx,DWORD PTR [bp+24]	;iorb
	*** 00048d	26 c4 77 44 		les	si,DWORD PTR es:[bx+68]
	*** 000491	26 c6 44 01 00 		mov	BYTE PTR es:[si+1],0
; Line 683
	*** 000496	a1 00 00 		mov	ax,WORD PTR _hdThisDriver
	*** 000499	c4 5e 18 		les	bx,DWORD PTR [bp+24]	;iorb
	*** 00049c	26 c4 77 44 		les	si,DWORD PTR es:[bx+68]
	*** 0004a0	26 89 44 02 		mov	WORD PTR es:[si+2],ax
; Line 684
	*** 0004a4	c4 5e 18 		les	bx,DWORD PTR [bp+24]	;iorb
	*** 0004a7	26 c4 77 44 		les	si,DWORD PTR es:[bx+68]
	*** 0004ab	26 c7 44 04 00 00 	mov	WORD PTR es:[si+4],0
; Line 685
	*** 0004b1	6a 00 			push	0
					$L1337:
	*** 0004b3	ff 76 1a 		push	WORD PTR [bp+26]
	*** 0004b6	ff 76 18 		push	WORD PTR [bp+24]	;iorb
	*** 0004b9	e8 74 fb 		call	NotifyIorb
	*** 0004bc	83 c4 06 		add	sp,6
; Line 692
	*** 0004bf	e9 34 01 		jmp	$EX1268
; Line 688
					$I1271:
;	i = -6
; Line 702
	*** 0004c2	c7 46 fa 00 00 		mov	WORD PTR [bp-6],0	;p
	*** 0004c7	eb 10 			jmp	SHORT $F1280
	*** 0004c9	90 			nop	
					$I1283:
	*** 0004ca	8b 5e fa 		mov	bx,WORD PTR [bp-6]	;p
	*** 0004cd	d1 e3 			shl	bx,1
	*** 0004cf	83 bf 00 00 00 		cmp	WORD PTR _anpUnit[bx],0
	*** 0004d4	74 1e 			je	$FB1282
; Line 711
	*** 0004d6	ff 46 fa 		inc	WORD PTR [bp-6]	;p
					$F1280:
	*** 0004d9	83 7e fa 18 		cmp	WORD PTR [bp-6],24	;0018H	;p
	*** 0004dd	7d 15 			jge	$FB1282
; Line 703
; Line 704
	*** 0004df	8b 5e 18 		mov	bx,WORD PTR [bp+24]	;iorb
	*** 0004e2	26 8b 47 02 		mov	ax,WORD PTR es:[bx+2]
	*** 0004e6	8b 5e fa 		mov	bx,WORD PTR [bp-6]	;p
	*** 0004e9	d1 e3 			shl	bx,1
	*** 0004eb	39 87 00 00 		cmp	WORD PTR _anpUnit[bx],ax
	*** 0004ef	75 d9 			jne	$I1283
; Line 705
; Line 706
	*** 0004f1	89 46 fe 		mov	WORD PTR [bp-2],ax	;device
; Line 707
					$FB1282:
; Line 712
; Line 713
	*** 0004f4	83 7e fe 00 		cmp	WORD PTR [bp-2],0	;device
	*** 0004f8	75 06 			jne	$I1286
; Line 714
; Line 715
	*** 0004fa	68 01 02 		push	513	;0201H
	*** 0004fd	eb b4 			jmp	SHORT $L1337
; Line 717
	*** 0004ff	90 			nop	
; Line 723
					$I1286:
	*** 000500	9c 			pushf	
; Line 724
	*** 000501	fa 			cli	
; Line 725
	*** 000502	8b 5e fe 		mov	bx,WORD PTR [bp-2]	;device
	*** 000505	f6 07 04 		test	BYTE PTR [bx],4
	*** 000508	74 12 			je	$I1287
; Line 726
; Line 727
	*** 00050a	ff 76 1a 		push	WORD PTR [bp+26]
	*** 00050d	ff 76 18 		push	WORD PTR [bp+24]	;iorb
	*** 000510	53 			push	bx
	*** 000511	e8 9c fb 		call	QueueIorb
	*** 000514	83 c4 06 		add	sp,6
; Line 728
					$L1336:
	*** 000517	9d 			popf	
; Line 729
	*** 000518	e9 db 00 		jmp	$EX1268
; Line 730
	*** 00051b	90 			nop	
; Line 737
					$I1287:
;	restart = -6
;	p = -10
; Line 741
	*** 00051c	c4 5e 18 		les	bx,DWORD PTR [bp+24]	;iorb
	*** 00051f	26 8b 47 04 		mov	ax,WORD PTR es:[bx+4]
	*** 000523	2d 02 00 		sub	ax,2
	*** 000526	72 0c 			jb	$SD1295
	*** 000528	2d 01 00 		sub	ax,1
	*** 00052b	77 07 			ja	$SD1295
; Line 742
; Line 745
	*** 00052d	c7 46 fa 00 00 		mov	WORD PTR [bp-6],0	;p
; Line 746
	*** 000532	eb 05 			jmp	SHORT $SB1291
; Line 748
					$SD1295:
; Line 749
	*** 000534	c7 46 fa 01 00 		mov	WORD PTR [bp-6],1	;p
; Line 750
					$SB1291:
; Line 753
	*** 000539	83 7e fa 00 		cmp	WORD PTR [bp-6],0	;p
	*** 00053d	74 43 			je	$I1296
	*** 00053f	8b 5e fe 		mov	bx,WORD PTR [bp-2]	;device
	*** 000542	f6 07 02 		test	BYTE PTR [bx],2
	*** 000545	74 3b 			je	$I1296
; Line 754
; Line 755
	*** 000547	80 0f 04 		or	BYTE PTR [bx],4
; Line 756
	*** 00054a	8b 46 18 		mov	ax,WORD PTR [bp+24]	;iorb
	*** 00054d	8b 56 1a 		mov	dx,WORD PTR [bp+26]
	*** 000550	8e c2 			mov	es,dx
	*** 000552	8b f0 			mov	si,ax
	*** 000554	26 8b 0c 		mov	cx,WORD PTR es:[si]
	*** 000557	56 			push	si
	*** 000558	06 			push	es
	*** 000559	1e 			push	ds
	*** 00055a	8d 7f 04 		lea	di,WORD PTR [bx+4]
	*** 00055d	8b f0 			mov	si,ax
	*** 00055f	1e 			push	ds
	*** 000560	07 			pop	es
	*** 000561	8e da 			mov	ds,dx
	ASSUME DS: NOTHING
	*** 000563	d1 e9 			shr	cx,1
	*** 000565	f3 			rep
	*** 000566	a5 			movsw
	*** 000567	13 c9 			adc	cx,cx
	*** 000569	f3 			rep
	*** 00056a	a4 			movsb
	*** 00056b	1f 			pop	ds
	ASSUME DS: DGROUP
	*** 00056c	07 			pop	es
	*** 00056d	5e 			pop	si
; Line 757
	*** 00056e	52 			push	dx
	*** 00056f	50 			push	ax
	*** 000570	53 			push	bx
	*** 000571	e8 3c fb 		call	QueueIorb
	*** 000574	83 c4 06 		add	sp,6
; Line 758
	*** 000577	ff 76 fe 		push	WORD PTR [bp-2]	;device
	*** 00057a	e8 d1 fd 		call	_IssueStart
	*** 00057d	83 c4 02 		add	sp,2
	*** 000580	eb 95 			jmp	SHORT $L1336
; Line 761
; Line 768
					$I1296:
; Line 770
	*** 000582	8b 46 18 		mov	ax,WORD PTR [bp+24]	;iorb
	*** 000585	8c c2 			mov	dx,es
					$L1338:
	*** 000587	89 46 f6 		mov	WORD PTR [bp-10],ax	;p
	*** 00058a	89 56 f8 		mov	WORD PTR [bp-8],dx
	*** 00058d	eb 09 			jmp	SHORT $L1329
	*** 00058f	90 			nop	
					$L1328:
	*** 000590	2b c0 			sub	ax,ax
	*** 000592	89 46 f8 		mov	WORD PTR [bp-8],ax
	*** 000595	89 46 f6 		mov	WORD PTR [bp-10],ax	;p
					$L1329:
	*** 000598	8b 46 f8 		mov	ax,WORD PTR [bp-8]
	*** 00059b	0b 46 f6 		or	ax,WORD PTR [bp-10]	;p
	*** 00059e	74 22 			je	$FB1299
; Line 771
	*** 0005a0	8b 5e fe 		mov	bx,WORD PTR [bp-2]	;device
	*** 0005a3	8b 87 88 00 		mov	ax,WORD PTR [bx+136]
	*** 0005a7	c4 5e f6 		les	bx,DWORD PTR [bp-10]	;p
	*** 0005aa	26 89 47 02 		mov	WORD PTR es:[bx+2],ax
	*** 0005ae	c4 5e f6 		les	bx,DWORD PTR [bp-10]	;p
	*** 0005b1	26 f6 47 08 02 		test	BYTE PTR es:[bx+8],2
	*** 0005b6	74 d8 			je	$L1328
	*** 0005b8	26 8b 47 18 		mov	ax,WORD PTR es:[bx+24]
	*** 0005bc	26 8b 57 1a 		mov	dx,WORD PTR es:[bx+26]
	*** 0005c0	eb c5 			jmp	SHORT $L1338
					$FB1299:
; Line 776
	*** 0005c2	83 7e fa 00 		cmp	WORD PTR [bp-6],0	;p
	*** 0005c6	74 08 			je	$I1300
; Line 777
	*** 0005c8	8b 5e fe 		mov	bx,WORD PTR [bp-2]	;device
	*** 0005cb	c7 47 02 00 00 		mov	WORD PTR [bx+2],0
; Line 778
					$I1300:
; Line 782
;	p = -10
; Line 783
	*** 0005d0	8b 46 18 		mov	ax,WORD PTR [bp+24]	;iorb
	*** 0005d3	8b 56 1a 		mov	dx,WORD PTR [bp+26]
	*** 0005d6	89 46 f6 		mov	WORD PTR [bp-10],ax	;p
	*** 0005d9	89 56 f8 		mov	WORD PTR [bp-8],dx
; Line 785
	*** 0005dc	ff 76 f8 		push	WORD PTR [bp-8]
	*** 0005df	ff 76 f6 		push	WORD PTR [bp-10]	;p
	*** 0005e2	8b 5e fe 		mov	bx,WORD PTR [bp-2]	;device
	*** 0005e5	ff b7 86 00 		push	WORD PTR [bx+134]
	*** 0005e9	ff b7 84 00 		push	WORD PTR [bx+132]
	*** 0005ed	e8 00 00 		call	_CallADD
	*** 0005f0	83 c4 08 		add	sp,8
	*** 0005f3	e9 21 ff 		jmp	$L1336
; Line 790
					$EX1268:
	*** 0005f6	89 46 12 		mov	WORD PTR [bp+18],ax
	*** 0005f9	8b e5 			mov	sp,bp
	*** 0005fb	07 			pop	es
	*** 0005fc	1f 			pop	ds
	ASSUME DS: DGROUP
	*** 0005fd	61 			popa	
	*** 0005fe	cb 			ret	
	*** 0005ff	90 			nop	

_FilterFunction	ENDP

StopComplete	PROC FAR
; Line 820
	*** 000600	60 			pusha	
	*** 000601	1e 			push	ds
	*** 000602	06 			push	es
	*** 000603	8b ec 			mov	bp,sp
	*** 000605	b8 00 00 		mov	ax,DGROUP
	*** 000608	8e d8 			mov	ds,ax
	ASSUME DS: DGROUP
;	iorb = 24
;	register si = device
	*** 00060a	8b 7e 18 		mov	di,WORD PTR [bp+24]	;iorb
; Line 825
	*** 00060d	8e 46 1a 		mov	es,WORD PTR [bp+26]
	*** 000610	26 8b 75 20 		mov	si,WORD PTR es:[di+32]
	*** 000614	c7 84 b6 00 05 00 	mov	WORD PTR [si+182],5
; Line 826
	*** 00061a	26 8b 45 0a 		mov	ax,WORD PTR es:[di+10]
	*** 00061e	89 84 b8 00 		mov	WORD PTR [si+184],ax
; Line 827
	*** 000622	26 8b 45 0c 		mov	ax,WORD PTR es:[di+12]
	*** 000626	89 84 ba 00 		mov	WORD PTR [si+186],ax
; Line 829
	*** 00062a	56 			push	si
	*** 00062b	e8 f6 f9 		call	FreeIorb
; Line 830
	*** 00062e	80 24 fb 		and	BYTE PTR [si],251	;00fbH
; Line 832
	*** 000631	89 46 12 		mov	WORD PTR [bp+18],ax
	*** 000634	8b e5 			mov	sp,bp
	*** 000636	07 			pop	es
	*** 000637	1f 			pop	ds
	ASSUME DS: DGROUP
	*** 000638	61 			popa	
	*** 000639	cb 			ret	

StopComplete	ENDP
	PUBLIC	_IssueStop
_IssueStop	PROC NEAR
; Line 857
	*** 00063a	c8 02 00 00 		enter	2,0
	*** 00063e	57 			push	di
	*** 00063f	56 			push	si
;	ioadp = -2
;	device = 4
; Line 858
	*** 000640	ff 76 04 		push	WORD PTR [bp+4]	;device
	*** 000643	e8 ba f9 		call	AllocateIorb
	*** 000646	83 c4 02 		add	sp,2
	*** 000649	89 46 fe 		mov	WORD PTR [bp-2],ax	;ioadp
; Line 863
	*** 00064c	8b 5e 04 		mov	bx,WORD PTR [bp+4]	;device
	*** 00064f	8b 87 a2 00 		mov	ax,WORD PTR [bx+162]
	*** 000653	89 47 02 		mov	WORD PTR [bx+2],ax
; Line 864
	*** 000656	32 c0 			xor	al,al
	*** 000658	88 47 05 		mov	BYTE PTR [bx+5],al
	*** 00065b	88 47 04 		mov	BYTE PTR [bx+4],al
; Line 870
	*** 00065e	83 7e fe 00 		cmp	WORD PTR [bp-2],0	;ioadp
	*** 000662	75 03 			jne	$JCC1634
	*** 000664	e9 84 00 		jmp	$EX1309
					$JCC1634:
; Line 871
; Line 873
	*** 000667	80 0f 06 		or	BYTE PTR [bx],6
; Line 875
	*** 00066a	33 c0 			xor	ax,ax
	*** 00066c	8d 97 d3 00 		lea	dx,WORD PTR [bx+211]
	*** 000670	b9 12 00 		mov	cx,18	;0012H
	*** 000673	8b fa 			mov	di,dx
	*** 000675	1e 			push	ds
	*** 000676	07 			pop	es
	*** 000677	f3 			rep
	*** 000678	aa 			stosb
; Line 876
	*** 000679	8d b7 bc 00 		lea	si,WORD PTR [bx+188]
	*** 00067d	b9 17 00 		mov	cx,23	;0017H
	*** 000680	8b fe 			mov	di,si
	*** 000682	f3 			rep
	*** 000683	aa 			stosb
; Line 877
	*** 000684	c7 87 cd 00 12 00 	mov	WORD PTR [bx+205],18	;0012H
; Line 878
	*** 00068a	89 97 cf 00 		mov	WORD PTR [bx+207],dx
	*** 00068e	8c 9f d1 00 		mov	WORD PTR [bx+209],ds
; Line 880
	*** 000692	b9 80 00 		mov	cx,128	;0080H
	*** 000695	8b 7e fe 		mov	di,WORD PTR [bp-2]	;ioadp
	*** 000698	f3 			rep
	*** 000699	aa 			stosb
; Line 881
	*** 00069a	8b 7e fe 		mov	di,WORD PTR [bp-2]	;ioadp
	*** 00069d	c7 05 5a 00 		mov	WORD PTR [di],90	;005aH
; Line 882
	*** 0006a1	8b 87 88 00 		mov	ax,WORD PTR [bx+136]
	*** 0006a5	89 45 02 		mov	WORD PTR [di+2],ax
; Line 883
	*** 0006a8	c7 45 04 08 00 		mov	WORD PTR [di+4],8
; Line 884
	*** 0006ad	c7 45 06 02 00 		mov	WORD PTR [di+6],2
; Line 885
	*** 0006b2	c7 45 08 09 00 		mov	WORD PTR [di+8],9
; Line 886
	*** 0006b7	c7 45 1c 00 00 		mov	WORD PTR [di+28],OFFSET StopComplete
	*** 0006bc	c7 45 1e 00 00 		mov	WORD PTR [di+30],SEG StopComplete
; Line 888
	*** 0006c1	c7 45 12 17 00 		mov	WORD PTR [di+18],23	;0017H
; Line 889
	*** 0006c6	89 75 14 		mov	WORD PTR [di+20],si
; Line 891
	*** 0006c9	8d 87 a4 00 		lea	ax,WORD PTR [bx+164]
	*** 0006cd	89 45 50 		mov	WORD PTR [di+80],ax
	*** 0006d0	8c 5d 52 		mov	WORD PTR [di+82],ds
; Line 892
	*** 0006d3	c7 45 4e 06 00 		mov	WORD PTR [di+78],6
; Line 899
	*** 0006d8	89 5d 20 		mov	WORD PTR [di+32],bx
; Line 901
	*** 0006db	1e 			push	ds
	*** 0006dc	57 			push	di
	*** 0006dd	ff b7 86 00 		push	WORD PTR [bx+134]
	*** 0006e1	ff b7 84 00 		push	WORD PTR [bx+132]
	*** 0006e5	e8 00 00 		call	_CallADD
	*** 0006e8	83 c4 08 		add	sp,8
; Line 902
; Line 905
					$EX1309:
	*** 0006eb	5e 			pop	si
	*** 0006ec	5f 			pop	di
	*** 0006ed	c9 			leave	
	*** 0006ee	c3 			ret	
	*** 0006ef	90 			nop	

_IssueStop	ENDP
	PUBLIC	_Timer
_Timer	PROC NEAR
; Line 935
	*** 0006f0	c8 04 00 00 		enter	4,0
;	i = -2
; Line 938
	*** 0006f4	83 06 00 00 01 		add	WORD PTR _ulTimer,1
	*** 0006f9	83 16 02 00 00 		adc	WORD PTR _ulTimer+2,0
; Line 942
	*** 0006fe	c7 46 fe 00 00 		mov	WORD PTR [bp-2],0	;i
	*** 000703	eb 38 			jmp	SHORT $F1315
	*** 000705	90 			nop	
					$FC1316:
; Line 943
;	dev = -4
; Line 946
	*** 000706	fa 			cli	
; Line 948
	*** 000707	8b 5e fe 		mov	bx,WORD PTR [bp-2]	;i
	*** 00070a	d1 e3 			shl	bx,1
	*** 00070c	8b 9f 00 00 		mov	bx,WORD PTR _anpUnit[bx]
	*** 000710	89 5e fc 		mov	WORD PTR [bp-4],bx	;dev
	*** 000713	f6 07 02 		test	BYTE PTR [bx],2
	*** 000716	75 21 			jne	$I1319
	*** 000718	83 bf a2 00 00 		cmp	WORD PTR [bx+162],0
	*** 00071d	74 1a 			je	$I1319
	*** 00071f	8b 47 02 		mov	ax,WORD PTR [bx+2]
	*** 000722	40 			inc	ax
	*** 000723	89 47 02 		mov	WORD PTR [bx+2],ax
	*** 000726	8b 5e fc 		mov	bx,WORD PTR [bp-4]	;dev
	*** 000729	8b 87 a2 00 		mov	ax,WORD PTR [bx+162]
	*** 00072d	39 47 02 		cmp	WORD PTR [bx+2],ax
	*** 000730	72 07 			jb	$I1319
; Line 949
; Line 950
	*** 000732	53 			push	bx
	*** 000733	e8 04 ff 		call	_IssueStop
	*** 000736	83 c4 02 		add	sp,2
; Line 951
; Line 952
					$I1319:
	*** 000739	fb 			sti	
; Line 953
	*** 00073a	ff 46 fe 		inc	WORD PTR [bp-2]	;i
					$F1315:
	*** 00073d	a1 00 00 		mov	ax,WORD PTR _cUnit
	*** 000740	39 46 fe 		cmp	WORD PTR [bp-2],ax	;i
	*** 000743	72 c1 			jb	$FC1316
; Line 956
	*** 000745	c9 			leave	
	*** 000746	c3 			ret	
	*** 000747	90 			nop	

_Timer	ENDP
_TEXT	ENDS
END
