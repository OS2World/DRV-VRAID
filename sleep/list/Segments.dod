Microsoft (R) Macro Assembler Version 6.00B 		    03/04/01 13:03:24
Segments.asm						     Page 1 - 1


				;*
				;* $Source: R:/source/driver/sleep/RCS/Segments.asm,v $
				;* $Revision: 1.6 $
				;* $Date: 1998/06/28 23:58:07 $
				;* $Locker:  $
				;*
				;* Assembler Helper to order segments
				;*
				;* $Log: Segments.asm,v $
				;* Revision 1.6  1998/06/28 23:58:07  vitus
				;* - implemented _CallADD()
				;*
				;* Revision 1.5  1997/12/05 01:50:02  vitus
				;* - moved segment declarations to include file segments.inc
				;*
				;* Revision 1.4  1997/05/07 23:45:53  vitus
				;* - moved CONST segment to front (behind DDHeader)
				;*
				;* Revision 1.3  1997/03/03 01:27:22  vitus
				;* Added SwapData
				;*
				;* Revision 1.2  1997/02/05 01:52:44  vitus
				;* Added more device header flags (not required)
				;*
				;* Revision 1.1  1996/09/27 03:26:56  vitus
				;* Initial revision
				;* ----------------------------------------
				;* This code is Copyright Vitus Jensen 1996
				;*
				.286c					; at least!

				INCLUDE devhdr.inc			; device header format
 = 0008			      C DEV_CBNAME	EQU	8 
			      C 
 001A			      C SysDev	STRUC
 0000  00000000		      C SDevNext	DD	?
 0004  0000		      C SDevAtt	DW	?
 0006  0000		      C SDevStrat	DW	?
 0008  0000		      C SDevInt	DW	?
 000A  0001 [		      C SDevName        DB      "        "
        20 20 20 20 20 20
        20 20
       ]
			      C 
 0012  0000		      C SDevProtCS	DW	?
 0014  0000		      C SDevProtDS	DW	?
 0016  0000		      C SDevRealCS	DW	?
 0018  0000		      C SDevRealDS	DW	?
			      C SysDev	ENDS
			      C 
			      C 
 001E			      C SysDev3	STRUC
 0000  001A [		      C SysDevBef3	DB	SIZE SysDev DUP (?)
        00
       ]
 001A  00000000		      C SDevCaps	DD	?
			      C SysDev3	ENDS
			      C 
 = 0001			      C DEV_IOCTL2	EQU	0001H  
 = 0002			      C DEV_16MB	EQU	0002H  
 = 0004			      C DEV_PARALLEL	EQU	0004H  
 = 0008			      C DEV_ADAPTER_DD	EQU	0008H  
 = 0010			      C DEV_INITCOMPLETE	EQU	0010H  
 = 0020			      C DEV_SAVERESTORE	EQU	0020H 
 = 0001			      C DEV_CIN	EQU	0001H   
 = 0002			      C DEV_COUT	EQU	0002H   
 = 0004			      C DEV_NULL	EQU	0004H   
 = 0008			      C DEV_CLOCK	EQU	0008H   
 = 0010			      C DEV_SPEC	EQU	0010H   
 = 0020			      C DEV_ADD_ON	EQU	0020H   
 = 0040			      C DEV_GIOCTL	EQU	0040H   
 = 0380			      C DEV_FCNLEV	EQU	0380H   
 = 0800			      C DEV_30	EQU	0800H   
 = 1000			      C DEV_SHARE	EQU	1000H   
 = 2000			      C DEV_NON_IBM	EQU	2000H   
 = 4000			      C DEV_IOCTL	EQU	4000H   
 = 8000			      C DEV_CHAR_DEV	EQU	8000H   
 = 0000			      C DEVLEV_0	EQU	0000H       
 = 0080			      C DEVLEV_1	EQU	0080H       
 = 0100			      C DEVLEV_2	EQU	0100H       
 = 0180			      C DEVLEV_3	EQU	0180H       
			      C Dev_FuncLev     macro   ReqLev, DevAttr
			      C         and     DevAttr,DEV_FCNLEV          
			      C         cmp     DevAttr,ReqLev              
			      C                                             
			      C endm
			      C 
			      C 
				INCLUDE segments.inc			; segment layout and order
			      C ; -*- mode: asm -*-
			      C ; $Source: R:/source/driver/sleep/RCS/segments.inc,v $
			      C ; $Revision: 1.3 $
			      C ; $Date: 1999/11/29 00:41:38 $
			      C ; $Locker:  $
			      C ;
			      C ;	Order segments
			      C ; 
			      C ; $Log: segments.inc,v $
			      C ; Revision 1.3  1999/11/29 00:41:38  vitus
			      C ; - added CONST2 to M$ C segments (unused but simplifies)
			      C ;
			      C ; Revision 1.2  1998/06/28 23:57:32  vitus
			      C ; - added SGROUP (swappable group)
			      C ;
			      C ; Revision 1.1  1997/12/05 02:04:02  vitus
			      C ; Initial revision
			      C ; -------------------------------------------
			      C ; This code is Copyright Vitus Jensen 1997-99
			      C 
			      C 
 0000			      C DDHeader	SEGMENT WORD PUBLIC 'CONST'
 0000			      C DDHeader	ENDS
			      C 
			      C IFNDEF WATCOMC
 0000			      C CONST		SEGMENT DWORD PUBLIC 'CONST'
 0000			      C CONST		ENDS
 0000			      C CONST2		SEGMENT DWORD PUBLIC 'CONST'
 0000			      C CONST2		ENDS
			      C ENDIF
			      C 
			      C IFDEF WATCOMC
			      C ENDIF
			      C 
 0000			      C LIBDATA		SEGMENT DWORD PUBLIC 'DATA'
 0000			      C LIBDATA		ENDS
			      C 
 0000			      C _DATA		SEGMENT WORD PUBLIC 'DATA'
 0000			      C _DATA		ENDS
			      C 
 0000			      C _BSS		SEGMENT WORD PUBLIC 'BSS'
 0000			      C _BSS		ENDS
			      C 
			      C 
 0000			      C _TEXT		SEGMENT DWORD PUBLIC 'CODE'
 0000			      C _TEXT		ENDS
			      C 
 0000			      C CODE		SEGMENT DWORD PUBLIC 'CODE'
 0000			      C CODE		ENDS
			      C 
 0000			      C LIBCODE		SEGMENT DWORD PUBLIC 'CODE'
 0000			      C LIBCODE		ENDS
			      C 
 0000			      C SwapData	SEGMENT DWORD PUBLIC 'FAR_DATA'
 0000			      C SwapData	ENDS
			      C 
 0000			      C SwapCode	SEGMENT DWORD PUBLIC 'SWAP_CODE'
 0000			      C SwapCode	ENDS
			      C 
			      C 	;; Group segments together
			      C 
			      C DGROUP		GROUP	CONST, CONST2, _BSS, DDHeader, LIBDATA, _DATA
			      C StaticGroup	GROUP	CODE, LIBCODE, _TEXT
			      C 
			      C SGROUP		GROUP	SwapData
			      C 


					PUBLIC	_AsmTimer		; so C-code can install it
					PUBLIC	_CallADD		; passes IORB to ADD


					;; The very first segment has to contain the
					;; device driver header.  Use own segment for
					;; this purpose (but in DGROUP).

 0000				DDHeader	SEGMENT

 0000 FFFFFFFF			DiskDDHeader	DD	-1
 0004  8980					DW	DEV_CHAR_DEV OR DEV_30 OR DEVLEV_3
 0006  0000 R					DW	OFFSET AsmStrategy
 0008  0000					DW	0
 000A  44 53 4C 45 45 50			DB	"DSLEEPS$"
       53 24
 0012  0000					DW	0
 0014  0000					DW	0
 0016  0000					DW	0
 0018  0000					DW	0
 001A  0000001B					DD	DEV_INITCOMPLETE OR DEV_ADAPTER_DD OR DEV_16MB OR DEV_IOCTL2
 001E  0000					DW	0

 0020				DDHeader	ENDS



					;; Start of code segments
					;; There is really code contained: small stubs
					;; to call C routines and save/restore registers.

 0000				_TEXT		SEGMENT
					ASSUME	CS:StaticGroup

					EXTRN	_Strategy : NEAR	; C routines
					EXTRN	_Timer : NEAR


 0000				AsmStrategy	PROC	FAR
 0000  06					push	es
 0001  53					push	bx
 0002  E8 0000 E				call	_Strategy
 0005  83 C4 04					add	sp, 4
 0008  CB					retf
 0009				AsmStrategy	ENDP


 0009				_AsmTimer	PROC	FAR
 0009  9C					pushf
 000A  60					pusha			; timer has to save ALL!
 000B  1E					push	ds
 000C  06					push	es
 000D  FB					sti			; run with interrupts enabled

 000E  B8 ---- R				mov	ax, DGROUP
 0011  8E D8					mov	ds, ax
 0013  E8 0000 E				call	_Timer

 0016  07					pop	es
 0017  1F					pop	ds
 0018  61					popa
 0019  9D					popf
 001A  CB					ret
 001B				_AsmTimer	ENDP




 001B				_CallADD	PROC	NEAR
 001B  C8 0000 00				enter	0,0
 001F  60					pusha
 0020  1E					push	ds

 0021  C4 5E 08					les	bx,[bp+8]
 0024  06					push	es
 0025  53					push	bx
 0026  FF 5E 04					call	DWORD PTR [bp+4]
 0029  83 C4 04					add	sp,4

 002C  1F					pop	ds
 002D  61					popa
 002E  C9					leave
 002F  C3					ret
 0030				_CallADD	ENDP


 0030				_TEXT		ENDS


					END
Microsoft (R) Macro Assembler Version 6.00B 		    03/04/01 13:03:24
Segments.asm						     Symbols 2 - 1




Macros:

                N a m e                 Type

Dev_FuncLev  . . . . . . . . . .	Proc


Structures and Unions:

                N a m e                  Size
                                         Offset      Type

SysDev3  . . . . . . . . . . . .	 001E
  SysDevBef3 . . . . . . . . . .	 0000	     Byte
  SDevCaps . . . . . . . . . . .	 001A	     DWord
SysDev . . . . . . . . . . . . .	 001A
  SDevNext . . . . . . . . . . .	 0000	     DWord
  SDevAtt  . . . . . . . . . . .	 0004	     Word
  SDevStrat  . . . . . . . . . .	 0006	     Word
  SDevInt  . . . . . . . . . . .	 0008	     Word
  SDevName . . . . . . . . . . .	 000A	     Byte
  SDevProtCS . . . . . . . . . .	 0012	     Word
  SDevProtDS . . . . . . . . . .	 0014	     Word
  SDevRealCS . . . . . . . . . .	 0016	     Word
  SDevRealDS . . . . . . . . . .	 0018	     Word


Segments and Groups:

                N a m e                 Size     Length   Align   Combine Class

DGROUP . . . . . . . . . . . . .	GROUP
DDHeader . . . . . . . . . . . .	16 Bit	 0020	  Word	  Public  'CONST'	 
CONST  . . . . . . . . . . . . .	16 Bit	 0000	  DWord	  Public  'CONST'	 
CONST2 . . . . . . . . . . . . .	16 Bit	 0000	  DWord	  Public  'CONST'	 
LIBDATA  . . . . . . . . . . . .	16 Bit	 0000	  DWord	  Public  'DATA'	
_DATA  . . . . . . . . . . . . .	16 Bit	 0000	  Word	  Public  'DATA'	
_BSS . . . . . . . . . . . . . .	16 Bit	 0000	  Word	  Public  'BSS'  
SGROUP . . . . . . . . . . . . .	GROUP
SwapData . . . . . . . . . . . .	16 Bit	 0000	  DWord	  Public  'FAR_DATA'  
StaticGroup  . . . . . . . . . .	GROUP
_TEXT  . . . . . . . . . . . . .	16 Bit	 0030	  DWord	  Public  'CODE'	
CODE . . . . . . . . . . . . . .	16 Bit	 0000	  DWord	  Public  'CODE'	
LIBCODE  . . . . . . . . . . . .	16 Bit	 0000	  DWord	  Public  'CODE'	
SwapCode . . . . . . . . . . . .	16 Bit	 0000	  DWord	  Public  'SWAP_CODE'  


Procedures,  parameters and locals:

                N a m e                 Type     Value    Attr

AsmStrategy  . . . . . . . . . .	P Far	 0000	  _TEXT	Length= 0009 Private
_AsmTimer  . . . . . . . . . . .	P Far	 0009	  _TEXT	Length= 0012 Public
_CallADD . . . . . . . . . . . .	P Near	 001B	  _TEXT	Length= 0015 Public


Symbols:

                N a m e                 Type     Value    Attr

DEBUG  . . . . . . . . . . . . .	Text   	 
DEVLEV_0 . . . . . . . . . . . .	Number	 0000h	 
DEVLEV_1 . . . . . . . . . . . .	Number	 0080h	 
DEVLEV_2 . . . . . . . . . . . .	Number	 0100h	 
DEVLEV_3 . . . . . . . . . . . .	Number	 0180h	 
DEV_16MB . . . . . . . . . . . .	Number	 0002h	 
DEV_30 . . . . . . . . . . . . .	Number	 0800h	 
DEV_ADAPTER_DD . . . . . . . . .	Number	 0008h	 
DEV_ADD_ON . . . . . . . . . . .	Number	 0020h	 
DEV_CBNAME . . . . . . . . . . .	Number	 0008h	 
DEV_CHAR_DEV . . . . . . . . . .	Number	 8000h	 
DEV_CIN  . . . . . . . . . . . .	Number	 0001h	 
DEV_CLOCK  . . . . . . . . . . .	Number	 0008h	 
DEV_COUT . . . . . . . . . . . .	Number	 0002h	 
DEV_FCNLEV . . . . . . . . . . .	Number	 0380h	 
DEV_GIOCTL . . . . . . . . . . .	Number	 0040h	 
DEV_INITCOMPLETE . . . . . . . .	Number	 0010h	 
DEV_IOCTL2 . . . . . . . . . . .	Number	 0001h	 
DEV_IOCTL  . . . . . . . . . . .	Number	 4000h	 
DEV_NON_IBM  . . . . . . . . . .	Number	 2000h	 
DEV_NULL . . . . . . . . . . . .	Number	 0004h	 
DEV_PARALLEL . . . . . . . . . .	Number	 0004h	 
DEV_SAVERESTORE  . . . . . . . .	Number	 0020h	 
DEV_SHARE  . . . . . . . . . . .	Number	 1000h	 
DEV_SPEC . . . . . . . . . . . .	Number	 0010h	 
DiskDDHeader . . . . . . . . . .	DWord	 0000	  DDHeader	
_Strategy  . . . . . . . . . . .	L Near	 0000	  _TEXT	External
_Timer . . . . . . . . . . . . .	L Near	 0000	  _TEXT	External

	   0 Warnings
	   0 Errors
